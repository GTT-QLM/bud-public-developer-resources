securitySchemes:
  Basic:
    type: http
    scheme: basic

  OAuth2:
    type: oauth2
    flows:
      clientCredentials:
        tokenUrl: /v1/oauth/token
        scopes: {}
    description: |

      Authentication flow:

      1. Perform OAuth2 Client Credentials authentication using API Credentials (`client_id`,`client_secret`) to obtain an `access_token` against `/v1/oauth/token` endpoint,
      2. Use `access_token` as Bearer Authorisation for every other API request,
      3. Include `X-Client-Id` (=client_id) within the header of every API request
      4. Note that some of the requests may also require `X-Customer-Id` or `X-Customer-Id` and `X-Customer-Secret` to be provided within the request header.

      ### Examples
      Obtain OAuth2 `access_token` and `refresh_token` using `grant_type=client_credentials` and HTTP Basic auth header

      ```
      curl --basic --user {{client_id}}:{{client_secret}} \
        -X POST https://api-sandbox.thisisbud.com/v1/oauth/token \
        -H 'Content-Type: application/x-www-form-urlencoded' \
        -d grant_type=client_credentials
      ```

      Successful response:
      ```
      {
        "operation_id": "oauth_token_post",
        "data": {
          "access_token": "dd0c17e3fd6d2ce94aa091257a3ea393b4f9b5cf3d3e998f07dc9826da86ff15",
          "token_type": "bearer",
          "expires_in": 3600,
          "refresh_token": "fac32cca7559d9f6e8f1dfe9a99c71fa1dcfeb482bedf287d7934d2667ae54b3"
        }
      }
      ```

      Refresh `access_token` token using `refresh_token` against `/v1/oauth/token` endpoint with `grant_type=refresh_token`

      ```
      curl -X POST \
        https://api-sandbox.thisisbud.com/v1/oauth/token \
        -H 'Content-Type: application/x-www-form-urlencoded' \
        -H 'X-Client-Id: {{client_id}}' \
        -d 'grant_type=refresh_token&refresh_token={{refresh_token}}'
      ```

      Successful response:
      ```
      {
          "operation_id": "oauth_token_post",
          "data": {
              "access_token": "cc0c17e3fd6d2ce94aa091257a3ea393b4f9b5cf3d3e998f07dc9826da86ff94",
              "token_type": "bearer",
              "expires_in": 3600,
              "refresh_token": "ffc30cca7559d9f6e8f1dfe9a99c71fa1dcfeb482bedf287d7934d2667ae54b3"
          }
      }
      ```

parameters:

  ClientId:
    in: header
    name: X-Client-Id
    schema:
      type: string
    required: true
    description: "The API Client Identifier (Service Application Identifier)."

  CustomerId:
    in: header
    name: X-Customer-Id
    schema:
      type: string
      format: uuid
    required: true
    description: "Bud Customer identifier"

  PathCustomerID:
    in: path
    name: customer_id
    schema:
      type: string
      format: uuid
    required: true
    description: "Bud Customer identifier"

  CustomerSecret:
    in: header
    name: X-Customer-Secret
    schema:
      type: string
    required: true
    description: "Bud Customer secret"

  CustomerSecretOptional:
    in: header
    name: X-Customer-Secret
    schema:
      type: string
    required: false
    description: "Bud Customer secret"

  FutureTransactionsMonthsProjection:
    in: query
    name: months
    schema:
      type: integer
      default: 3
    required: false
    example: 6
    description: To specify how many months we return the prediction for, the default is 3 months.

  FutureTransactionsChangePercentage:
    in: query
    name: change_percentage[subcategory]
    schema:
      type: string
      default: change_percentage[all]=0.0
    required: false
    description: To set a percentage value used in the calculation of the forecasted amount for the future transactions categorised with specific transaction subcategory; for example `change_percentage[loans]=2.0`. This can be a positive or negative float number. To apply the same percentage to all transactions use the `subcategory=all`.

  TaskId:
    in: path
    name: task_id
    schema:
      type: string
      format: uuid
    required: true
    description: "Bud Task identifier"

  ConnectionTaskId:
    in: path
    name: connection_task_id
    schema:
      type: string
      format: uuid
    required: true
    description: "Unique identifier related to a specific connection task"

  HeaderFrom:
    in: header
    name: X-From
    required: false
    schema:
      type: string
    example: "2022-02-28"
    description: "Date (YYYY-MM-DD) from which the transactions should be returned from, this works in pair with the 'X-To' parameter"

  HeaderTo:
    in: header
    name: X-To
    required: false
    schema:
      type: string
    example: "2022-03-30"
    description: "Date (YYYY-MM-DD) from which the transactions should be returned to, this works in pair with the 'X-From' parameter"

  TenancyId:
    in: path
    name: tenancy_id
    schema:
      type: string
      format: uuid
    required: true
    description: "Unique identifier of tenancy"

  StatusUtilitySwitchRequest:
    in: path
    name: fulfillment_id
    schema:
      type: string
      format: uuid
    required: true
    description: "Fulfillment Id to check the request status"

  ProviderName:
    in: path
    name: provider_name
    schema:
      type: string
    required: true
    description: "Bud provider name"

  OBProvider:
    in: path
    name: provider
    schema:
      type: string
    required: true
    description: "Name of the provider (banking institution)"

  OBAccountId:
    in: header
    name: X-Account-Id
    schema:
      type: string
    required: false
    description: "The identifier of the Open Banking Account to retrieve"

  From:
    in: header
    name: X-From
    schema:
      type: string
    example: 2022-01-29
    description: "Transaction from date"

  To:
    in: header
    name: X-To
    schema:
      type: string
    example: 2022-03-29
    description: "Transaction to date"

  SupplierId:
    in: path
    name: supplier_id
    schema:
      type: string
    required: true
    description: "Supplier identifier"

  FuelType:
    in: query
    name: fuel_type
    schema:
      $ref: "#/schemas/FuelType"
    description: Filters results by fuel type.

  PaymentId:
    in: path
    name: payment_id
    required: true
    schema:
      type: string
    description: "Bud Payment Identifier"

  Today:
    in: header
    name: X-Today
    required: false
    schema:
      type: string
    example: "2019-03-30"
    description: "Date (YYYY-MM-DD) to treat as the current day. Use this with `X-From` and `X-To` to find historical warnings (e.g. warnings that you would have received last week)"

  FromMonth:
    in: header
    name: X-From
    required: false
    schema:
      type: string
    example: "2019-02"
    description: "Month (`YYYY-MM`) from which the transactions should be returned from, this works in pair with the `X-To` parameter."

  ToMonth:
    in: header
    name: X-To
    required: false
    schema:
      type: string
    example: "2019-03"
    description: "Month (`YYYY-MM`) from which the transactions should be returned to, this works in pair with the `X-From` parameter."

  FromMonthSpendingGroups:
    in: header
    name: X-From-Month
    required: false
    schema:
      type: string
    example: "2019-02"
    description: "Month (`YYYY-MM`) from which the transactions should be returned from, this works in pair with the `X-To` parameter. This X-From-Month format of (YYYY-MM) will become the default format in 3 months see the release notes for more details."

  ToMonthSpendingGroups:
    in: header
    name: X-To-Month
    required: false
    schema:
      type: string
    example: "2019-03"
    description: "Month (`YYYY-MM`) from which the transactions should be returned to, this works in pair with the `X-From` parameter. This X-To-Month format of (YYYY-MM) will become the default format in 3 months see the release notes for more details."

  HeaderFromSpendingGroups:
    in: header
    name: X-From
    required: false
    schema:
      type: string
    example: "2022-02-28"
    description: "Date (`YYYY-MM-DD`) from which the transactions should be returned from, this works in pair with the `X-To` parameter. This X-From format of (YYYY-MM-DD) will still be backwards compatiable for 3 months see the release notes for more details."

  HeaderToSpendingGroups:
    in: header
    name: X-To
    required: false
    schema:
      type: string
    example: "2022-03-30"
    description: "Date (`YYYY-MM-DD`) from which the transactions should be returned to, this works in pair with the `X-From` parameter. This X-To format of (YYYY-MM-DD) will still be backwards compatiable for 3 months see the release notes for more details."

  URLMonthFrom:
    in: query
    name: month_from
    required: false
    schema:
      type: string
    example: "2019-02"
    description: "Month (`YYYY-MM`) from which the transactions should be returned from, this works in pair with the `month_to` parameter."

  URLMonthTo:
    in: query
    name: month_to
    required: false
    schema:
      type: string
    example: "2019-03"
    description: "Month (`YYYY-MM`) from which the transactions should be returned to, this works in pair with the `month_from` parameter."
  
  Delta:
    in: header
    name: X-Delta
    schema:
      type: number
      minimum: 0
      default: 3
    description: "Number of days error to match regular payments when they could be off by a few days from month to month.
                  E.g. if your predicted rent payment is on `25th` but you paid it on `23rd`, a delta of `2` would treat your
                  predicted transaction for `25th` as `Booked/Pending`."
                  
  HeaderCurrency:
    in: header
    name: X-Currency
    required: false
    schema:
      type: string
      default: "GBP"
    example: "GBP"
    description: "ISO code for the currency of the transactions that will be aggregated over."

  IngestAccountsContentType:
    in: header
    name: Content-Type
    required: true
    schema:
      type: string
      enum:
        - application/bud-accounts+json
    description: "Define the transactions' format for this request."

  IngestTransactionsContentType:
    in: header
    name: Content-Type
    required: true
    schema:
      type: string
      enum:
        - application/bud-transaction-v2+json
    description: "Define the transactions' format for this request."

  IngestTransactionsV2ContentType:
    in: header
    name: Content-Type
    required: true
    schema:
      type: string
      enum:
        - application/bud-transaction-v3+json
        - application/bud-transaction-v2+json
    description: "Define the transactions' format for this request."

  PaymentProviderRegionFilter:
    in: query
    name: country
    description: "Country filter as a comma separated list of country codes following the ISO 3166 alpha-3 code format."
    example: "GBR,DEU"
    schema:
      type: string

  PaymentProviderServiceFilter:
    in: query
    name: product
    description: "Product filter as a comma separated list of bud supported products"
    schema:
      $ref: "#/schemas/PaymentServices"

  PaymentProviderTypeFilter:
    in: query
    required: false
    name: type
    description: "A comma separated list of Bud support provider types to be shown. If no filter is applied, all the providers are returned."
    schema:
      type: "string"
      enum:
        - "sandbox"
        - "business"
        - "retail"
      
  EventPathParameter:
    in: path
    name: event
    description: "The event to subscribe to"
    required: true
    schema:
      $ref: "components.yaml#/schemas/Event"

  PaymentIdHeader:
    in: header
    name: X-Payment-Id
    required: false
    description: "Payment ID filter"
    example: "84470aa9-71a2-4da2-8fa4-660adbf2c9b2"
    schema:
      type: string

  PageNumber:
    in: header
    name: X-Page-Number
    required: false
    description: "Page number filter"
    example: "1"
    schema:
      type: string

  PaymentSenderProviders:
    in: header
    name: X-Sender-Providers
    required: false
    description: "comma separated list of providers name filter"
    example: "Lloyds,Nationwide"
    schema:
      type: string

  PaymentStatusCodes:
    in: header
    name: X-Status-Codes
    required: false
    description: "comma separated list of status codes filter"
    example: "CREATED,SETTLED"
    schema:
      type: string

  PaymentDateFrom:
    in: header
    name: X-Date-From
    description: "Date from filter"
    example: "2020-06-01T15:00:00Z"
    schema:
      type: string

  PaymentDateTo:
    in: header
    name: X-Date-To
    description: "Date to filter"
    example: "2020-06-01T15:00:00Z"
    schema:
      type: string

  PaymentAmountFrom:
    in: header
    name: X-Amount-From
    required: false
    description: "Amount from filter"
    example: "10.00"
    schema:
      type: string

  PaymentAmountTo:
    in: header
    name: X-Amount-To
    required: false
    description: "Amount to filter"
    example: "10000.00"
    schema:
      type: string

  OBProvidersQueryTypeFilter:
    in: query
    required: false
    name: "types"
    description: "A comma separated list of Bud support provider types to be shown. If no filter is applied, all the providers are returned."
    schema:
      type: "string"
      enum:
        - "sandbox"
        - "business"
        - "retail"

  InsightId:
    in: path
    required: true
    name: "insight_id"
    description: "Insight identifier"
    schema:
      type: "string"
      format: uuid

  SignatureHeaderParameter:
    in: header
    name: X-Signature
    description: "The signed request body JWT"
    required: true
    schema:
      type: "string"

  SigningIdHeaderParameter:
    in: header
    name: X-Signing-ID
    description: "The public key ID which should be used to verify the X-Signature header. Bud's list of public keys can be found at https://assets.thisisbud.com/bud-callback.jwks"
    required: true
    schema:
      type: "string"

  ConsentStatus:
    in: query
    name: status
    schema:
      type: string
      enum:
        - "all"
    required: false
    description: Filter connections by connection status. When ommited, only active Authorised connections will be shown.

  ConsentId:
    in: path
    name: consent_id
    schema:
      type: string
    required: true
    description: "Bud Consent identifier"

  DisableSynchronous:
    in: header
    name: X-Disable-Synchronous
    description: "If provided as true, the task will not be processed synchronously"
    schema:
      type: "string"
      enum:
        - "true"

  DateFrom:
    in: query
    name: "date_from"
    schema:
      $ref: "#/schemas/DateTimeISO8601"

  DateTo:
    in: query
    name: "date_to"
    schema:
      $ref: "#/schemas/DateTimeISO8601"

  Criteria:
    in: query
    name: "criteria"
    schema:
      type: array
      items:
        $ref: "#/schemas/AffordabilityCriteria"

  MerchantsTotalsIncludeCategories:
    in: header
    name: X-Include-Categories
    schema:
      type: string
    example: "shopping,entertainment"
    description: "Comma-separated list of transaction categories to include in the total"

  MerchantsTotalsExcludeCategories:
    in: header
    name: X-Exclude-Categories
    schema:
      type: string
    example: "bills,finances"
    description: "Comma-separated list of transaction categories to exclude from the total"

  QueryFromDate:
    in: query
    name: from
    schema:
      type: string
    example: "2019-02-29"
    description: "Filter from this date (format: `YYYY-MM-DD`)."

  QueryToDate:
    in: query
    name: to
    schema:
      type: string
    example: "2019-02-29"
    description: "Filter to this date (format: `YYYY-MM-DD`)."

  QueryCurrency:
    in: query
    name: currency
    schema:
      type: string
    example: "GBP"
    description: "Use this parameter to filter the results returned on the `currency` associated with each result. Multiple values are accepted. If this parameter is not provided then results of any `currency` will be returned."

  QueryProvider:
    in: query
    name: provider
    schema:
      type: string
    example: "BankOfBud"
    description: Use this parameter to filter the results returned on the `provider` associated with each result. Multiple values are accepted. If this parameter is not provided then results of any `provider` will be returned."

  PathAccountID:
    in: path
    name: account_id
    schema:
      type: string
    required: true
    description: "The account ID to retrieve data for."

schemas:

  #### Aggregation API Schemas

  OBProvider:
    title: Open Banking Providers
    type: object
    required:
      - provider
      - display_name
      - maintenance_window
      - maintenance_status
      - icon
      - regions
    properties:
      provider:
        type: string
        description: "The name of the available open banking provider used as an identifier throughout Bud's API services"
      display_name:
        type: string
        description: "The name of the available open banking provider used for display purposes"
      maintenance_window:
        $ref: "#/schemas/MaintenanceWindowObject"
      maintenance_status:
        type: string
        description: "The status of the maintenance window associated with the provider"
        enum:
          - active
          - inactive
      icon:
        type: string
        description: "A URL for the icon of the corresponding provider"
      regions:
        type: array
        description: "A list of the different regions (i.e. country codes in ISO 3166 format) associated with the open banking provider"
        items:
          type: string

  MaintenanceWindowObject:
    title: Maintenance Window Object
    type: object
    description: "Details on any scheduled maintenance windows"
    nullable: true
    properties:
      start:
        type: string
        description: "The start datetime (ISO8601) of the maintenance window"
      end:
        type: string
        description: "The end datetime (ISO8601) of the maintenance window"

  OpenBankingAuthoriseRequest:
    title: Provider
    type: object
    description: "Expected request payload structure"
    required:
      - provider
    properties:
      provider:
        type: string
        description: "The identifier of the ASPSP (bank) the Customer is requesting the authorisation URL for. This should be a provider value returned from a call to [Retrieve OB Providers](#tag/Create-OB-Connection-TSP/operation/open_banking_providers_get)"
      redirect_url:
        type: string
        description: "This is the url that your Customer will be redirected to when using the Bud Connect product. If you wish to use your own license and callback infrastructure this parameter will have no effect and the provider_redirect_url parameter should be used instead."
      provider_redirect_url:
        type: string
        description: "This is the url that your Customer will be redirected to once they have authorised with the relevant provider. This should only be used when using your own license and wish to use the Submit Authorisation Codes endpoint. If you wish to use Bud's call back then the redirect_url must be provided."
      consent_id:
        type: string
        description: "(Optional) Uses the previous consent id of your customer to re-authenticate their consent."


  OpenBankingRefreshResponse:
    title: Refresh Task Response
    type: object
    description: "Expected response structure"
    required:
      - "operation_id"
      - "data"
      - "metadata"
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        $ref: "#/schemas/TaskView"
      metadata:
        type: "object"
        description: "Refresh Response Metadata"
        properties:
          has_new_transactions:
            type: boolean
            description: |
              To describe whether new transactions have been pulled from the relevant
              ASPSP during the refresh. Note that if this field is set to `false` then
              there is no need to make a request to any other downstream endpoints to
              collect the data related to that customer.
          status:
            $ref: "#/schemas/TaskStatusCaps"
          next_url:
            description: "The URL to call to obtain the results of the task"
            type: "string"
          next_url_delay:
            description: "Recommended delay in milliseconds before next call"
            type: "integer"

  OpenBankingConnectResponse:
    title: Open Banking Connect Response
    type: object
    description: "Expected response structure"
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        $ref: "#/schemas/GetOBConnectData"
      metadata:
        type: object
        properties:
          status:
            type: string
            enum:
              - Failed
              - Pending
              - Completed
          next_url:
            description: "The URL to call to obtain the results of the task"
            type: string
          next_url_delay:
            description: "Recommended delay in milliseconds before next call"
            type: number

  GetOBRefreshData:
    title: Open Banking Refresh Status
    type: object
    description: "Expected response of the GET refresh status endpoint given a valid taskId"
    required:
      - "provider"
      - "step"
      - "text"
      - "reconnect_required"
    properties:
      reconnect_required:
        type: "boolean"
        description: "If true, the customer must re-connect to the specified provider"
      provider:
        type: "string"
        description: "The name of the provider the task is trying to refresh"
      step:
        type: "integer"
        description: "At what step or stage the refresh process is at"
        enum:
          - 1
          - 2
          - 3
          - 4
      text:
        type: "string"
        description: "A description of what stage the refresh process is at"
        enum:
          - "Fetching access token"
          - "Fetching accounts"
          - "Fetching balances and transactions"
          - "Completed"

  OpenBankingRefreshRequest:
    title: Open Banking Refresh Payload
    type: object
    description: "Expected request payload structure"
    required:
      - "provider"
    properties:
      provider:
        type: string
        description: "The name of the provider the task is trying to connect to"
      from:
        type: string
        description: "The datetime (ISO 8601) that defines the time since when the Customer's data needs to be collected. Defaults to the datetime of the last pull of transactions less seven days to account for any potential changes to the most recent set of transactions"
      to:
        type: string
        description: "The datetime (ISO 8601) that defines the time up to which the Customer's data needs to be collected. Defaults to the current datetime"

  TaskCreatedResponseOB:
    title: Task Created Response
    type: object
    description: "Expected response structure"
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        $ref: "#/schemas/TaskCreatedView"
      metadata:
        $ref: "#/schemas/AsyncTaskMetadata"

  AsyncTaskMetadata:
    title: Created Task Metadata
    type: object
    description: "Metadata associated with an asynchronous task"
    properties:
      next_url:
        type: string
        description: "The URL to call to obtain the results of the task"
      next_url_delay:
        type: number
        description: "The time in milliseconds that the client should wait before polling the relevant GET endpoint with the above task id"

  GetOBConnectResponse:
    title: Open Banking Connect Async Response
    type: object
    description: "Expected response structure"
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        $ref: "#/schemas/GetOBConnectData"
      metadata:
        $ref: "#/schemas/TaskManagerMetaData"

  GetOBConnectData:
    title: Open Banking Synchronisation Status
    type: object
    description: "Status of an Open Banking Aggregation connect or refresh task"
    required:
      - provider
      - step
      - text
    properties:
      provider:
        type: string
        description: "The name of the provider the task is trying to connect to"
      step:
        type: integer
        description: "At what step or stage the connection process is at"
        enum:
          - 1
          - 2
          - 3
          - 4
      text:
        type: string
        description: "A description of what stage the connection process is at"
        enum:
          - Fetching access token
          - Fetching accounts
          - Fetching balances and transactions
          - Completed

  AuthorisationCodesRequest:
    title: "Authorisation Codes Request Payload"
    type: object
    required:
      - state
    additionalProperties: true
    properties:
      state:
        type: string
        description: "The task ID"
      code:
        type: string
        description: "Code parameter returned in redirect parameters"

  AuthorisationCodesResponse:
    title: "Authorisation Codes Response Payload"
    type: "object"
    required:
      - "operation_id"
      - "data"
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: "object"
        description: "Details regarding the response object for the authorisation codes response."
        properties:
          task_id:
            $ref: "#/schemas/TaskId"
          provider:
            type: string
            description: "Name of the provider (banking institution)"
          status:
            $ref: "#/schemas/IngestResponseStatus"
          result:
            type: "string"
            enum: ["success", "auth_invalid", "auth_expired", "provider_failure", "internal_error"]

  GetOBConsentsResponse:
    title: "Available Open Banking Consents"
    type: "object"
    required:
      - "operation_id"
      - "data"
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: "array"
        description: "List of available consents"
        items:
          $ref: "#/schemas/GetOBConsentsResponseDataItem"
      metadata:
        $ref: "#/schemas/ResultsMetadata"

  GetOBConsentsResponseDataItem:
    title: "Open Banking Consent"
    type: "object"
    description: "Schema to define a given Open Banking consent"
    required:
      - "id"
      - "customer_id"
      - "provider"
      - "transaction_from_date"
      - "expiration_date"
      - "created_at"
      - "last_consented_on"
      - "permissions"
      - "raw_version"
      - "raw_format"
    properties:
      id:
        type: "string"
        description: "Open Banking consent unique identifier"
      customer_id:
        type: "string"
        description: "Bud customer unique identifier, owner of the consent"
      provider:
        type: "string"
        description: "Open Banking provider who the consent refers to"
      transaction_from_date:
        type: "string"
        description: "Date and time from when the transactions can be retrieved. ISODateTime."
      expiration_date:
        type: "string"
        description: "Date and time when the consent will expired. ISODateTime."
      created_at:
        type: "string"
        description: "Date and time when the consent was created. ISODateTime."
      last_consented_on:
        type: "string"
        description: "Date and time when the consent was last consented on. ISODateTime."
      status:
        type: "string"
        description: "To describe the status of the consent. Note that the query parameter `status=all` must be provided to be shown consents that have a status of anything but `authorised`"
        enum:
          - 'awaiting_authorisation'
          - 'authorised'
          - 'rejected'
          - 'revoked'        
      permissions:
        type: "array"
        description: "List of granted permissions"
        items:
          type: "string"
          enum:
            - "ReadAccounts"
            - "ReadBalances"
            - "ReadTransactions"
      raw_version:
        type: "string"
        description: "Version of the raw format of the consent"
      raw_format:
        type: "string"
        description: "The format of the consent returned in the raw attribute"
        enum:
          - "obie"
          - "amex"
          - "starling"
      raw:
        type: "object"
        nullable: true
        description: "The raw consent as returned by the provider"
      account_ids:
        type: array
        description: A list of the different account identifiers that are associated with this particular consent object. Note that you will have to provide the customer secret in the request headers in order to retrieve this field against a consent object.
        items:
          type: string
      last_synced_at:
        type: string
        description: The date at which the last data refresh (sync) occured for this consent object

  RevokeAccountAccessIntentRequest:
    title: Revoke Account Access Intent Payload
    type: object
    required:
      - provider
    properties:
      provider:
        type: string
        description: "The name of the provider (ASPSP) the Customer is requesting to have their consent revoked for"

  RevokeAccountAccessIntentTastStatusResponse:
    title: Revoke Account Access Intent Response
    type: object
    description: "Expected response from a get status request for a revoke account access intent call"
    required:
      - operation_id
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: object
      metadata:
        type: object
        required:
          - status
        properties:
          status:
            type: string
          error_code:
            type: integer
          error_message:
            type: string

  TaskCreatedResponse:
    title: Task Created Response
    type: object
    description: "Expected response structure"
    required:
      - operation_id
      - data
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        $ref: "#/schemas/TaskCreatedView"
      metadata:
        type: object

  TaskId:
    title: Task Id
    type: string
    description: "UUID used to identify an asynchronous task"

  TaskView:
    title: Task View
    description: "A task view."
    type: object
    properties:
      task_id:
        $ref: "#/schemas/TaskId"
      provider:
        type: string
        description: "The provider (ASPSP) associated with this task"
      result:
        $ref: "#/schemas/ConnectResultCodes"
      status:
        $ref: "#/schemas/TaskStatusCaps"
      reconnect_required:
        $ref: "#/schemas/ReconnectRequired"
      step:
        type: number
        description: "The step that this task is currently where 4 = Completed."
        enum:
          - 1
          - 2
          - 3
          - 4
      text:
        type: string
        description: "A description of the step this task is currently at. In order from step 1 to step 4."
        enum:
          - Fetching access token
          - Fetching accounts
          - Fetching balances and transactions
          - Completed

  TaskCreatedView:
    title: Task Created View
    description: "Standard successful task created response."
    type: object
    properties:
      task_id:
        $ref: "#/schemas/TaskId"
      provider:
        type: string
        description: "The provider (ASPSP) associated with this task"

  TaskManagerMetaData:
    title: Task Status Metadata
    type: object
    description: "Standard metadata response from the OB task manager"
    required:
      - status
    properties:
      status:
        type: string
        description: "The status of the job associated with the specified task id"
        enum:
          - Completed
          - Pending
          - Failed

  TaskAuthoriseResponse:
    title: Open Banking Authorise Request Response
    type: object
    description: "Expected response structure"
    required:
      - operation_id
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        $ref: "#/schemas/TaskAuthorise"
      metadata:
        $ref: "#/schemas/TaskManagerMetaData"

  TaskAuthorise:
    title: Open Banking Authorise Response
    type: object
    description: "Result of GET authorise taskId"
    required:
      - url
    properties:
      provider:
        type: string
        description: "Name of the provider (banking institution)"
      result:
        type: string
        description: "The final result of the job associated with the specified task id"
        enum:
          - success
          - failed
      status:
        type: string
        description: "The status of the job associated with the specified task id"
        enum:
          - Completed
          - Pending
          - Failed
      task_id:
        $ref: "#/schemas/TaskId"
      url:
        type: string
        description: "The authentication URL for a given bank"

  BadRequestResponse:
    title: Bad Request Response
    type: object
    description: "Expected response structure"
    required:
      - operation_id
      - code_id
      - message
      - errors
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      code_id:
        type: string
        description: "A descriptive enough string that is linked to the reason for the error."
      message:
        type: string
      errors: 
        $ref: "#/schemas/Error"
  
  BadRequestNotFoundResponse:
    title: Bad Request Not Found Response
    type: object
    required:
      - operation_id
      - code_id
      - message
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      code_id:
        type: string
        description: "A descriptive enough string that is linked to the reason for the error."
      message:
        type: string
        description: "An actual user friendly error message."

  ServerErrorResponse:
    title: Server Error Response
    type: object
    required:
      - operation_id
      - code_id
      - message
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      code_id:
        type: string
        description: "A descriptive enough string that is linked to the reason for the error."
      message:
        type: string
        description: "An actual user friendly error message."
      errors:
        anyOf:   
          - $ref: "#/schemas/Error"
          - $ref: "#/schemas/Errors"

  Error:
    title: Error Object
    type: object
    description: "Contains a field specific error message"

  Errors:
    title: Array of Error Object
    description: "Contains a list of error messages"
    items:
      $ref: "#/schemas/Error"

  OperationId:
    title: Operation Id Field
    type: string
    description: "A unique identifier/reference associated with a given endpoint/operation"

  BudResponseObject:
    title: Generic Bud Response Object
    type: object
    description: "The generic Bud response object"
    required:
      - operation_id
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"

  AuthGatewayURLRequest:
    title: Authorisation Gateway URL Request Payload
    type: object
    required:
      - redirect_url
    properties:
      redirect_url:
        type: string
        description: "URL where the user will be redirected to once they have completed the TPP Connection flow. This can be a web based URL or a mobile application internal URL."
        nullable: false
        maxLength: 2083
      providers:
        type: "array"
        nullable: true
        description: |
          Specify a list of one or more providers that will be displayed to the customer during the connection flow. If only a single provider is given, the customer will no longer be shown the select provider screen. 

          Note, that these must match the `provider_id` returned by the Retrieve OB Providers endpoint.
        items:
          type: "string"
      provider_types:
        $ref: '#/schemas/ProviderTypes'
      connect_more_accounts_button:
        type: "boolean"
        nullable: true
        description: "When enabled, the customer will see an additional button at the end of the connection flow that allows them to start the connection flow again in order to connect to a new provider."

  AuthGatewayURLRequestv2:
    title: Authorisation Gateweay URL Request Payload
    type: object
    required:
      - redirect_url
    properties:
      redirect_url:
        type: string
        description: "URL where the user will be redirected to once they have completed the TPP Connection flow. This can be a web based URL or a mobile application internal URL."
        nullable: false
        maxLength: 2083
      providers:
        type: "array"
        nullable: true
        description: |
          Specify a list of one or more providers that will be displayed to the customer during the connection flow. If only a single provider is given, the customer will no longer be shown the select provider screen. 

          Note, that these must match the `provider_id` returned by the Retrieve OB Providers endpoint.
        items:
          type: "string"
      provider_types:
        $ref: '#/schemas/ProviderTypes'
      connect_more_accounts_button:
        type: "boolean"
        nullable: true
        description: "When enabled, the customer will see an additional button at the end of the connection flow that allows them to start the connection flow again in order to connect to a new provider."
      accounts_summary:
        type: "boolean"
        nullable: true
        description: "When enabled, the customer will be shown a summary screen at the endpoint of the flow that lists the names and balances of all of the accounts that the customer has active consents for (including those connected in previous sessions)."
      initial_screen:
        type: "string"
        description: "The first screen that the customer will be shown. When value is 'accounts_summary' the customer will see a ist of the names and balances of the accounts that the customer currently has active consents for. When value is 'connect_accounts', the customer will see a list of providers to connect their accounts with. By default this value is 'connect_accounts'."
        enum:
          - "accounts_summary"
          - "connect_accounts"
        nullable: true
      enable_account_data_management:
        type: "boolean"
        nullable: true
        description: "When enabled, the customer can download their data in a JSON file. The user can download their data by selecting the burger menu in the right-hand corner, above their connected accounts. This will open up a menu with the option to ‘Download Data’."
      reconfirm_consent:
        type: "boolean"
        nullable: true
        description: "When enabled, the customer will be taken through the reconfirmation of consent journey. If the customer only has one consent they will skip the consent selection screen. Once they select the option to renew their consent, Bud will either extend the consent expiry date by 90 days from today's date or (if required) send the customer to the provider to go through Strong Customer Authentication (SCA) before updating the consent expiry date."
      reconfirm_consent_redirect:
        type: "boolean"
        nullable: true
        description: "When enabled, once a customer has reconfirmed consent they will be redirected back to the client redirect_url bypassing the account summary screen. This should be used if you don’t want your customers to see the Bud account summary screen."

  AuthGatewayURLResponse:
    title: Authorisation Gateweay URL Response
    type: object
    description: "Expected response structure."
    required:
      - operation_id
      - data
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: object
        description: "Information related to the unique (customer specific) Authorisation Gateway URL"
        required:
          - url
        properties:
          url:
            type: string
            description: "An Authorisation Gateway URL, allowing Customers to connect an Open Banking provider via Bud's TPP Connection UI"
            format: url

  OBSyncWebhookBody:
    title: OB Synchronisation Webhook Payload
    type: object
    description: |
      The payload sent to the client defined webhook (via the console) when an Open Banking Synchronisation (connect
      or refresh) task completes.
    required:
      - data
    properties:
      operation_id:
        deprecated: true
        type: string
        enum: ["connect", "refresh"]
        description: Use data.task_type instead
      data:
        description: "Data Segments being loaded"
        required:
          - task_type
          - customer_id
          - task_id
          - status
        properties:
          task_id:
            description: "The task identifier that the event relates to"
            type: string
            example: "e145c656-4a90-45db-a025-af7765482c8c"
          status:
            description: "The completion status of the task"
            type: string
            enum: ["Completed", "Failed"]
          task_type:
            $ref: "#/schemas/TaskType"
          customer_id:
            description: "The customer the event relates to"
            type: string
            example: "19677d9f-90e7-44a6-a32e-566990623da4"

  OBWebhookBody:
    title: OB Webhook Payload
    type: object
    description: |
      The payload sent to the client defined webhook (via the console) when an Open Banking (connect
      or refresh) task completes.
    required:
      - data
    properties:
      data:
        description: "Data Segments being loaded"
        required:
          - task_type
          - customer_id
          - task_id
          - status
          - result
        properties:
          task_id:
            description: "The task identifier that the event relates to"
            type: string
            example: "e145c656-4a90-45db-a025-af7765482c8c"
          status:
            type: string
            description: "The general status of a task"
            enum:
              - Completed
              - Failed
          task_type:
            $ref: "#/schemas/TaskType"
          customer_id:
            description: "The customer the event relates to"
            type: string
            example: "19677d9f-90e7-44a6-a32e-566990623da4"
          result:
            $ref: "#/schemas/ConnectResultCodes"

  TaskType:
    type: string
    enum: ["connect", "refresh", "revoke", "consent-refresh"]
    description: "The type of task that completed"

  #### Customer Account API Schemas

  OBListAccountsResponse:
    title: Open Banking Retrieve Accounts
    type: object
    allOf:
      - $ref: "#/schemas/BudResponseObject"
      - type: object
        required:
          - data
          - metadata
        properties:
          data:
            description: "Information surrounding a given Customer's Open Banking Account(s)"
            items:
              $ref: "#/schemas/AccountInfo"
          metadata:
            $ref: "#/schemas/ResultsMetadata"

  AccountInfo:
    title: Open Banking Account Information
    type: object
    description: "Information surrounding a given Customer's Open Banking account"
    required:
      - account_id
      - currency
      - account_type
      - account_sub_type
      - nickname
      - details
      - provider
      - balances
      - parties
    properties:
      account_id:
        type: string
        description: "The unique id associated with the account"
      currency:
        type: string
        description: "Main currency of the account"
      account_type:
        description: "The type of the account. Note that this field is now nullable since some banks started following v3.1.7 of the Open Banking Accounts & Transactions standards"
        oneOf:
          - type: string
            enum:
              - Business
              - Personal
          - type: 'null'
      account_sub_type:
        type: string
        description: "The sub type of the account"
        enum:
          - ChargeCard
          - CreditCard
          - CurrentAccount
          - EMoney
          - Loan
          - Mortgage
          - PrePaidCard
          - Savings
      nickname:
        type: string
        description: "If any nickname has been given to the account"
      details:
        type: array
        description: "Provides the details to identify an account"
        items:
          $ref: "#/schemas/OBAccountDetails"
      provider:
        type: string
        description: "The provider of the account"
      balances:
        type: array
        description: "The balances associated with the account"
        items:
          $ref: "#/schemas/OBAccountBalance"
      parties:
        type: array
        description: "Details on the account owner(s)/holder(s) and operator(s)"
        items:
          $ref: "#/schemas/OBParties"

  OBAccountDetails:
    title: Open Banking Account Details
    type: object
    description: "Schema to define any further details about a given Open Banking account"
    properties:
      scheme_name:
        type: string
        description: "Name of the scheme associated with the account"
      identification:
        type: string
        description: "A unique identifier for the account"
      name:
        type: string
        description: "The name of the account holder"
      secondary_identification:
        type: string
        description: "Any secondary identifier associated with the account"

  OBAccountBalance:
    title: Open Banking Account Balance Information
    type: object
    description: "Information surrounding a Customer's Account Balance"
    required:
      - account_id
      - amount
      - date_time
      - type
      - credit_debit_indicator
      - credit_line
    properties:
      account_id:
        type: string
        description: "The unique id associated with the account"
      amount:
        $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
      credit_debit_indicator:
        type: string
        description: "To describe whether the account balance is in debit or credit"
      credit_line:
        items:
          $ref: "#/schemas/CreditLine"
      date_time:
        type: string
        description: "A date time string associated with the balance of the given account"
      type:
        type: string
        description: "Describes the state of the balance"
        enum:
          - ClosingAvailable
          - ClosingBooked
          - ClosingCleared
          - Expected
          - ForwardAvailable
          - Information
          - InterimAvailable
          - InterimBooked
          - InterimCleared
          - OpeningAvailable
          - OpeningBooked
          - OpeningCleared
          - PreviouslyClosedBooked

  OBParties:
    title: Parties Information
    type: object
    description: "Schema to identify information on the account owner(s)/holder(s) and operator(s)"
    properties:
      full_name:
        type: string
        description: "The full legal name of the party"
      type:
        type: string
        description: "Party type"
        enum:
          - delegate
          - joint
          - sole

  CreditLine:
    title: Open Banking Credit Line
    type: object
    description: "A set of elements used to provide details on the credit line"
    properties:
      included:
        type: boolean
        description: "Indicates whether or not the credit line is included in the balance of the account, if not present, credit line is not included in the balance amount of the account"
      amount:
        $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
      type:
        type: string
        description: "Limit type, in a coded form"
        enum:
          - Available
          - Credit
          - Emergency
          - Pre-Agreed
          - Temporary

  OBListTransactionsResponse:
    title: Open Banking List Account(s) Transactions
    type: object
    allOf:
      - $ref: "#/schemas/BudResponseObject"
      - type: object
        required:
          - data
          - metadata
        properties:
          data:
            items:
              $ref: "#/schemas/OBTransactionResponse"
          metadata:
            $ref: "#/schemas/TransactionsResultsMetadata"

  OBTransactionResponse:
    title: Open Banking Transaction Schema
    type: object
    description: "Bud transactions response array"
    required:
        - id
        - provider
        - raw_transaction
        - enrichment
    properties:
      id:
        type: string
        description: "Bud transaction identifier"
      provider:
        type: string
        description: "The provider of the account data"
      raw_transaction:
        $ref: "#/schemas/RawOBTransaction"
      enrichment:
        $ref: "#/schemas/Enrichment"

  RawOBTransaction:
    title: Open Banking Raw Transaction
    type: object
    description: "Raw information about the transaction, as taken from Open Banking."
    required:
      - account_id
      - transaction_id
      - transaction_reference
      - amount
      - credit_debit_indicator
      - status
      - booking_date_time
      - value_date_time
      - address_line
      - transaction_information
      - bank_transaction_code
      - proprietary_bank_transaction_code
      - balance
      - merchant_details
      - statement_reference
      - creditor_agent
      - creditor_account
      - debtor_agent
      - debtor_account
      - card_instrument
      - currency_exchange
      - charge_amount
      - supplementary_data
    properties:
      account_id:
        type: string
        description: "A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner."
      transaction_id:
        type: string
        description: "Unique identifier for the transaction within an servicing institution. This identifier is both unique and immutable."
      transaction_reference:
        type: string
        description: "Unique reference for the transaction. This reference is optionally populated."
      amount:
        $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
      credit_debit_indicator:
        type: string
        description: "Indicates whether the transaction is a credit or a debit entry."
        enum:
          - Credit
          - Debit
      status:
        type: string
        description: "Status of a transaction entry on the books of the account servicer."
        enum:
          - Booked
          - Pending
      booking_date_time:
        type: string
        description: "Date and time when a transaction entry is posted to an account on the account servicer's books. ISODateTime."
      value_date_time:
        oneOf:
          - type: 'null'
          - type: string
        description: "Date and time at which assets become available to the account owner in case of a credit entry, or cease to be available to the account owner in case of a debit transaction entry. ISODateTime. Null if this field is not applicable."    
      address_line:
        oneOf:
          - type: 'null'
          - type: string
        description: "Information that locates and identifies a specific address for a transaction entry, that is presented in free format text. Null if this field is not applicable."
      transaction_information:
        type: string
        description: "Further details of the transaction."
      bank_transaction_code:
        oneOf: 
          - type: 'null'
          - $ref: "#/schemas/BankTransactionCode"
      proprietary_bank_transaction_code:
        oneOf: 
          - type: 'null'
          - $ref: "#/schemas/ProprietaryBankTransactionCode"
      balance:
        oneOf:
          - type: 'null'
          - $ref: "#/schemas/Balance"
      merchant_details:
        oneOf:
          - type: 'null' 
          - $ref: "#/schemas/MerchantDetails"
      statement_reference:
        oneOf:
          - type: 'null'
          - type: array 
        items:
          type: string
      creditor_agent:
        oneOf:
          - type: 'null' 
          - $ref: "#/schemas/CreditorAgent"
      creditor_account:
        oneOf:
          - type: 'null'
          - $ref: "#/schemas/CreditorAccount"
      debtor_agent:
        oneOf:
          - type: 'null'
          - $ref: "#/schemas/DebtorAgent"
      debtor_account:
        oneOf:
          - type: 'null'
          - $ref: "#/schemas/DebtorAccount"
      card_instrument:
        oneOf:
          - type: 'null'
          - $ref: "#/schemas/CardInstrument"
      currency_exchange:
        oneOf:
          - type: 'null'
          - $ref: "#/schemas/CurrencyExchange"
      charge_amount:
        oneOf:
          - type: 'null'
          - $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
      supplementary_data:
        oneOf:
          - type: 'null'
          - type: object 
            description: "Additional information that can not be captured in the structured fields and/or any other specific block. Null if this field is not applicable."

  BankTransactionCode:
    type: object
    description: "Set of elements used to fully identify the type of underlying transaction resulting in an entry."
    properties:
      code:
        type: string
        description: "Specifies the family within a domain."
      sub_code:
        type: string
        description: "Specifies the sub-product family within a specific family."

  ProprietaryBankTransactionCode:
    type: object
    description: "Set of elements to fully identify a proprietary bank transaction code."
    properties:
      code:
        type: string
        description: "Proprietary bank transaction code to identify the underlying transaction."
      issuer:
        type: string
        description: "Identification of the issuer of the proprietary bank transaction code."

  Balance:
    type: object
    description: "Set of elements used to define the balance as a numerical representation of the net increases and decreases in an account after a transaction entry is applied to the account."
    properties:
      amount:
        $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
      credit_debit_indicator:
        type: string
        description: "Indicates whether the transaction is a credit or a debit entry."
        enum:
          - Credit
          - Debit
      type:
        type: string
        description: "Balance type, in a coded form."
        enum:
          - ClosingAvailable
          - ClosingBooked
          - ClosingCleared
          - Expected
          - ForwardAvailable
          - Information
          - InterimAvailable
          - InterimBooked
          - InterimCleared
          - OpeningAvailable
          - OpeningBooked
          - OpeningCleared
          - PreviouslyClosedBooked

  MerchantDetails:
    type: object
    description: "Details of the merchant involved in the transaction."
    properties:
      merchant_name:
        type: string
        description: "Name of the merchant for this transaction object."
      merchant_category_code:
        type: string
        description: "Category code conform to ISO 18245, related to the type of services or goods the merchant provides for the transaction."

  CreditorAgent:
    type: object
    description: "Financial institution servicing an account for the creditor."
    properties:
      scheme_name:
        type: string
        description: "Name of the identification scheme, in a coded form as published in an external list."
      identification:
        type: string
        description: "Unique and unambiguous identification of a financial institution or a branch of a financial institution."
      name:
        type: string
        description: "Name by which an agent is known and which is usually used to identify that agent."
      postal_address:
        $ref: "#/schemas/PostalAddress"

  PostalAddress:
    type: object
    description: "Information that locates and identifies a specific address, as defined by postal services."
    properties:
      address_type:
        type: string
        description: "Identifies the nature of the postal address."
        enum:
          - Business
          - Correspondence
          - DeliveryTo
          - MailTo
          - POBox
          - Postal
          - Residential
          - Statement
      building_number:
        type: string
        description: "Number that identifies the position of a building on a street."
      country:
        type: string
        description: "Nation with its own government."
      country_subdivision:
        type: string
        description: "Identifies a subdivision of a country such as state, region, county."
      department:
        type: string
        description: "Identification of a division of a large organisation or building."
      postcode:
        type: string
        description: "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting."
      street_name:
        type: string
        description: "Name of a street or thoroughfare."
      sub_department:
        type: string
        description: "Identification of a sub-division of a large organisation or building."
      town_name:
        type: string
        description: "Name of a built-up area, with defined boundaries, and a local government."
      address_line:
        type: array
        items:
          - type: string
            description: "Information that locates and identifies a specific address, as defined by postal services, presented in free format."

  CreditorAccount:
    type: object
    description: "Unambiguous identification of the account of the creditor, in the case of a debit transaction."
    properties:
      scheme_name:
        type: string
        description: "Name of the identification scheme, in a coded form as published in an external list."
      identification:
        type: string
        description: "Unique and unambiguous identification of a financial institution or a branch of a financial institution."
      name:
        type: string
        description: "Name of the account, as assigned by the account servicing institution, in agreement with the account owner in order to provide an additional means of identification of the account.  Usage: The account name is different from the account owner name. The account name is used in certain user communities to provide a means of identifying the account, in addition to the account owner's identity and the account number. OB: No name validation is expected for confirmation of payee."
      secondary_identification:
        nullable: true
        type: string
        description: "This is secondary identification of the account, as assigned by the account servicing institution. This can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination)."

  DebtorAgent:
    type: object
    description: "Financial institution servicing an account for the debtor."
    properties:
      scheme_name:
        type: string
        description: "Name of the identification scheme, in a coded form as published in an external list."
      identification:
        type: string
        description: "Unique and unambiguous identification of a financial institution or a branch of a financial institution."
      name:
        type: string
        description: "Name by which an agent is known and which is usually used to identify that agent."
      postal_address:
        $ref: "#/schemas/PostalAddress"

  DebtorAccount:
    type: object
    description: "Unambiguous identification of the account of the debtor, in the case of a debit transaction."
    properties:
      scheme_name:
        type: string
        description: "Name of the identification scheme, in a coded form as published in an external list."
      identification:
        type: string
        description: "Unique and unambiguous identification of a financial institution or a branch of a financial institution."
      name:
        type: string
        description: "Name of the account, as assigned by the account servicing institution, in agreement with the account owner in order to provide an additional means of identification of the account. Usage: The account name is different from the account owner name. The account name is used in certain user communities to provide a means of identifying the account, in addition to the account owner's identity and the account number. OB: No name validation is expected for confirmation of payee."
      secondary_identification:
        nullable: true
        type: string
        description: "This is secondary identification of the account, as assigned by the account servicing institution. This can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination)."

  CardInstrument:
    type: object
    description: "Set of elements to describe the card instrument used in the transaction."
    properties:
      card_scheme_name:
        type: string
        description: "Name of the card scheme."
      card_authorisation_type:
        type: string
        description: "The card authorisation type."
      cardholder_name:
        type: string
        description: "Name of the cardholder using the card instrument."
      identification:
        type: string
        description: "Identification assigned by an institution to identify the card instrument used in the transaction. This identification is known by the account owner, and may be masked."

  CurrencyExchange:
    type: object
    description: "Set of elements used to provide details on the currency exchange."
    properties:
      contract_identification:
        type: string
        description: "Unique identification to unambiguously identify the foreign exchange contract."
      exchange_rate:
        type: string
        description: "Factor used to convert an amount from one currency into another. This reflects the price at which one currency was bought with another currency."
      instructed_amount:
        $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
      quotation_date:
        type: string
        description: "Unix timestamp at which an exchange rate is quoted."
      source_currency:
        type: string
        description: "Currency from which an amount is to be converted in a currency conversion."
      target_currency:
        type: string
        description: "Currency into which an amount is to be converted in a currency conversion."
      unit_currency:
        type: string
        description: "Currency in which the rate of exchange is expressed in a currency exchange. In the example 1GBP = xxxCUR, the unit currency is GBP."

  Enrichment:
    type: object
    description: "Object that holds enrichment information for a transaction"
    required:
      - categoriser
      - merchant
      - regular_payments
    properties:
      categoriser:
        $ref: "#/schemas/DoubleCatCategory"
      merchant:
        oneOf:
          - type: 'null'
          - $ref: "#/schemas/MerchantID"
      regular_payments:
        $ref: "#/schemas/RegularPayments"
      carbon_tracker:
        $ref: "#/schemas/CarbonTracker"

  DoubleCatCategory:
    title: Category Enrichment Object
    type: object
    required:
      - categories
      - subcategories
    properties:
      categories:
        items:
          $ref: "#/schemas/DoubleCatCategoryList"
      subcategories:
        items:
          $ref: "#/schemas/DoubleCatSubcategoryList"

  DoubleCatCategoryList:
    title: Categories
    type: object
    properties:
      category_name:
        type: string
        description: "The name of the category returned by the model"
      confidence:
        type: string
        description: "The level of certainty that the model has predicted the category"

  DoubleCatSubcategoryList:
    title: Subcategories
    type: object
    properties:
      subcategory_name:
        type: string
        description: "The name of the sub category returned by the model"
      confidence:
        type: string
        description: "The level of certainty that the model has predicted the subcategory"

  RegularPayments:
    title: Regular Payment Object
    type: object
    description: "Details surrounding the regularity of the transaction"
    properties:
      label:
        oneOf:
        - type: 'null'  
        - type: string
        description: "A recurring transaction group identifier label associating regular transactions e.g. all Spotify transactions that are regular by the same monthly period will share the same label. If a transaction is irregular it will have a label of -1. All regular payments will be grouped by a label identifier. The format of the label includes a hash of the transaction description and the amount, followed by an integer corresponding to the number of regular groups found, i.e. <hash>-<i>. Null if this field is not applicable."
      score:
        oneOf:
        - type: 'null'
        - type: string
        description: "A floating point number between 0 and 1, to define the confidence level that the transaction is regular or not. Null if this field is not applicable."
      period:
        oneOf:
        - type: 'null'
        - type: string
        description: "To describe the period between each transaction in a regular group. Null if this field is not applicable. "
        enum:
          - daily
          - weekly
          - biweekly
          - monthly
          - quarterly
          - unknown

  MerchantID:
    title: Merchant ID Object
    type: object
    description: "Details surrounding the identified merchant of the transaction"
    properties:
      id:
        type: string
        description: "A unique ID for the identified merchant"
      merchant_name:
        type: string
        description: "The clean name of the identified merchant"
      merchant_logo:
        type: string
        description: "The merchant's logo image URL location"
      merchant_confidence:
        type: string
        description: "The level of certainty that the model has predicted the merchant"

  MerchantIdV2:
    title: Merchant ID Object
    type: object
    description: "Details surrounding the identified merchant of the transaction"
    required:
      - id
      - name
      - logo
      - confidence
    properties:
      id:
        type: string
        description: "A unique ID for the identified merchant"
      name:
        type: string
        description: "The clean name of the identified merchant"
      logo:
        type: string
        description: "The merchant's logo image URL location"
      confidence:
        type: string
        description: "The level of certainty that the model has predicted the merchant"

  ProcessorIdV2:
    title: Processor ID Object
    type: object
    description: "Details surrounding the identified processor of the transaction"
    required:
      - id
      - name
      - logo
      - confidence
    properties:
      id:
        type: string
        description: "A unique ID for the identified processor"
      name:
        type: string
        description: "The clean name of the identified processor"
      logo:
        type: string
        description: "The processor's logo image URL location"
      confidence:
        type: string
        description: "The level of certainty that the model has predicted the processor"

  CarbonTracker:
    title: Carbon Tracker
    type: object
    required:
      - co2_amount_kg
    properties:
      co2_amount_kg: 
        type: number
        description: "The amount of Carbon Dioxide (CO2) in units of kilograms, found to be associated with the transaction."

  PaginationMetadata:
    type: object
    properties:
      from:
        type: string
        description: "Date (Y-m-d) from which transactions are returned from."
      to:
        type: string
        description: "Date (Y-m-d) from which transactions are returned to."
      results:
        type: number
        description: "Number of results returned."

  ResultsMetadata:
    title: Results Metadata Object
    type: object
    description: "Metadata associated with the response schema"
    properties:
      results:
        type: number
        description: "The number of results returned"

  ResultsMetadataNullable:
    title: Results Metadata Object
    type: object
    description: "Metadata associated with the response schema"
    nullable: true
    properties:
      results:
        type: number
        description: "The number of results returned"

  TransactionsResultsMetadata:
    title: "Metadata"
    description: "Metadata associated with the response schema"
    allOf:
      - $ref: "components-common-schemas.yaml#/schemas/LegacyBudDateRangeMetadata"
      - type: object
        required:
          - results
        properties:
          results:
            type: number
            description: "Number of results returned"

  #### Customer API

  CreateCustomersPayload:
    title: Create Customers Payload
    type: object
    properties:
      number_of_customers:
        description: "The number of customers to create (register) on Bud's platform in a single request."
        type: "integer"
        default: 1
        maximum: 200
      customer_context:
        $ref: "components.yaml#/schemas/CustomerContext"

  CustomersCreateResponse:
    title: Create Customers Response
    type: object
    description: "Expected response structure."
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        $ref: "components.yaml#/schemas/OperationId"
      data:
        description: "An array of Customer Created objects"
        items:
          $ref: "#/schemas/CustomerCreated"
      metadata:
        $ref: "components.yaml#/schemas/ResultsMetadataNullable"

  CustomerCreated:
    title: Customer Created
    type: object
    required:
      - customer_id
      - customer_secret
      - customer_context
    properties:
      customer_id:
        description: "Unique identifier for a Customer, as registered on Bud's platform"
        type: string
        format: uuid
      customer_secret:
        description: "An unique Customer encryption key used to encrypt their data on the Bud platform. Please note that this key is not held by Bud, and is required in the header of any endpoint that involves reading Customer data stored on the Bud platform."
        type: string
      customer_context:
        $ref: "components.yaml#/schemas/CustomerContext"

  CustomerContext:
    title: Customer Context
    description: "The context in which a customer is processed throughout the Bud platform. Default values can be populated using client configuration."
    type: object
    properties:
      type:
        $ref: "components.yaml#/schemas/CustomerContextType"
      region:
        $ref: "components.yaml#/schemas/CustomerContextRegion"
      locale:
        $ref: "components.yaml#/schemas/CustomerContextLocale"

  CustomerContextResponse:
    title: Customer Context Response
    description: "Customer context response."
    type: object
    required:
      - "operation_id"
      - "data"
    properties:
      operation_id:
        type: "string"
      data:
        $ref: "components.yaml#/schemas/CustomerContext"

  UpdateCustomerContextResponse:
    title: Customer Context Update Response
    description: "Customer context update response."
    type: object
    required:
      - "operation_id"
      - "data"
    properties:
      operation_id:
        type: "string"
      data:
        title: Updated Customer Context Data
        type: object
        properties:
          region:
            $ref: "components.yaml#/schemas/CustomerContextRegion"
          locale:
            $ref: "components.yaml#/schemas/CustomerContextLocale"

  CustomerContextType:
    title: Customer Context Type
    type: string
    enum:
      - personal
      - business
    description: |
      The type of customer signed up:

      | Value      | Description                             |
      |------------|-----------------------------------------|
      | `personal` | Individuals with personal bank accounts |
      | `business` | Businesses with business accounts       |

  CustomerContextRegion:
    title: Customer Context Region
    type: string
    description: "The region/country where the customer is located, format defined by ISO 3166 Alpha-2."

  CustomerContextLocale:
    title: Customer Context Locale
    type: string
    description: "The locale/language, based on the region, format defined by BCP 47."

  CustomerCreateRequest:
    title: Create Customer Request Payload
    type: object
    description: "Expected request payload structure."
    required:
      - consent_given
    properties:
      consent_given:
        description: "A flag to provide evidence that the Customer has given their consent to use a Bud service"
        type: string
        nullable: false
        enum:
          - "true"
          - "false"
      names:
        description: "An optional array of names that will be removed (tokenised) from transaction descriptions in the event that Bud hold any transactional data on the Customer"
        type: array
        items:
          type: string

  UpdateCustomerContextRequest:
    title: Update Customer Context Request
    type: object
    description: "Expected request payload structure."
    properties:
      region:
        $ref: "components.yaml#/schemas/CustomerContextRegion"
      locale:
        $ref: "components.yaml#/schemas/CustomerContextLocale"

  CustomerCreateResponse:
    title: Create Customer Response
    type: object
    description: "Expected response structure."
    required:
      - operation_id
      - data
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: object
        required:
          - customer_id
          - customer_secret
          - customer_context
        properties:
          customer_id:
            description: "Unique identifier for a Customer, as registered on Bud's platform"
            type: string
            format: uuid
          customer_secret:
            description: "An unique Customer encryption key used to encrypt their data on the Bud platform. Please note that this key is not held by Bud, and is required in the header of any endpoint that involves reading Customer data stored on the Bud platform."
            type: string
          customer_context:
            $ref: "components.yaml#/schemas/CustomerContext"

  OAuthCreateTokenResponse:
    title: OAuth2 Token Response
    type: object
    description: "Expected response structure."
    required:
      - operation_id
      - data
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: object
        required:
          - access_token
          - token_type
          - expires_in
          - refresh_token
        properties:
          access_token:
            type: string
          token_type:
            type: string
          expires_in:
            type: integer
          refresh_token:
            type: string


  #### Enrichment API Schemas

  CategoriesList:
    title: Category List
    type: object
    description: "A list of all the transaction categories"
    properties:
      categories:
        type: array
        description: "Category taxonomy"
        items:
          type: string

  DoubleCatCategoriesResponse:
    title: Categories Response
    type: object
    description: "Expected response structure for the get categories endpoint"
    required:
      - operation_id
      - data
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        $ref: "#/schemas/DoubleCategoriesList"

  CategoriesUSResponse:
    title: Categories Response
    type: object
    description: "Expected response structure for the get categories endpoint"
    required:
      - operation_id
      - data
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        $ref: "#/schemas/CategoriesUSList"
  
  CategoriesUSList:
    title: Category List
    type: object
    description: "A list of all the available categories"
    properties:
      l1:
        type: array
        description: "List of all the available categories"
        items:
          type: string
      l2:
        type: array
        description: "List of all the available subcategories"
        items:
          type: string

  DoubleCategoriesList:
    title: Category List
    type: object
    description: "A list of all the transaction categories"
    properties:
      categories:
        type: array
        description: "List of all the transaction categories"
        items:
          type: string
      subcategories:
        type: array
        description: "List of all the transaction subcategories"
        items:
          type: string

  IngestAccountsRequest:
    title: Ingest Accounts Request
    description: "Ingest accounts expected request body."
    type: array
    items:
      $ref: "#/schemas/IngestCustomerWithAccounts"

  IngestCustomerWithAccounts:
    title: Ingest Customer With Accounts
    description: "A customer with a accounts data."
    type: object
    required:
      - customer_id
      - customer_secret
      - accounts
    properties:
      customer_id:
        type: string
        format: uuid
        description: "Unique identifier for a Customer, as registered on Bud's platform."
      customer_secret:
        type: string
        description: "Customer secret."
      accounts:
        type: array
        description: "List of accounts that belongs to the customer."
        items:
          $ref: "#/schemas/IngestCustomerAccount"

  IngestCustomerAccount:
    title: Ingest Customer Account
    description: "An account item."
    type: object
    required:
      - provider
      - account_id
      - currency
      - account_type
      - account_sub_type
      - details
      - balances
    properties:
      provider:
        type: string
        description: "The name of the provider."
      account_id:
        type: string
        description: "The unique id associated with the account"
      currency:
        type: string
        description: "Main currency (in ISO4217 format) of the account"
      account_type:
        type: string
        description: "The type of the account"
        enum:
          - Business
          - Personal
      account_sub_type:
        type: string
        description: "The sub type of the account"
        enum:
          - ChargeCard
          - CreditCard
          - CurrentAccount
          - EMoney
          - Loan
          - Mortgage
          - PrePaidCard
          - Savings
      details:
        type: array
        description: "Provides the details to identify an account"
        items:
          $ref: "#/schemas/IngestAccountDetails"
      balances:
        type: array
        description: "The balances associated with the account"
        items:
          $ref: "#/schemas/IngestAccountBalance"

  IngestAccountDetails:
    title: Ingest Account Details
    type: object
    description: "Schema to define any further details about a given account"
    required:
      - scheme_name
      - identification
      - secondary_identification
    properties:
      scheme_name:
        type: string
        description: "Name of the scheme associated with the account"
      identification:
        type: string
        description: "A unique identifier for the account"
      secondary_identification:
        type: string
        description: "Any secondary identifier associated with the account"
      name:
        type: string
        description: "The name of the account holder"

  IngestAccountBalance:
    title: Ingest Account Balance
    type: object
    description: "Information surrounding a Customer's Account Balance"
    required:
      - amount
      - date
      - type
      - credit_debit_indicator
      - credit_line
    properties:
      account_id:
        type: string
        description: "The unique id associated with the account"
      amount:
        $ref: "#/schemas/InpAmount"
      credit_debit_indicator:
        type: string
        description: "To describe whether the account balance is in debit or credit"
      credit_line:
        items:
          $ref: "#/schemas/IngestCreditLine"
      date:
        type: string
        format: "YYYY-MM-DD"
        description: "The date associated with the balance of the given account"
      time:
        type: string
        format: "hh:mm:ss"
        description: "The time associated with the balance of the given account"
      type:
        type: string
        description: "Describes the state of the balance"
        enum:
          - ClosingAvailable
          - ClosingBooked
          - ClosingCleared
          - Expected
          - ForwardAvailable
          - Information
          - InterimAvailable
          - InterimBooked
          - InterimCleared
          - OpeningAvailable
          - OpeningBooked
          - OpeningCleared
          - PreviouslyClosedBooked

  IngestCreditLine:
    title: Ingest Credit Line
    type: object
    description: "A set of elements used to provide details on the credit line"
    properties:
      included:
        type: boolean
        description: "Indicates whether or not the credit line is included in the balance of the account, if not present, credit line is not included in the balance amount of the account"
      amount:
        $ref: "#/schemas/InpAmount"
      type:
        type: string
        description: "Limit type, in a coded form"
        enum:
          - Available
          - Credit
          - Emergency
          - Pre-Agreed
          - Temporary

  IngestTransactionCreditor:
    title: Transaction Creditor
    type: object
    description: "Expected transaction structure"
    required:
      - account_id
      - transaction_id
      - transaction_type
      - transaction_description
      - date
      - credit_debit_indicator
      - creditor
      - amount
    properties:
      account_id:
        type: string
        description: "Unique identifier for the Customer bank account"
      transaction_id:
        type: string
        description: "Unique identifier for the transaction"
      transaction_type:
        type: string
        description: |
          | enum  | Transaction Type                                                   |
          |:------|:-------------------------------------------------------------------|
          | DEB   | [Debit / Credit] Card                                              |
          | CSQ   | Cash / Cheque(s)                                                   |
          | CHG   | Charge                                                             |
          | COR   | Correction                                                         |
          | CPT   | Cashpoint / ATM                                                    |
          | INT   | Interest                                                           |
          | OTH   | Other                                                              |
          | BAT   | Bank Transfer (e.g. FP/MP/IB/BACS/CHAPS/SWIFT)                     |
          | DD    | Direct Debit                                                       |
          | SO    | Standing Order                                                     |
        enum:
          - DEB
          - CSQ
          - CHG
          - COR
          - CPT
          - INT
          - OTH
          - BAT
          - DD
          - SO
      date:
        type: string
        description: "The date of the transaction. In the following format 'Year-Month-Day'. E.g '2019-07-25'"
        format: date
      time:
        type: string
        description: "The time of the transaction. In the following format 'Hour:Minute:Second'. E.g '13:56:00'"
      transaction_description:
        type: string
        description: "Further details of the transaction. This is the transaction narrative, which is unstructured text"
      credit_debit_indicator:
        type: string
        description: "Indication as to whether the transaction was a credit or debit. If credit then debtor is required. If debit then creditor required."
        enum:
          - Debit
      creditor:
        $ref: "#/schemas/Creditor"
      amount:
        $ref: "#/schemas/InpAmount"

  IngestTransactionDebtor:
    title: Transaction Debtor
    type: object
    description: "Expected transaction structure"
    required:
      - account_id
      - transaction_id
      - transaction_type
      - transaction_description
      - date
      - credit_debit_indicator
      - debtor
      - amount
    properties:
      account_id:
        type: string
        description: "Unique identifier for the Customer bank account"
      transaction_id:
        type: string
        description: "Unique identifier for the transaction"
      transaction_type:
        type: string
        description: |
          | enum  | Transaction Type                                                   |
          |:------|:-------------------------------------------------------------------|
          | DEB   | [Debit / Credit] Card                                              |
          | CSQ   | Cash / Cheque(s)                                                   |
          | CHG   | Charge                                                             |
          | COR   | Correction                                                         |
          | CPT   | Cashpoint / ATM                                                    |
          | INT   | Interest                                                           |
          | OTH   | Other                                                              |
          | BAT   | Bank Transfer (e.g. FP/MP/IB/BACS/CHAPS/SWIFT)                     |
          | DD    | Direct Debit                                                       |
          | SO    | Standing Order                                                     |
        enum:
          - DEB
          - CSQ
          - CHG
          - COR
          - CPT
          - INT
          - OTH
          - BAT
          - DD
          - SO
      date:
        type: string
        description: "The date of the transaction. In the following format 'Year-Month-Day'. E.g '2019-07-25'"
        format: "YYYY-MM-DD"
      time:
        type: string
        description: "The time of the transaction. In the following format 'Hour:Minute:Second'. E.g '13:56:00'"
        format: "HH:MM:SS"
      transaction_description:
        type: string
        description: "Further details of the transaction. This is the transaction narrative, which is unstructured text"
      credit_debit_indicator:
        type: string
        description: "Indication as to whether the transaction was a credit or debit. If credit then debtor is required. If debit then creditor required."
        enum:
          - Credit
      debtor:
        $ref: "#/schemas/Debtor"
      amount:
        $ref: "#/schemas/InpAmount"

  Creditor:
    type: object
    description: "Describes the party the money was deposited to"
    required:
      - name
    properties:
      name:
        type: string
        description: "Name of the creditor"
      address:
        type: string
        description: "Address of the creditor"
      scheme:
        type: string
        enum:
          - SortCodeAccountNumber
          - IBAN
          - PAN
        description: "The payment scheme that specifies the format of the identifier"
      identifier:
        type: string
        description: "A unique identifier for the creditor related to the payment scheme"

  Debtor:
    type: object
    description: "Describes the party the money was taken from"
    required:
      - name
    properties:
      name:
        type: string
        description: "Name of the debtor"
      address:
        type: string
        description: "Address of the debtor"
      scheme:
        type: string
        enum:
          - SortCodeAccountNumber
          - IBAN
          - PAN
        description: "The payment scheme that specifies the format of the identifier"
      identifier:
        type: string
        description: "A unique identifier for the debtor related to the payment scheme"

  InpAmount:
    title: Amount
    description: "Amount structure"
    allOf:
      - type: object
        properties:
          local_currency:
            allOf:
              - description: |
                  The original three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) the payment was transacted in.
                  
                  Example: `USD`
              - $ref: "components-common-schemas.yaml#/schemas/BudCurrency"
          local_value:
            allOf:
              - description: |
                  The original value of the payment in the local currency. The value is formatted with the number of decimal places for the respective currency. 

                  Example: `10.98`
              - $ref: "components-common-schemas.yaml#/schemas/BudMonetaryValue"
            
      - $ref: "components-common-schemas.yaml#/schemas/BudAmount"

  TrueLayerTransaction:
    title: TrueLayer Transaction Schema
    description: "Transaction details, as output by TrueLayer"
    allOf:
      - $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
      - type: object
        required:
          - transaction_id
          - timestamp
          - description
          - transaction_type
        properties:
          transaction_id:
            type: string
            description: "Unique identifier of the transaction"
          timestamp:
            type: string
            description: "The time (YYYY-MM-DDTHH:MM:SS) that the transaction took place"
            pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T((0[0-9]|1[0-9]|2[0-3]|[0-9]):[0-5][0-9]:[0-5][0-9])$"
          description:
            type: string
            description: "Free text field to provide a description of the transaction"
          transaction_type:
            type: string
            description: "To indicate whether the transaction is a Credit or Debit transaction"
            enum:
              - DEBIT
              - CREDIT
          merchant_name:
            type: string
            description: "The name of the merchant associated with the transaction"
          running_balance:
            $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
          meta:
            type: object
            description: "Metadata associated with the transaction"
            additionalProperties:
              type: string
              description: "Additional (provider specific) feature / field"

  RecategoriseCustomerRequestDoublecat:
    type: array
    description: "Expected request structure for the recategorisation endpoint"
    items:
      $ref: "#/schemas/RecategorisedCustomerRequestDoublecatPayload"

  RecategoriseModelRequestDoubleCat:
    title: Recategorise Request
    type: array
    description: "Expected request structure for the recategorisation endpoint"
    items:
      oneOf:
        - $ref: "#/schemas/RecategoriseModelIngestTransactionCreditorDoubleCat"
        - $ref: "#/schemas/RecategoriseModelIngestTransactionDebtorDoubleCat"

  RecategoriseModelIngestTransactionCreditorDoubleCat:
    title: Transaction Creditor
    allOf:
      - $ref: "#/schemas/IngestTransactionCreditor"
      - type: object
        properties:
          category_name:
            type: string
            description: "The corrected transaction category name - please note: this must be a valid category name"
          subcategory_name:
            type: string
            description: "The corrected transaction subcategory name - please note: this must be a valid subcategory name"
        required:
          - category_name
          - subcategory_name

  RecategoriseModelIngestTransactionDebtorDoubleCat:
    title: Transaction Debtor
    allOf:
      - $ref: "#/schemas/IngestTransactionDebtor"
      - type: object
        properties:
          category_name:
            type: string
            description: "The corrected transaction category name - please note: this must be a valid category name"
          subcategory_name:
            type: string
            description: "The corrected transaction subcategory name - please note: this must be a valid subcategory name"
        required:
          - category_name
          - subcategory_name

  RecategoriseCustomerResponseDoublecat:
    type: object
    description: "Expected response structure for the recategorise Customer transactions endpoint"
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: array
        items:
          $ref: "#/schemas/RecategorisedCustomerRequestDoublecatPayload"
      metadata:
        $ref: "#/schemas/ResultsMetadata"

  RecategoriseModelResponseDoubleCat:
    title: Recategorise Response
    type: object
    description: "Expected response structure for the recategorise Customer transactions endpoint"
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        type: string
      data:
        type: array
        items:
          oneOf:
            - $ref: "#/schemas/RecategoriseModelIngestTransactionCreditorDoubleCat"
            - $ref: "#/schemas/RecategoriseModelIngestTransactionDebtorDoubleCat"
      metadata:
        $ref: "#/schemas/ResultsMetadata"

  RecategorisedCustomerRequestDoublecatPayload:
    type: object
    description: "Expected recategorised transaction structure"
    required:
      - transaction_id
    properties:
      transaction_id:
        type: string
        description: "A unique identifier for the transaction"
      account_id:
        type: string
        description: "A unique identifier for the Customer bank account"
      category_name:
        type: string
        description: "The corrected transaction category name - please note: this must be a valid category name"
      subcategory_name:
        type: string
        description: "The corrected transaction subcategory name - please note: this must be a valid subcategory name"

  DoubleCatCategoryEnrichment:
    title: Enrichment Object
    type: object
    description: "Additional enrichments applied to the transaction by Bud"
    properties:
      categoriser:
        $ref: "#/schemas/DoubleCatCategory"


  CustomerCategoryCorrectionRequest:
    title: "Customer Category Corrections Request Payload"
    type: array
    description: "Expected request structure for the category corrections endpoint"
    items:
      $ref: "#/schemas/CustomerCategoryCorrectionPayload"
  
  CustomerCategoryCorrectionPayload:
    title: "Customer Category Correction"
    type: object
    description: "Expected request structure for the category corrections endpoint"
    required: 
      - transaction_id
    properties:
      transaction_id:
        type: string
        description: "The unique identifier for the transaction"
      category_l1:
        type: string
        description: "The name of the category that the transaction should be assigned"
      category_l2:
        type: string
        description: "The name of the subcategory that the transaction should be assigned"
      include_similar:
        type: boolean
        description: "Correct the category of other similar transactions to the specified transaction"
        default: false

  CustomerCategoryCorrectionResponse:
    title: "Customer Category Corrections Response"
    type: object
    description: "Expected response structure for the category corrections endpoint"
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: array
        items:
          $ref: "#/schemas/CustomerCategoryCorrectionPayload"
      metadata:
        $ref: "#/schemas/ResultsMetadata"

  CategoriesTotalResponse:
    title: Categories Totals Response
    type: object
    description: ""
    required:
      - operation_id
      - data
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: object
        description: "Total spend by categories"
        required:
          - "categories"
          - "sub_categories"
        properties:
          categories:
            type: array
            description: "A list of category total objects"
            items:
              $ref: "#/schemas/CategoryTotalSpend"
          sub_categories:
            type: array
            description: "A list of subcategory total objects"
            items:
              $ref: "#/schemas/CategoryTotalSpend"

  CategoryTotalSpend:
    title: Category Total Object
    type: "object"
    description: "Information regarding the total income and expenditure of a given category"
    required:
      - "category"
      - "credit_amount"
      - "debit_amount"
    properties:
      category:
        $ref: "#/schemas/CategoryObject"
      credit_amount:
        items:
          $ref: "components-common-schemas.yaml#/schemas/BudAmount"
      debit_amount:
        items:
          $ref: "components-common-schemas.yaml#/schemas/BudAmount"

  CategoryObject:
    title: Category Object
    type: "object"
    description: "Category information"
    required:
      - "id"
      - "label"
    properties:
      id:
        type: string
        description: "The identifier (slug) of the category"
      label:
        type: string
        description: "The label (name) of the transaction category for display purposes"

  DoubleParentCategoriesList:
    type: array
    description: "A list of all the transaction categories"
    items:
      - categories:
        description: "Category taxonomy"

  SubCategoriesList:
    type: array
    description: "A list of all the transaction subcategories"
    items:
      - subcategories:
        description: "Subcategory taxonomy"

  MerchantTotalsResponse:
    title: Merchant Totals Response
    type: object
    description: "Merchant Totals from Aggregated Data Response"
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: object
        description: "Information surrounding possible groups of Regular transactions"
        items:
          $ref: "#/schemas/MerchantTotals"
      metadata:
        $ref: "#/schemas/MerchantTotalsMetadata"

  MerchantTotals:
    title: Merchant Totals
    type: object
    description: "Merchant Total spend structure"
    required:
      - total_outgoing
      - total_incoming
      - spend_by_merchants
    properties:
      total_outgoing:
        $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
      total_incoming:
        $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
      unknown_spend:
        $ref: "#/schemas/MerchantSpendObject"
      merchant_spend:
        type: array
        items:
          $ref: "#/schemas/MerchantSpendObject"

  MerchantSpendObject:
    title: Merchant Spend
    description: "Total spend by merchants"
    allOf:
      - $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
      - type: object
        required:
          - transaction_count
        properties:
          transaction_count:
            description: "Number of transactions found using this merchant"
            type: number

  MerchantTotalsMetadata:
    title: Merchant Totals Metadata
    type: object
    properties:
      from:
        type: string
        description: "Date (Y-m-d) from which transactions are returned from."
      to:
        type: string
        description: "Date (Y-m-d) from which transactions are returned to."
      transaction_count:
        type: number
        description: "Number of transactions returned."

  MerchantTotalsResponseV2:
    title: "Merchant Totals"
    type: "object"
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: "array"
        items:
          $ref: "#/schemas/MerchantTotalV2"
      metadata:
        $ref: "#/schemas/MerchantTotalsMetadataV2"

  MerchantTotalV2:
    type: "object"
    title: "Merchant Total"
    required:
      - merchant
      - total_debit
      - total_credit
      - transaction_count
    properties:
      merchant:
        $ref: "#/schemas/Merchant"
      total_debit:
        allOf:
          - title: "Total Debit"
            description: "Total debit amount of all transactions identified with the named merchant"
          - $ref: "components-common-schemas.yaml#/schemas/BudAmount"
      total_credit:
        allOf:
          - title: "Total Credit"
            description: "Total credit amount of all transactions identified with the named merchant"
          - $ref: "components-common-schemas.yaml#/schemas/BudAmount"
      transaction_count:
        type: number
        title: "Transaction Count"
        description: "Total number of transactions identified with the named merchant"

  MerchantTotalsMetadataV2:
    allOf:
      - $ref: "#/schemas/TransactionsResultsMetadata"
      - type: "object"
        title: "Metadata"
        properties:
          categories_included:
            description: "Categories included in total (from `X-Include-Categories`)"
            type: array
            items:
              type: string
          categories_excluded:
            description: "Categories excluded from total (from `X-Exclude-Categories`)"
            type: array
            items:
              type: string

  BasicTransaction:
    title: Basic Transaction Schema
    type: object
    description: "Basic transaction schema"
    required:
      - transaction_id
      - account_id
      - transaction_description
      - provider
      - date
      - amount
      - credit_debit_indicator
    properties:
      transaction_id:
        type: string
        description: "A unique identifier for the transaction"
      account_id:
        type: string
        description: "A unique identifier for the Customer bank account"
      transaction_description:
        type: string
        description: "Any Customer defined input, e.g. a bank transfer reference"
      provider:
        type: string
        description: "The name of the relevant provider relevant to the source of the original transaction data"
      date:
        type: string
        description: |
          The date of the transaction in the format [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339).

          Examples:
            - `2023-03-17T17:29:51Z`
            - `2023-03-17T17:29:51-08:00`
      amount:
        $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
      credit_debit_indicator:
        type: string
        description: "Indication as to whether the transaction was a credit or debit"
        enum:
          - Credit
          - Debit

  BasicTransactionWithNullableMerchant:
    title: Basic Transaction With Nullable Merchant Schema
    type: object
    description: "Basic transaction with nullable merchant schema"
    required:
      - transaction_id
      - account_id
      - transaction_description
      - provider
      - date
      - amount
      - credit_debit_indicator
    properties:
      transaction_id:
        type: string
        description: "A unique identifier for the transaction"
      account_id:
        type: string
        description: "A unique identifier for the Customer bank account"
      transaction_description:
        type: string
        description: "Any Customer defined input, e.g. a bank transfer reference"
      provider:
        type: string
        description: "The name of the relevant provider relevant to the source of the original transaction data"
      date:
        type: string
        description: "The date (YYYY-MM-DD) that the transaction took place"
      amount:
        $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
      credit_debit_indicator:
        type: string
        description: "Indication as to whether the transaction was a credit or debit"
        enum:
          - Credit
          - Debit
      merchant:
        $ref: "#/schemas/NullableMerchant"

  BasicTransactionV2:
    title: Basic Transaction Schema
    type: object
    description: "Basic transaction schema"
    required:
      - transaction_id
      - account_id
      - transaction_description
      - provider
      - date
      - amount
      - credit_debit_indicator
    properties:
      transaction_id:
        type: string
        description: "A unique identifier for the transaction"
      account_id:
        type: string
        description: "A unique identifier for the Customer bank account"
      transaction_description:
        type: string
        description: A description of the transaction, similar to the transaction information in Open Banking. e.g. a bank transfer reference"
      provider:
        type: string
        description: "The name of the relevant provider relevant to the source of the original transaction data"
      date:
        type: string
        description: |
          The date of the transaction in the format [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339).

          Examples:
            - `2023-03-17T17:29:51Z`
            - `2023-03-17T17:29:51-08:00`
      amount:
        $ref: "components-common-schemas.yaml#/schemas/BudAmount"
      credit_debit_indicator:
        type: string
        description: "Indication as to whether the transaction was a credit or debit"
        enum:
          - Credit
          - Debit

  FutureTransactionV2:
    allOf:
      - type: object
        description: Expected transaction structure
        required:
          - transaction_id
          - account_id
          - transaction_description
          - date_time
          - amount
          - credit_debit_indicator
          - label
          - period
          - confidence
          - future_transactions
        properties:
          transaction_id:
            type: string
            description: Unique identifier for the transaction.
          account_id:
            type: string
            description: Unique identifier for the account.
          transaction_description:
            type: string
            description: >-
              Further details of the transaction. This is the transaction
              narrative, which is unstructured text.
          date_time:
            type: string
            description: >-
              The date of the transaction. In the following format RFC-3339
              'Year-Month-Day Hour:Minute:Second'. E.g '2019-07-01T01:00:00'
          amount:
            $ref: "components-common-schemas.yaml#/schemas/BudAmount"
          credit_debit_indicator:
            type: string
            description: >-
              Indication as to whether the transaction was a credit or debit. If
              credit then debtor is required. If debit then creditor required.
            enum:
              - credit
              - debit
          label:
              type: string
              description: Unique identifier for the regular transaction group
          period:
            type: string
            description: "To describe the frequency of each transaction"
            enum:
              - daily
              - weekly
              - biweekly
              - monthly
              - quarterly
              - six_monthly
              - annually
              - unknown
          confidence:
            type: string
            description: Probability score
          future_transactions:
            type: array
            items:
              type: object
              description: Dates and amounts of the predicted future occurrences
              required:
                - date
              properties:
                date:
                  type: string
                  description: The next date at which the future transaction will occur in the following format, 'Year-Month-Day'. E.g '2019-07-01'
                amount:
                  type: object
                  $ref: "components-common-schemas.yaml#/schemas/BudAmount"

  RegularTransactionsResponse:
    title: Regular Transactions (Aggregated) Response
    type: object
    description: "Regular Transactions from Aggregated Data Response"
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: array
        description: "Information surrounding possible groups of Regular transactions"
        items:
          $ref: "#/schemas/RegularTransaction"
      metadata:
        $ref: "#/schemas/ResultsMetadata"

  RegularTransaction:
    title: Regular Transaction Group
    description: "Information surrounding a possible group of Regular transactions"
    allOf:
      - $ref: "#/schemas/RegularPaymentsConfirmed"
      - type: object
        required:
          - transactions
        properties:
          transactions:
            type: array
            items:
              $ref: "#/schemas/BasicTransactionWithNullableMerchant"

  FutureTransactionsResponse:
    title: Future Transactions (Aggregated) Response
    type: object
    description: "Future Transactions from Aggregated Data Response"
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: array
        description: "Information surrounding predicted future transactions"
        items:
          allOf:
            - $ref: "#/schemas/BasicTransaction"
            - $ref: "#/schemas/FuturePaymentsConfirmed"            
      metadata:
        $ref: "#/schemas/ResultsMetadata"

  FutureTransactionV2Response:
    allOf:
      - type: "object"
        required:
          - operation_id
          - data
          - metadata
        properties:
          operation_id:
            $ref: "#/schemas/OperationId"
          data:
            type: "array"
            items:
              $ref: "#/schemas/FutureTransactionV2"
          metadata:
            type: "object"
            required:
              - results
              - months
            properties:
              results:
                type: "number"
                description: "The number of different upcoming transactions that have been found"
              months:
                type: "number"
                description: "The number of months for which the upcoming transactions have been projected"
              change_percentages:
                type: "array"
                description: "A list of all of the percentage value changes that have been applied to different Level 2 tegories"
                items:
                  type: "object"
                  required:
                    - l2
                    - value
                  properties:
                    l2:
                      type: "string"
                      description: "The l2 category that a percentage change has been applied to"
                      example: "bills"
                    value:
                      type: "number"
                      description: "The percentage of change that has been applied to the given l2 category"
                      example: 2.0

  RegularPaymentsConfirmed:
    title: Regular Payment Object
    type: object
    description: "Details surrounding the regularity of the transaction"
    required:
      - label
      - period
      - score
    properties:
      label:
        type: string
        description: "A recurring transaction group identifier label associating regular transactions e.g. all Spotify transactions that are regular by the same monthly period will share the same label.   The format of the label includes a hash of the transaction description and the amount, followed by an integer corresponding to the number of regular groups found, i.e. <hash>-<i>."
      period:
        type: string
        description: "To describe the period between each transaction in a regular group."
        enum:
          - daily
          - weekly
          - biweekly
          - monthly
          - quarterly
          - unknown
      score:
        type: string
        description: "A floating point number between 0 and 1, to define the confidence level that the transaction is regular or not."        

  FuturePaymentsConfirmed:
    title: Regular Payment Object
    type: object
    description: "Details surrounding the regularity of the transaction"
    required:
      - label
      - period
      - score
      - future_dates
    properties:
      label:
        type: string
        description: "A recurring transaction group identifier label associating regular transactions e.g. all Spotify transactions that are regular by the same monthly period will share the same label.   The format of the label includes a hash of the transaction description and the amount, followed by an integer corresponding to the number of regular groups found, i.e. <hash>-<i>."
      period:
        type: string
        description: "To describe the period between each transaction in a regular group."
        enum:
          - daily
          - weekly
          - biweekly
          - monthly
          - quarterly
          - unknown
      score:
        type: string
        description: "A floating point number between 0 and 1, to define the confidence level that the transaction is regular or not." 
      future_dates:
        type: array
        description: "The datetime (ISO 8601) that the regular transaction is likely to occur in the future"
        items:
          type: string


  SalaryResponse:
    title: Salary Response
    description: "Salary Response Schema"
    type: object
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: array
        description: "An array of possible Salary transactions"
        items:
          $ref: "#/schemas/SalaryTransaction"
      metadata:
        $ref: "#/schemas/SalaryMetadata"

  SalaryTransaction:
    title: Salary Transaction
    description: "Information surrounding a possible Salary transaction"
    allOf:
      - $ref: "#/schemas/BasicTransaction"
      - type: object
        required:
          - confidence
          - period
        properties:
          confidence:
            type: string
            description: "The level of certainty (between 0 and 1) associated with prediction"
          period:
            type: string
            description: "To describe the frequency of each salary transaction"
            enum:
              - weekly
              - biweekly
              - monthly
              - quarterly
              - unknown

  SalaryMetadata:
    title: Salary Metadata
    description: Salary Metadata Response
    type: object
    properties:
      results:
        type: number
        description: "Number of transactions returned"

  TransactionAttributesClientLabelsRequest:
    title: Transaction Attributes Client Labels
    type: array
    items:
      type: object
      required:
        - match_attributes
        - set_attribute
      properties:
        match_attributes:
          type: array
          description: Detailing the attributes and criteria from which to match against a customer's transactions.
          items:
            type: object
            required:
              - type
              - name
              - value
            properties:
              type:
                type: string
                description: The type of matching to be done to the transaction attribute in question.
                enum:
                  - exact
              name:
                type: string
                description: |
                  | Name of Transaction Attribute | Description                    |
                  |:-------------------------|:-----------------------------------------|
                  | `cdi`         | Credit Debit Indicator of the transcation |
                  | `amount`| The transaction amount    |
                  | `currency` | The transaction currency |
                  | `description` | The transaction description |
                enum:
                  - cdi
                  - amount
                  - currency
                  - description
              value:
                type: string
                description: The value of the transaction attribute that will be used to match.
        set_attribute:
          type: object
          description: Details on the value(s) of the client label attribute based on the result of the matching criteria.
          required:
            - values
          properties:
            values:
              type: array
              description: An array of values that can be set against the `client_labels` attribute if the above matching criteria are triggered.
              items:
                type: string
                description: Free text defining one of the values of the `client_label` attribute

  TransactionAttributesClientLabelsResponse:
    type: object
    required:
      - operation_id
      - data
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: object
        required:
          - rules_created
        properties:
          rules_created:
            type: integer
            description: The number of rules created in the above request

  #### Signal Components

  IncomeResponseV1:
    title: Income Finder Response
    type: object
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: "array"
        description: Array of Income related transactions
        items:
          $ref: "#/schemas/IncomeTransactionV1"
      metadata:
        $ref: "#/schemas/TransactionsResultsMetadata"

  IncomeTransactionV1:
    title: Income Finder Transaction
    type: object
    description: Transaction structure for income related transactions
    required:
      - account_id
      - transaction_id
      - description
      - date
      - amount
      - credit_debit_indicator
      - enrichment
    properties:
      account_id:
        type: string
        description: "Unique identifier for the account"
      transaction_id:
        type: string
        description: "Unique identifier for the transaction"
      description:
        type: string
        description: >-
          Further details of the transaction. This is the transaction
          narrative, which is unstructured text
      date:
        type: string
        description: >-
          The date of the transaction. In the following format
          'Year-Month-Day Hour:Minute:Second'. E.g '2019-07-01T01:00:00+0100'
      amount:
        $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
      credit_debit_indicator:
        type: string
        description: Indication as to whether the transaction was a credit or debit
        enum:
          - Credit
          - Debit
      enrichment:
        $ref: "#/schemas/IncomeTransactionEnrichmentsV1"

  IncomeResponseV2:
    type: "object"
    title: "Income Finder Response V2"
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: "object"
        title: Income Finder Response Data
        required:
          - transactions
          - statistics
        properties:
          transactions:
            type: "array"
            title: "Income Transactions"
            items:
              $ref: "#/schemas/IncomeTransactionV2"
          statistics:
            $ref: "#/schemas/IncomeStatistics"
      metadata:
        $ref: "#/schemas/TransactionsResultsMetadata"
  
  IncomeTransactionV2:
    allOf:
      - $ref: "#/schemas/BasicTransactionV2"
      - title: "Income Transaction"
        required:
          - enrichment
        properties:
          enrichment:
            $ref: "#/schemas/IncomeEnrichmentsV2"

  IncomeStatistics:
    type: "object"
    title: "Income statistics"
    required:
      - average
    properties:
      average:
        $ref: "#/schemas/IncomeAverage"

  IncomeAverage:
    title: "Average income statistics"
    type: "object"
    description: |-
      Averages of income amounts. These averages are calculated using the filters supplied in the `X-From` & `X-To` headers. 
      For instance, with 6 months of £1000/month and a date range of 6 months, the monthly average will be £1000. 
      However, if the supplied date range is 12 months and there is no data for more than those 6 months, the average will be £500/month. 
      
      Note that the number of months are calculated inclusively e.g. `months(2022-01-01, 2022-02-28) = 2` and `months(2022-01-01, 2022-03-01) = 3`.
    required:
      - monthly
    properties:
      monthly:
        allOf:
          - description: "average income per month"
          - $ref: "#/schemas/IncomeAverageOverPeriod"

  IncomeAverageOverPeriod:
    title: "Average income statistics over time period"
    type: "object"
    required:
      - income
      - regular_income
    properties:
      income:
        allOf:
          - description: "average of all income transactions"
          - $ref: "components-common-schemas.yaml#/schemas/BudAmount"
      regular_income:
        allOf:
          - description: "average income transactions that we have also detected as regular"
          - $ref: "components-common-schemas.yaml#/schemas/BudAmount"

  IncomeTransactionEnrichmentsV1:
    title: Income Transaction Enrichments
    type: object
    description: |
      Results from required enrichment services for successful marking of income transactions
    required:
      - categoriser
      - merchant
      - income
    properties:
      categoriser:
        type: object
        description: Results from Bud's Categorisation Service
        properties:
          categories:
            type: array
            description: Details on the Level One category associated with the transaction
            items:
              type: object
              description: The details in relation to the first category level, as taken from the output of Bud's categorsiation service.
              required:
                - category_name
                - confidence
                - label
              properties:
                category_name:
                  type: string
                  description: "Internal name (identifier) of the category"
                confidence:
                  type: string
                  description: "The level of certainty that the model has predicted the category"
                label:
                  type: string
                  description: "Humanised category name"
          subcategories:
            type: array
            description: Details on the Level Two category associated with the transaction
            items:
              type: object
              description: The details in relation to the second category level, as taken from the output of Bud's categorsiation service.
              required:
                - subcategory_name
                - confidence
                - label
              properties:
                subcategory_name:
                  type: string
                  description: "Internal name (identifier) of the subcategory"
                confidence:
                  type: string
                  description: "The level of certainty that the model has predicted the subcategory"
                label:
                  type: string
                  description: "Humanised subcategory name"
          l3:
            type: array
            description: Details on the Level Three category associated with the transaction
            items:
              $ref: "#/schemas/CategoriserCategory"
      merchant:
        $ref: "#/schemas/MerchantID"
      income:
        $ref: "#/schemas/IncomeEnrichment"

  IncomeEnrichmentsV2:
      type: object
      title: Income Transaction Enrichments
      description: >-
        Results from required enrichment services for successful marking of income transactions
      properties:
        categories:
          type: object
          nullable: true
          title: Categoriser Enrichment
          description: Results from Bud's Categorisation Service
          required:
            - l1
            - l2
            - l3
          properties:
            l1:
              type: array
              description: Details on the Level One category associated with the transaction
              items:
                $ref: "#/schemas/CategoriserCategory"
            l2:
              type: array
              description: Details on the Level Two category associated with the transaction
              items:
                $ref: "#/schemas/CategoriserCategory"
            l3:
              type: array
              description: Details on the Level Three category associated with the transaction
              items:
                $ref: "#/schemas/CategoriserCategory"
        merchant:
          allOf:
            - type: object
              nullable: true
            - $ref: "#/schemas/MerchantIdV2"
        processor:
          allOf:
            - type: object
              nullable: true
            - $ref: "#/schemas/ProcessorIdV2"
        income:
          allOf:
            - type: object
              nullable: true
            - $ref: "#/schemas/IncomeEnrichmentV2"

  IncomeEnrichment:
    title: "Income Enrichment"
    type: object
    description: Results from Bud's Income Finder Service
    required:
      - label
      - confidence
    properties:
      label:
        type: string
        description: "The type of identified income type, either `salary_or_wages` or `other_income`"
      confidence:
        type: string
        description: "The level of certainty that the model has predicted an income related transaction."
    
  IncomeEnrichmentV2:
    title: "Income Enrichment"
    type: object
    description: Results from Bud's Income Finder Service
    required:
      - type
      - confidence
    properties:
      type:
        type: string
        description: "The type of identified income type, either `salary_or_wages` or `other_income`"
      confidence:
        type: string
        description: "The level of certainty that the model has predicted an income related transaction."

  CategoriserCategory:
    title: Categoriser Category
    type: object
    description: The details in relation to a specific category level, as taken from the output of Bud's categorsiation service.
    required:
      - name
      - confidence
      - label
    properties:
      name:
        type: string
        description: "Internal name (identifier) of the category"
      confidence:
        type: string
        description: "The level of certainty that the model has predicted the category"
      label:
        type: string
        description: "Humanised category name"

  LoansResponseV1:
    title: Loans Finder Response
    type: object
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: "object"
        title: "Loan Finder Response Data"
        required:
         - transactions
         - statistics
        properties:
          transactions:
            type: "array"
            title: "Loan Transactions"
            items:
              $ref: "#/schemas/LoanTransactionV1"
          statistics:
            $ref: "#/schemas/LoanStatistics"
      metadata:
        $ref: "#/schemas/TransactionsResultsMetadata"

  LoanTransactionV1:
    title: Loan Transaction
    allOf:
      - $ref: "#/schemas/BasicTransactionV2"
      - type: object
        properties:
          merchant:
            allOf:
              - type: object
                nullable: true
              - $ref: "#/schemas/MerchantIdV2"
  
  LoanStatistics:
    type: "object"
    title: "Loan Statistics"
    required:
      - total_debit
    properties:
      total_debit:
        allOf:
          - description: "Total debit amount of all loan transactions"
          - $ref: "components-common-schemas.yaml#/schemas/BudAmount"

  DebtCollectionResponseV1:
    type: "object"
    title: Debt Collection Finder Response
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: "object"
        title: Debt Collection Finder Response Data
        required:
          - transactions
          - statistics
        properties:
          transactions:
            type: "array"
            title: "Debt Collection Transactions"
            items:
              $ref: "#/schemas/DebtCollectionTransaction"
          statistics:
            $ref: "#/schemas/DebtCollectionStatistics"
      metadata:
        $ref: "#/schemas/TransactionsResultsMetadata"

  DebtCollectionTransaction:
    allOf:
      - $ref: "#/schemas/BasicTransactionV2"
      - type: "object"
        title: "Debt Collection Transaction"
        required:
          - merchant
        properties:
          merchant:
            $ref: "#/schemas/MerchantIdV2"

  DebtCollectionStatistics:
    type: "object"
    title: "Debt Collection Statistics"
    required:
      - total_debit
      - income_relations
    properties:
      total_debit:
        allOf:
          - description: "Total debit amount of all debt collection transactions"
          - $ref: "components-common-schemas.yaml#/schemas/BudAmount"
      income_relations:
        $ref: "#/schemas/IncomeRelationStatistics"

  IncomeRelationStatistics:
    type: "object"
    title: "Income Relations"
    description: "Comparisons of the returned transactions to the income found over the same period"
    required:
      - expense_to_income_ratio
      - total_income
    properties:
      expense_to_income_ratio:
        description: |-
          The ratio of total debit amounts of the returned transactions to the total income over the same period, to 3 decimal places.
        type: "string"
      total_income:
        allOf:
          - description: "Total income over the provided period"
          - $ref: "components-common-schemas.yaml#/schemas/BudAmount"

  BenefitsResponseV1:
    title: Benefits Finder Response
    type: object
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: "array"
        description: Array of Benefits related transactions
        items:
          $ref: "#/schemas/BenefitsTransactionV1"
      metadata:
        $ref: "#/schemas/TransactionsResultsMetadata"

  BenefitsTotalsResponseV1:
    title: Benefit Totals
    type: object
    description: "Benefits Total income structure"
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: "array"
        items:
          type: object
          required:
            - benefit
            - total_credit
          properties:
            benefit:
              $ref: "#/schemas/Benefit"
            total_credit:
              $ref: "components-common-schemas.yaml#/schemas/BudAmount"
      metadata:
        $ref: "#/schemas/TransactionsResultsMetadata"

  BenefitsTransactionV1:
    title: Benefit Transactions
    allOf:
      - $ref: '#/schemas/BasicTransaction'
      - type: object
        required:
          - benefit
        properties:
          benefit:
            $ref: "#/schemas/Benefit"

  Benefit:
    title: Benefit
    type: object
    required:
      - type
      - display_name
    properties:
      type:
        type: string
        description: The type of benefit
        example: "attendance_allowance"
      display_name:
        type: string
        example: "Attendance Allowance"
        description: The display name of the benefit type
  
  GetProductsResponseV1:
    title: Predicted Products Response
    description: Transactions predicted as financial product payments for a customer
    type: object
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        type: string
        enum:
          - v1_products_get
      data:
        type: array
        title: "Product Finder Response Data"
        items:
          $ref: "#/schemas/FinancialProductTransaction"
      metadata:
        title: Metadata
        allOf:
          - $ref: "components-common-schemas.yaml#/schemas/BudDateRangeMetadata"
          - type: object
            required:
              - results
            properties:
              results:
                type: number
                title: Results count
                description: Number of products returned.

  FinancialProductTransaction:
    allOf:
      - $ref: "#/schemas/BasicTransactionV2"
      - type: object
        title: Financial Product Transaction
        required:
          - merchant
          - product
        properties:
          merchant:
            $ref: "#/schemas/MerchantIdV2"
          product:
            $ref: "#/schemas/FinancialProduct"

  FinancialProduct:
    type: object
    title: Financial Product Prediction
    description: "Details of the predicted financial product"
    properties:
      type:
        type: array
        description: "The top predictions for the type of financial product"
        items:
          title: Financial Product Type
          type: string
          description: "The type of financial product"
          enum:
            - "loan"
            - "bnpl"
            - "mortgage"
            - "insurance"
            - "store_card"
            - "credit_card"
            - "private_pension"
            - "savings_and_investment"
      period:
        type: string
        title: Period
        description: "The regularity of the product, based on transaction history. If a product is not regular, it will have a period of `unknown`."
        enum:
          - "weekly"
          - "biweekly"
          - "monthly"
          - "quarterly"
          - "unknown"

  GetSubscriptionsResponseV1:
    title: Subscription Products Response
    description: Subscription products and associated transactions for a customer
    type: object
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        type: string
        enum:
          - v1_subscriptions_get
      data:
        type: array
        title: "Subscriptions Finder Response Data"
        items:
          $ref: "#/schemas/Subscription"
      metadata:
        $ref: "#/schemas/TransactionsResultsMetadata"

  Subscription:
    type: object
    required:
      - subscription_type
      - transactions
      - categories
      - period
    properties:
      subscription_type:
        type: string
        description: | 
          Type of subscription identified. Potential values are subject to change and may be converted to enums at a future unspecified date.

          | Subscription type           | Description |
          | --------------------------- | ----------- |
          | `unknown`                   | Unknown subscription type |
          | `media_streaming`           | Digital media streaming subscriptions |
          | `newspapers_and_magazines`  | Print media subscriptions |
          | `food_and_drink`            | Grocery and specialty food/drink subscriptions |
          | `technology`                | Technology subscriptions, including software and hardware |
          | `fitness_and_gym`           | Health and fitness subscriptions |
          | `charitable_donations`      | Recurring donations to charity |
      period:
        type: string
        description: "To describe the period between each transaction within a subscription. Potential values could be (but are not limited to) `monthly`, `quarterly` and `unknown`, and may be converted to enums at a future unspecified date."
      categories:
        type: object
        description: "Categories of the subscription"
        required:
          - l1
          - l2
        properties:
          l1:
            type: string
            description: "Details on the Level One category associated with the subscription"
          l2:
            type: string
            description: "Details on the Level Two category associated with the subscription"
      merchant:
        type: object
        description: "Details surrounding the identified merchant of the transaction (this field will be omitted if a merchant is not detected)"
        required:
          - id
          - name
          - logo
        properties:
          id:
            type: string
            description: "A unique ID for the identified merchant."
          name:
            type: string
            description: "The clean name of the identified merchant."
          logo:
            type: string
            description: "The merchant's logo image URL location."
      transactions:
        type: array
        items:
          $ref: "#/schemas/BasicTransactionV2"

  #### Signal Components

  WarningsResponse:
    title: Warnings Response
    type: array
    description: |
      | Warning              | Description                                                                            |
      |:---------------------|:---------------------------------------------------------------------------------------|
      | `overdraft`          | Account is overdrawn.                                                                  |
      | `cannot_cover_bills` | The total future payments (for the period) exceeds the current balance.                |
      | `late_income`        | A regular incoming payment was expected to be received on the account and hasn't yet. |                                                  |
      | `late_payment`       | A regular outgoing payment was expected to come out of the account and hasn't yet.    |
      | `regular_payment_changed`    | The value of a regular payment has increased or decreased between the oldest and newest instance |      

    items:
      $ref: "#/schemas/Warning"

  WarningsMetaData:
    title: Warnings Metadata
    type: object
    required:
      - results
      - from
      - to
      - today
    properties:
      results:
        type: integer
        description: Number of results returned.
      from:
        type: string
        description: "`From` date used in query (`YYYY-MM-DD`)"
      to:
        type: string
        description: "`To` date used in query (`YYYY-MM-DD`)"
      today:
        type: string
        description: "`Today` date used in query (`YYYY-MM-DD`)"

  Warning:
    title: Warning Object
    type: object
    required:
      - type
      - details
    properties:
      type:
        type: string
        enum:
          - overdraft
          - cannot_cover_bills
          - late_income
          - late_payment
          - regular_payment_changed
      details:
        anyOf:
          - $ref: "#/schemas/OverdraftWarningDetails"
          - $ref: "#/schemas/CannotCoverBillsWarningDetails"
          - $ref: "#/schemas/LateIncomeWarningDetails"
          - $ref: "#/schemas/LatePaymentWarningDetails"
          - $ref: "#/schemas/RegularPaymentChangedWarningDetails"

  OverdraftWarningDetails:
    title: Overdraft Warning Details
    type: object
    required:
      - account_id
      - overdrawn_by
    properties:
      account_id:
        type: string
        description: ID of the account that is in danger of being overdrawn.
      overdrawn_by:
        allOf:
          - description: Amount the account is overdrawn by.
          - $ref: "components-common-schemas.yaml#/schemas/BudAmount"

  CannotCoverBillsWarningDetails:
    title: Cannot Cover Bills Warning Details
    type: object
    required:
      - account_id
      - total_expected_payments
      - current_balance
      - transactions
    properties:
      account_id:
        type: string
        description: ID of the account that is in danger of being overdrawn.
      total_expected_payments:
        allOf:
          - description: Total predicted amount expected to be paid.
          - $ref: "components-common-schemas.yaml#/schemas/BudAmount"
      transactions:
        type: array
        items:
          type: object
          required:
            - account_id
            - description
            - date
            - label
            - credit_debit_indicator
            - amount
          properties:
            account_id:
              type: string
            description:
              type: string
            date:
              type: string
            label:
              type: string
            credit_debit_indicator:
              type: string
              description: Indication as to whether the transaction was a credit or debit
              enum:
                - Credit
                - Debit
            amount:
              $ref: "components-common-schemas.yaml#/schemas/BudAmount"
      current_balance:
        allOf:
          - description: Balance today (or balance at `X-Today`); this is less than `total_expected_payments`.
          - $ref: "components-common-schemas.yaml#/schemas/BudAmount"

  LateIncomeWarningDetails:
    title: Late Income Warning Details
    type: object
    required:
      - account_id
      - label
      - description
      - expected_amount
      - expected_date
      - days_late
    properties:
      account_id:
        type: string
        description: ID of the account that has not received its income yet.
      label:
        type: string
        description: Transaction label for the "grouping" of the regular transaction.
      description:
        type: string
        description: Transaction description.
      expected_amount:
        $ref: "components-common-schemas.yaml#/schemas/BudAmount"
      expected_date:
        type: string
        description: Expected date of payment in ISO8601 format.
      days_late:
        type: integer
        description: Number of days that the transaction is late by.

  LatePaymentWarningDetails:
    title: Late Payment Warning Details
    type: object
    description: Triggered when a payment has not been made by predicted date.
    required:
      - account_id
      - label
      - description
      - expected_amount
      - expected_date
      - days_late
    properties:
      account_id:
        type: string
        description: ID of the account that has not made its payment yet.
      label:
        type: string
        description: Transaction label for the "grouping" of the regular transaction.
      description:
        type: string
        description: Transaction description.
      expected_amount:
        $ref: "components-common-schemas.yaml#/schemas/BudAmount"
      expected_date:
        type: string
        description: Expected date of payment in ISO8601 format.
      days_late:
        type: integer
        description: Number of days that the transaction is late by.

  RegularPaymentChangedWarningDetails:
    title: Regular Payment Changed Warning Details
    type: object
    required:
      - account_id
      - regular_payment_label
      - description
      - change
      - delta
    properties:
      account_id:
        type: string
        description: Unique identifier of the account that the regular payment is made from.
      provider:
        type: string
        description: Banking provider the account exists with.
      regular_payment_label:
        type: string
        description: Unique identifier associated with the group of transactions that make up this regular payment group.
      description:
        type: string
        description: The description of the latest transaction of the regular payments group.
      change:
        type: string
        enum: [increase, decrease]
        description: To denote whether the change in the amount associated with the regular payment has increased or decreased.
      delta:
        allOf:
          - description: The difference in the transaction amount between latest transaction and the previous transaction.
          - $ref: "components-common-schemas.yaml#/schemas/BudAmount"
      transactions:
        type: array
        description: The transactions making up this group of regular payments.
        items:
          type: object
          required:
            - account_id
            - transaction_id
            - description
            - date
            - label
            - credit_debit_indicator
            - amount
          properties:
            account_id:
              type: string
              description: The unique identifier of the account associated with the transaction.
            transaction_id:
              type: string
              description: Unique identifier of the transaction.
            description:
              type: string
              description: The transaction description string.
            date:
              type: string
              description: The date of the transaction in YYYY-MM-DD format.
            label:
              type: string
              description: Unique identifier associated with the group of transactions that make up this regular payment group.              
            credit_debit_indicator:
              type: string
              description: Indication as to whether the transaction was a credit or debit.
              enum:
                - Credit
                - Debit
            amount:
              $ref: "components-common-schemas.yaml#/schemas/BudAmount"
            merchant:
              $ref: "#/schemas/Merchant"

  # this has to be a separate object as using 'allOf' with 'nullable' doesn't work
  NullableMerchant:
    title: Bud Merchant Object
    type: object
    nullable: true
    description: "Details regarding a merchant associated with a transaction"
    required:
      - id
      - name
      - logo
    properties:
      id:
        type: string
        description: "Identifier for the detected merchant"
      name:
        type: string
        description: "Display name for the detected merchant"
      logo:
        type: string
        description: "URL for logo of the detected merchant"

  Merchant:
    title: Bud Merchant Object
    type: object
    description: "Details regarding a merchant associated with a transaction"
    required:
      - id
      - name
      - logo
    properties:
      id:
        type: string
        description: "Identifier for the detected merchant"
      name:
        type: string
        description: "Display name for the detected merchant"
      logo:
        type: string
        description: "URL for logo of the detected merchant"

  IncreasedExpenditureWarningDetails:
    title: Increased Expenditure Warning Details
    type: object
    description: Triggered when expenditure in a given category has increased since last month.
    required:
      - category
      - last_month
      - current
    properties:
      category:
        type: string
      last_month:
        $ref: "components-common-schemas.yaml#/schemas/BudAmount"
      current:
        $ref: "components-common-schemas.yaml#/schemas/BudAmount"

  MoneyManagementResponse:
    title: Money Management Response
    type: array
    description: |
        | Money Management                | Description                                                                            |
        |:--------------------------------|:---------------------------------------------------------------------------------------|
        | `overdraft`                     | Account is overdrawn (note that credit cards will not trigger this warning). |
        | `cannot_cover_bills`            | The total upcoming payments for exceeds the current balance. The time range used for analysing past payments is `(X-From, X-Today)` and the period used for predicting upcoming payments is `(X-Today, X-To)`. |
        | `late_income`                   | A regular incoming payment was expected to be received on the account and hasn't yet. |
        | `late_payment`                  | A regular outgoing payment was expected to come out of the account and hasn't yet.    |
        | `regular_payment_changed`       | The value of a regular payment has increased or decreased between the oldest and newest instance |
        | `suspected_duplicate_charge`    | A duplicate transaction is one of more transactions that are debit transactions, have a non-zero booking time, and have a non-zero amount. They must also have matching `account_id`, `transaction_reference`, `merchant_id` (if one exists), `amount`, `currency`, `date`, `booking_datetime` |
        | `regular_monthly_income_change` | The value of a regular income has increased or decreased based on the previous months income. As this is comparing income over whole months, only complete months are considered in the provided date range. For instance, if `X-From=2022-01-05` and `X-To=2022-04-05` then the range considered by this warning will be `(2022-01-01, 2022-03-31)`. In addition, the default treshold for a difference in amounts to trigger this warning is 10%. |
    items:
      $ref: "#/schemas/MoneyManagement"

  MoneyManagementMetaData:
    title: Warnings Metadata
    type: object
    description: "Bud money management metadata"
    required:
      - results
      - from
      - to
      - today
    properties:
      results:
        type: integer
        description: Number of results returned.
      from:
        type: string
        description: "`From` date used in query (`YYYY-MM-DD`)"
      to:
        type: string
        description: "`To` date used in query (`YYYY-MM-DD`)"
      today:
        type: string
        description: "`Today` date used in query (`YYYY-MM-DD`)"

  MoneyManagement:
    title: Money Management Object
    type: object
    description: "Bud money management response array"
    required:
      - type
      - details
    properties: 
      type:
        type: string
        description: Money Management responses returned by API endpoint.
        enum:
          - overdraft
          - cannot_cover_bills
          - late_income
          - late_payment
          - regular_payment_changed
          - suspected_duplicate_charge
          - regular_monthly_income_change
      details:
        anyOf:
          - $ref: "#/schemas/OverdraftMoneyMangementDetails"
          - $ref: "#/schemas/CannotCoverBillsMoneyManagementDetails"
          - $ref: "#/schemas/LateIncomeMoneyManagementDetails"
          - $ref: "#/schemas/LatePaymentMoneyManagementDetails"
          - $ref: "#/schemas/RegularPaymentChangedMoneyManagementDetails"
          - $ref: "#/schemas/SuspectedDuplicateChargeMoneyManagementDetails"
          - $ref: "#/schemas/RegularMonthlyIncomeChangedMoneyManagementDetails"
  OverdraftMoneyMangementDetails:
    title: Overdraft Warning Details
    type: object
    required:
      - account_id
      - overdrawn_by
    properties:
      account_id:
        type: string
        description: ID of the account that is overdrawn.
      overdrawn_by:
        allOf:
          - description: Amount the account is overdrawn by.
          - $ref: "components-common-schemas.yaml#/schemas/BudAmount"

  CannotCoverBillsMoneyManagementDetails:
    title: Cannot Cover Bills Warning Details
    type: object
    required:
      - account_id
      - total_expected_payments
      - current_balance
      - transactions
    properties:
      account_id:
        type: string
        description: A unique identifier for the Customer bank account
      total_expected_payments:
        allOf:
          - description: Total predicted amount expected to be spent (i.e. the total of all upcoming debit transaction amounts).
          - $ref: "components-common-schemas.yaml#/schemas/BudAmount"
      transactions:
        type: array
        description: List of predicted upcoming transactions.
        items:
          type: object
          required:
            - account_id
            - description
            - provider
            - date
            - label
            - credit_debit_indicator
            - amount
            - category_l1
            - category_l2
            - category_l3
          properties:
            account_id:
              type: string
              description: A unique identifier for the Customer bank account
            description:
              type: string
              description: The raw transaction reference e.g. "bank transfer"
            provider:
              type: string
              description: The name of the relevant provider relevant to the source of the original transaction data
            date:
              type: string
              description: The timestamp of when the transaction is expected to be booked in the format `YYYY-MM-DD`
            label:
              type: string
              description: The recurring transaction group identifier associating one set of regular transactions e.g. all Spotify transactions that are regular by the same monthly period will share the same label. This label comes from the group used to predict this upcoming transaction.
            credit_debit_indicator:
              type: string
              description: Indication as to whether the transaction was a credit or debit
              enum:
                - Credit
                - Debit
            amount:
              allOf:
                - description: The predicted transaction amount
                - $ref: "components-common-schemas.yaml#/schemas/BudAmount"
            merchant:
              $ref: "#/schemas/NullableMerchant"
            category_l1:
              type: string
              description: "The name of the category returned by the Bud categorisation model."
            category_l2:
              type: string
              description: "The name of the subcategory returned by the Bud categorisation model."
            category_l3:
              type: string
              description: "The name of the 3rd level category returned by the Bud categorisation model."
      current_balance:
        allOf:
          - type: object
            description: The current balance of the account
            required:
              - credit_debit_indicator
            properties:
              credit_debit_indicator:
                type: string
                description: Indication as to whether the transaction was a credit or debit
                enum:
                  - Credit
                  - Debit
          - $ref: "components-common-schemas.yaml#/schemas/BudAmount"

  LateIncomeMoneyManagementDetails:
    title: Late Income Warning Details
    type: object
    required:
      - account_id
      - label
      - description
      - expected_amount
      - expected_date
      - days_late
      - category_l1
      - category_l2
      - category_l3
    properties:
      account_id:
        type: string
        description: ID of the account that has not received its income yet.
      label:
        type: string
        description: The recurring transaction group identifier associating one set of regular transactions e.g. all Salary transactions that are regular by the same monthly period will share the same label.
      description:
        type: string
        description: Transaction description.
      expected_amount:
        $ref: "components-common-schemas.yaml#/schemas/BudAmount"
      expected_date:
        type: string
        description: Expected date of payment in ISO8601 format.
      days_late:
        type: integer
        description: Number of days that the transaction is late by.
      merchant:
        $ref: "#/schemas/NullableMerchant"
      category_l1:
        type: string
        description: "The name of the category returned by the Bud categorisation model."
      category_l2:
        type: string
        description: "The name of the subcategory returned by the Bud categorisation model."
      category_l3:
        type: string
        description: "The name of the 3rd level category returned by the Bud categorisation model."

  LatePaymentMoneyManagementDetails:
    title: Late Payment Warning Details
    type: object
    description: Triggered when a payment has not been made by predicted date.
    required:
      - account_id
      - label
      - description
      - expected_amount
      - expected_date
      - days_late
      - category_l1
      - category_l2
      - category_l3
    properties:
      account_id:
        type: string
        description: ID of the account from where the income is expected to be debited.
      label:
        type: string
        description: The recurring transaction group identifier associating one set of regular transactions e.g. all "Spotify" transactions that are regular by the same monthly period will share the same label.
      description:
        type: string
        description: The transaction description string.
      expected_amount:
        $ref: "components-common-schemas.yaml#/schemas/BudAmount"
      expected_date:
        type: string
        description: Expected date of payment in ISO8601 format.
      days_late:
        type: integer
        description: Number of days that the transaction is late by.
      merchant:
        $ref: "#/schemas/NullableMerchant"
      category_l1:
        type: string
        description: "The name of the category returned by the Bud categorisation model."
      category_l2:
        type: string
        description: "The name of the subcategory returned by the Bud categorisation model."
      category_l3:
        type: string
        description: "The name of the 3rd level category returned by the Bud categorisation model."

  RegularPaymentChangedMoneyManagementDetails:
    title: Regular Payment Changed Warning Details
    type: object
    required:
      - account_id
      - provider
      - regular_payment_label
      - description
      - change
      - delta
    properties:
      account_id:
        type: string
        description: Unique identifier of the account that the regular payment is made from.
      provider:
        type: string
        description: Banking provider the account exists with.
      regular_payment_label:
        type: string
        description: The recurring transaction group identifier associating one set of regular transactions e.g. all "Spotify" transactions that are regular by the same monthly period will share the same label.
      description:
        type: string
        description: The description of the latest transaction of the regular payments group.
      change:
        type: string
        enum: [increase, decrease]
        description: To denote whether the change in the amount associated with the regular payment has increased or decreased.
      delta:
        allOf:
          - description: The difference in the transaction amount between latest transaction and the previous transaction.
          - $ref: "components-common-schemas.yaml#/schemas/BudAmount"
      transactions:
        type: array
        description: The transactions making up this group of regular payments.
        items:
          type: object
          required:
            - account_id
            - transaction_id
            - description
            - date
            - credit_debit_indicator
            - amount
            - merchant
          properties:
            account_id:
              type: string
              description: The unique identifier of the account associated with the transaction.
            transaction_id:
              type: string
              description: Unique identifier of the transaction.
            description:
              type: string
              description: The transaction description string.
            date:
              type: string
              description: The date of the transaction in YYYY-MM-DD format.
            label:
              type: string
              description: The recurring transaction group identifier associating one set of regular transactions e.g. all "Spotify" transactions that are regular by the same monthly period will share the same label.
            credit_debit_indicator:
              type: string
              description: Indicates whether the transaction is a credit or a debit entry.
              enum:
                - Credit
                - Debit
            amount:
              $ref: "components-common-schemas.yaml#/schemas/BudAmount"
            merchant:
              $ref: "#/schemas/Merchant"
            l1_category_name:
              type: string
              description: "The name of the category returned by the Bud categorisation model."
            l2_category_name:
              type: string
              description: "The name of the subcategory returned by the Bud categorisation model."
            l3_category_name:
              type: string
              description: "The name of the 3rd level category returned by the Bud categorisation model."

  SuspectedDuplicateChargeMoneyManagementDetails:
    title: Duplicate Charge Warning Details
    type: array
    items:
      type: object
      required:
        - account_id
        - transaction_id
        - description
        - date
        - credit_debit_indicator
        - amount
        - merchant
      properties:
        account_id:
          type: string
          description: The unique identifier of the account associated with the transaction.
        transaction_id:
          type: string
          description: Unique identifier of the transaction.
        description:
          type: string
          description: The transaction description string.
        date:
          type: string
          description: The date of the transaction in YYYY-MM-DD format.
        label:
          type: string
          description: The recurring transaction group identifier associating one set of regular transactions e.g. all "Spotify" transactions that are regular by the same monthly period will share the same label.
        credit_debit_indicator:
          type: string
          description: Indicates whether the transaction is a credit or a debit entry.
          enum:
            - Credit
            - Debit
        amount:
          $ref: "components-common-schemas.yaml#/schemas/BudAmount"
        merchant:
          $ref: "#/schemas/Merchant"
        l1_category_name:
          type: string
          description: "The name of the category returned by the Bud categorisation model."
        l2_category_name:
          type: string
          description: "The name of the subcategory returned by the Bud categorisation model."
        l3_category_name:
          type: string
          description: "The name of the 3rd level category returned by the Bud categorisation model."

  RegularMonthlyIncomeChangedMoneyManagementDetails:
    title: Regular Monthly Income Changed Warning Details
    type: object
    required:
      - month
      - previous_month_income
      - current_month_income
      - proportion_change
    properties:
      month:
        type: string
        description: The current month used in calculations, in `YYYY-MM` format.
      previous_month_income:
        allOf:
          - description: The total income identified in the previous month.
          - $ref: "components-common-schemas.yaml#/schemas/BudAmount"
      current_month_income:
        allOf:
          - description: The total income identified in the current month.
          - $ref: "components-common-schemas.yaml#/schemas/BudAmount"
      proportion_change:
        type: string
        nullable: true
        description: |-
          The difference between the previous month's and the current month's income as a decimal rounded to 2 decimal places e.g. `"0.51"`. 
          If there is no income in one of the months, it is not possible to calculate the value so it is set to `null`.

  CustomerCharacteristicResponse:
    title: Customer Characteristic Response
    type: array
    description: |
        | Customer Characteristics             | Description |
        |:---------------------|:---------------------------------------------------------------------------------------|
        | `parent`             | User has childcare transactions |
        | `student_loan`       | User is paying off a student loan |
        | `pensioner`          | User receives pension income |                                                 
        | `saver`              | User receives savings income and / or deposits money into a savings / investment account |
        | `insurer`            | User has one or more insurance policies |
        | `overdraft_user`     | User was in their overdraft at midnight on any day during a set period|
        | `cash_user`          | User has made cash deposits and / or cash withdrawals |
        | `subscriber`         | User has one or more subscriptions|                     
    items:
      $ref: "#/schemas/CustomerCharacteristic"

  CustomerCharacteristicMetaData:
    title: Customer Characteristics Metadata
    type: object
    required:
      - results
      - from
      - to
      - today
    properties:
      results:
        type: integer
        description: Number of results returned.
      from:
        type: string
        description: "`From` date used in query (`YYYY-MM-DD`)"
      to:
        type: string
        description: "`To` date used in query (`YYYY-MM-DD`)"
      today:
        type: string
        description: "`Today` date used in query (`YYYY-MM-DD`)"

  CustomerCharacteristic:
    title: Customer Characteristic Object
    type: object
    required:
      - type
      - details
    properties:
      type:
        type: string
        description: Customer Characteristics responses returned by endpoint.
        enum:
          - parent
          - student_loan
          - pensioner
          - saver
          - insurer
          - overdraft
          - cash_user
          - subscriber
      details:
        anyOf:
          - $ref: "#/schemas/ParentCustomerCharacteristicDetails"
          - $ref: "#/schemas/StudentLoanCustomerCharacteristicDetails"               
          - $ref: "#/schemas/PensionerCustomerCharacteristicDetails"
          - $ref: "#/schemas/SaverCustomerCharacteristicDetails"    
          - $ref: "#/schemas/InsurerCustomerCharacteristicDetails"                                  
          - $ref: "#/schemas/OverdraftCustomerCharacteristicDetails" 
          - $ref: "#/schemas/CashUserCustomerCharacteristicDetails"             
          - $ref: "#/schemas/SubscriberCustomerCharacteristicDetails"  

  ParentCustomerCharacteristicDetails:
      title: Parent
      type: object
      required:
        - outgoing_categories
        - income
        - expenditure
      properties:
        outgoing_categories:
          type: object
          description: |
            An object keyed by an L3 category that triggered the characteristic that summarises
            all the outgoing transactions which fall under the category.
          additionalProperties:
            type: object
            properties:
              spending:
                $ref: "components-common-schemas.yaml#/schemas/BudAmount"
              spending_ratio:
                oneOf:
                  - type: 'null'
                  - type: string
              merchants:
                oneOf:
                  - type: 'null'
                  - type: array
                    items:
                      type: string
        income:
          $ref: "components-common-schemas.yaml#/schemas/BudAmount"
        expenditure:
          $ref: "components-common-schemas.yaml#/schemas/BudAmount"


  StudentLoanCustomerCharacteristicDetails:
      title: Student Loan
      type: object
      required:
        - income
        - expenditure
      properties:
        incoming_categories:
          type: object
          additionalProperties:
            type: object
            description: |
              An object keyed by an L3 category that triggered the characteristic that summarises
              all the incoming transactions which fall under the category.
            properties:
              incoming:
                $ref: "components-common-schemas.yaml#/schemas/BudAmount"
              expenditure_ratio:
                oneOf:
                  - type: 'null'
                  - type: string
              merchants:
                oneOf:
                  - type: 'null'
                  - type: array
                    items:
                      type: string
        outgoing_categories:
          type: object
          description: |
            An object keyed by an L3 category that triggered the characteristic that summarises
            all the outgoing transactions which fall under the category.
          additionalProperties:
            type: object
            properties:
              spending:
                $ref: "components-common-schemas.yaml#/schemas/BudAmount"
              spending_ratio:
                oneOf:
                  - type: 'null'
                  - type: string
              merchants:
                oneOf:
                  - type: 'null'
                  - type: array
                    items:
                      type: string
        income:
          $ref: "components-common-schemas.yaml#/schemas/BudAmount"
        expenditure:
          $ref: "components-common-schemas.yaml#/schemas/BudAmount"

  PensionerCustomerCharacteristicDetails:
      title: Pensioner
      type: object
      required:
        - incoming_categories
        - income
        - expenditure
      properties:
        incoming_categories:
          type: object
          additionalProperties:
            type: object
            description: |
              An object keyed by an L3 category that triggered the characteristic that summarises
              all the incoming transactions which fall under the category.
            properties:
              incoming:
                $ref: "components-common-schemas.yaml#/schemas/BudAmount"
              expenditure_ratio:
                oneOf:
                  - type: 'null'
                  - type: string
              merchants:
                oneOf:
                  - type: 'null'
                  - type: array
                    items:
                      type: string
        income:
          $ref: "components-common-schemas.yaml#/schemas/BudAmount"
        expenditure:
          $ref: "components-common-schemas.yaml#/schemas/BudAmount"

  SaverCustomerCharacteristicDetails:
      title: Saver
      type: object
      required:
        - income
        - expenditure
      properties:
        incoming_categories:
          type: object
          additionalProperties:
            type: object
            description: |
              An object keyed by an L3 category that triggered the characteristic that summarises
              all the incoming transactions which fall under the category.
            properties:
              incoming:
                $ref: "components-common-schemas.yaml#/schemas/BudAmount"
              expenditure_ratio:
                oneOf:
                  - type: 'null'
                  - type: string
              merchants:
                oneOf:
                  - type: 'null'
                  - type: array
                    items:
                      type: string
        outgoing_categories:
          type: object
          description: |
            An object keyed by an L3 category that triggered the characteristic that summarises
            all the outgoing transactions which fall under the category.
          additionalProperties:
            type: object
            properties:
              spending:
                $ref: "components-common-schemas.yaml#/schemas/BudAmount"
              spending_ratio:
                oneOf:
                  - type: 'null'
                  - type: string
              merchants:
                oneOf:
                  - type: 'null'
                  - type: array
                    items:
                      type: string
        income:
          $ref: "components-common-schemas.yaml#/schemas/BudAmount"
        expenditure:
          $ref: "components-common-schemas.yaml#/schemas/BudAmount"


  InsurerCustomerCharacteristicDetails:
      title: Insurer
      type: object
      required:
        - income
        - expenditure
      properties:
        incoming_categories:
          type: object
          additionalProperties:
            type: object
            description: |
              An object keyed by an L3 category that triggered the characteristic that summarises
              all the incoming transactions which fall under the category.
            properties:
              incoming:
                $ref: "components-common-schemas.yaml#/schemas/BudAmount"
              expenditure_ratio:
                oneOf:
                  - type: 'null'
                  - type: string
              merchants:
                oneOf:
                  - type: 'null'
                  - type: array
                    items:
                      type: string
        outgoing_categories:
          type: object
          description: |
            An object keyed by an L3 category that triggered the characteristic that summarises
            all the outgoing transactions which fall under the category.
          additionalProperties:
            type: object
            properties:
              spending:
                $ref: "components-common-schemas.yaml#/schemas/BudAmount"
              spending_ratio:
                oneOf:
                  - type: 'null'
                  - type: string
              merchants:
                oneOf:
                  - type: 'null'
                  - type: array
                    items:
                      type: string
        income:
          $ref: "components-common-schemas.yaml#/schemas/BudAmount"
        expenditure:
          $ref: "components-common-schemas.yaml#/schemas/BudAmount"

  OverdraftCustomerCharacteristicDetails:
    title: Overdraft
    type: object
    required:
      - account_id
      - days_in_overdraft
      - ratio_days_in_overdraft
    properties:
      account_id: 
        type: string
        description: The account ID of the account which has been in overdraft
      days_in_overdraft: 
        type: string
        description: Total number of days in the time period spent in overdraft
      ratio_days_in_overdraft:
        oneOf:
          - type: 'null'
          - type: string
        description: The ratio of days spent in overdraft to the total days in the time period. Null if time period was over 0 days.      


  CashUserCustomerCharacteristicDetails:
      title: Cash User
      type: object
      required:
        - income
        - expenditure
      properties:
        incoming_categories:
          type: object
          additionalProperties:
            type: object
            description: |
              An object keyed by an L3 category that triggered the characteristic that summarises
              all the incoming transactions which fall under the category.
            properties:
              incoming:
                $ref: "components-common-schemas.yaml#/schemas/BudAmount"
              expenditure_ratio:
                oneOf:
                  - type: 'null'
                  - type: string
              merchants:
                oneOf:
                  - type: 'null'
                  - type: array
                    items:
                      type: string
        outgoing_categories:
          type: object
          description: |
            An object keyed by an L3 category that triggered the characteristic that summarises
            all the outgoing transactions which fall under the category.
          additionalProperties:
            type: object
            properties:
              spending:
                $ref: "components-common-schemas.yaml#/schemas/BudAmount"
              spending_ratio:
                oneOf:
                  - type: 'null'
                  - type: string
              merchants:
                oneOf:
                  - type: 'null'
                  - type: array
                    items:
                      type: string
        income:
          $ref: "components-common-schemas.yaml#/schemas/BudAmount"
        expenditure:
          $ref: "components-common-schemas.yaml#/schemas/BudAmount"


  SubscriberCustomerCharacteristicDetails:
      title: Subscriber
      type: object
      required:
        - outgoing_categories
        - income
        - expenditure
      properties:
        outgoing_categories:
          type: object
          description: |
            An object keyed by an L3 category that triggered the characteristic that summarises
            all the outgoing transactions which fall under the category.
          additionalProperties:
            type: object
            properties:
              spending:
                $ref: "components-common-schemas.yaml#/schemas/BudAmount"
              spending_ratio:
                oneOf:
                  - type: 'null'
                  - type: string
              merchants:
                oneOf:
                  - type: 'null'
                  - type: array
                    items:
                      type: string
        income:
          $ref: "components-common-schemas.yaml#/schemas/BudAmount"
        expenditure:
          $ref: "components-common-schemas.yaml#/schemas/BudAmount"


  FinancialInsightResponse:
    title: Customer Characteristic Response
    type: array
    description: |
         | Financial Insights   | Description                                                                            |
         |:---------------------|:---------------------------------------------------------------------------------------|
         | `gambling_income`             | Income indentified through gambling transactions |
         | `pension_income`              | Income indentified through company pension(s) |
         | `gambling_threshold`          | Overall spending on gambling exceeds the threshold (defaults to 20%) of all income over that same time period |
         | `new_insurance_expense`       | Any new insurance related expense identified |
         | `subscription_expense`        | Any new subscription related expense identified |
    items:
      $ref: "#/schemas/FinancialInsight"

  FinancialInsightMetaData:
    title: Financial Insight Metadata
    type: object
    required:
      - results
      - from
      - to
      - today
    properties:
      results:
        type: integer
        description: Number of results returned.
      from:
        type: string
        description: "`From` date used in query (`YYYY-MM-DD`)"
      to:
        type: string
        description: "`To` date used in query (`YYYY-MM-DD`)"
      today:
        type: string
        description: "`Today` date used in query (`YYYY-MM-DD`)"

  FinancialInsight:
    title: Customer Characteristic Object
    type: object
    required:
      - type
      - details
    properties:
      type:
        type: string
        enum:
          - subscription_expense
          - insurance_expense
          - gambling_threshold
          - pension_income
          - gambling_income
      details:
        anyOf:
          - $ref: "#/schemas/GamblingIncomeFinancialInsightDetails" 
          - $ref: "#/schemas/PensionIncomeFinancialInsightDetails" 
          - $ref: "#/schemas/GamblingThresholdFinancialInsightDetails"
          - $ref: "#/schemas/InsuranceExpenseFinancialInsightDetails"  
          - $ref: "#/schemas/SubscriptionExpenseFinancialInsightDetails"

  GamblingIncomeFinancialInsightDetails:
    title: Gambling Income
    type: object
    required:
      - total
      - merchant_ids
    properties:
        total:
          type: array
          description: Income identified as pension transactions
          items:
            $ref: "components-common-schemas.yaml#/schemas/BudAmount" 
        merchant_ids:
          allOf:
            - type: array
              description: List of merchants associated to pension transactions 
              items:
                type: string

  PensionIncomeFinancialInsightDetails:
    title: Pension Income
    type: object
    required:
      - total
      - merchant_ids
    properties:
        total:
          type: array
          description: Income identified as pension transactions
          items:
            $ref: "components-common-schemas.yaml#/schemas/BudAmount" 
        merchant_ids:
          allOf:
            - type: array
              description: List of merchants associated to pension transactions 
              items:
                type: string

  GamblingThresholdFinancialInsightDetails:
    title: Gambling Threshold
    type: object
    required:
      - income
      - expenditure
      - threshold
      - ratio_to_income
      - transactions
    properties:
        income:
          allOf:
            - description: Total income amount
            - $ref: "components-common-schemas.yaml#/schemas/BudAmount" 
        expenditure:
          allOf:
            - description: Total expenditure amount
            - $ref: "components-common-schemas.yaml#/schemas/BudAmount"
        threshold:
          type: string
          description: The fraction of income needed to spend on gambling to trigger the warning, formatted as a decimal numeric string
        ratio_to_income:
          type: string
          description: |-
            The ratio of gambling expenditure to income over the period. 
            If there is no income in one of the months, it is not possible to calculate the value so it is set to `null`.
          nullable: true
        transactions:
          type: array
          items:
            $ref: "#/schemas/GamblingTransaction"

  GamblingTransaction:
    title: Gambling Transaction
    type: object
    required:
      - transaction_id
      - account_id
      - description
      - booking_datetime
      - credit_debit_indicator
      - amount
    properties:
      transaction_id:
        type: string
        description: "A unique identifier for the transaction"
      account_id:
        type: string
        description: "A unique identifier for the Customer bank account"
      description:
        type: string
        description: The raw transaction reference e.g. "bank transfer"
      booking_datetime:
        type: string
        description: The timestamp of when the transactions was booked in ISO 8601/RFC 3339 format e.g. `"2022-06-10T15:30:02Z"`
      credit_debit_indicator:
        type: string
        description: "Indication as to whether the transaction was a credit or debit"
        enum:
          - Credit
          - Debit
      amount:
        $ref: "components-common-schemas.yaml#/schemas/BudAmount" 

    
  InsuranceExpenseFinancialInsightDetails:
    title: Insurance Expenses
    type: object
    required:
      - total
      - merchant_ids
    properties:
        total:
          type: array
          description: Income identified as pension transactions
          items:
            $ref: "components-common-schemas.yaml#/schemas/BudAmount" 
        merchant_ids:
          allOf:
            - type: array
              description: List of merchants associated to pension transactions 
              items:
                type: string


  SubscriptionExpenseFinancialInsightDetails:
    title: Subscription Expense
    type: object
    required:
      - transaction_id
      - account_id
      - merchant
      - l3_category_name
      - amount
    properties:
      transaction_id:
        type: string
        description: trans id 
      account_id:
        type: string
        description: account id
      merchant:
        type: string
        description: merchant
      l3_category_name:
        type: string
        description: level 3 transaction category
      amount:
        allOf:
          - description: Total amount of subscription related expenses. 
          - $ref: "components-common-schemas.yaml#/schemas/BudAmount"  


  TrendsResponse:
    title: Trends Response
    type: object
    description: |
      Each key/value pair represents a month and the totals for that month. The keys will be of the form `YYYY-MM` for each month totalled.
    additionalProperties:
      type: object
      required:
        - income
        - expenditure
        - spending_ratio
        - categories
        - results
      properties:
        income:
          allOf:
            - description: Total income in the period
            - $ref: "components-common-schemas.yaml#/schemas/BudAmount"
        expenditure:
          allOf:
            - description: Total expenses in the period
            - $ref: "components-common-schemas.yaml#/schemas/BudAmount"
        spending_ratio:
          type: string
          description: Ratio of expenditure to income (to 2dp)
        categories:
          type: object
          description: A spending breakdown of each category. Each key name corresponds to the category name.
          additionalProperties:
            $ref: "#/schemas/CategoryTotal"
        results:
          type: integer
          description: Number of transactions that were totalled over.

  TrendsMetaData:
    title: Trends Response Metadata
    type: object
    description: "Any relevant metadata associated wih the response from the Retrieve Trends endpoint"
    required:
      - results
      - from
      - to
    properties:
      results:
        type: integer
        description: Number of results returned.
      from:
        type: string
        description: "`From` date used in query (`YYYY-MM-DD`)"
      to:
        type: string
        description: "`To` date used in query (`YYYY-MM-DD`)"

  CategoryTotal:
    title: Category Total
    type: object
    required:
      - credit
      - debit
      - subcategories
    properties:
      credit:
        allOf:
          - description: Total credited in the account in the category
          - $ref: "#/schemas/SubTotal"
      debit:
        allOf:
          - description: Total debited in the account in the category
          - $ref: "#/schemas/SubTotal"
      subcategories:
        type: object
        description: A breakdown of each subcategory. Each key corresponds to the subcategory name.
        additionalProperties:
          $ref: "#/schemas/SubCategoryTotal"

  SubCategoryTotal:
    title: Subcategory Total
    type: object
    required:
      - credit
      - debit
    properties:
      credit:
        allOf:
          - description: Total credited in the account in the subcategory
          - $ref: "#/schemas/SubTotal"
      debit:
        allOf:
          - description: Total debited in the account in the subcategory
          - $ref: "#/schemas/SubTotal"

  ForecastedMetaData:
    title: Forecasted Metadata
    type: object
    description: "Metadata object for the financial assistant forecast response"
    required:
      - from
      - to
    properties:
      from:
        type: string
        description: From-date in `YYYY-MM-DD` format.
      to:
        type: string
        description: From-date in `YYYY-MM-DD` format.

  SubTotal:
    title: Sub Total
    type: object
    required:
      - amount
      - ratio_to_income
      - ratio_to_expenditure
    properties:
      amount:
        $ref: "components-common-schemas.yaml#/schemas/BudAmount"
      ratio_to_income:
        type: string
        description: Ratio to income (to 2dp)
      ratio_to_expenditure:
        type: string
        description: Ratio to expenditure (to 2dp)

  ForecastedTransaction:
    title: Forecasted Transaction
    type: object
    description: "Transaction object for the financial assistant forecast response"
    required:
      - transaction_id
      - label
      - description
      - status
      - amount
      - credit_debit_indicator
      - date
    properties:
      transaction_id:
        type: string
        description: |
          ID of the transaction if it is `Booked` or `Pending`. This will be empty if it corresponds to a predicted transaction 
          that has not yet been seen on the account.
      label:
        type: string
        description: Grouping label for the transaction if it is detected as a regular transaction.
      description:
        type: string
        description: Transaction description (usually the user-provided reference)
      status:
        type: string
        description: The transaction status
        enum:
          - Booked
          - Pending
          - Predicted
      amount:
        $ref: "components-common-schemas.yaml#/schemas/BudAmount"
      credit_debit_indicator:
        type: string
        description: Indication as to whether the transaction was a credit or debit
        enum:
          - Credit
          - Debit
      date:
        type: string
        description: Date (or predicted date) of the transaction in `YYYY-MM-DD` format.


  ListComponentsResponse:
    type: array
    items:
      $ref: '#/schemas/ComponentSpec'
      
  ComponentSpec:
    required:
      - name
      - description
      - parameters
    properties:
      name:
        type: string
        description: Name of the component, for creating an insight using it.
      description:
        type: string
        description: Human-readable description of the component.
      parameters:
        type: object
        nullable: true
        additionalProperties:
          $ref: '#/schemas/ComponentParameterSpec'

  ComponentParameterSpec:
    required:
      - type
      - min
      - max
      - default
    properties:
      type:
        type: string
        enum:
          - number
          - period
          - string
          - string-array
      min:
        oneOf:
          - type: number
          - type: string
        nullable: true
        description: The minimum value accepted for this parameter, if any.
      max:
        oneOf:
          - type: number
          - type: string
        nullable: true
        description: The maximum value accepted for this parameter, if any.
      default:
        oneOf:
          - type: number
          - type: string
          - type: array
        description: The default value for this parameter if unspecified.

  ListComponentsMetaData:
    type: object
    required:
      - results
    properties:
      results:
        type: number
        description: Number of available components.

  CreateInsightRequest:
    type: object
    required:
      - name
      - components
    properties:
      name:
        type: string
        description: The name to assign to this segment of users.
      description:
        type: string
        description: An optional human-readable description of the insight.
      components:
        type: array
        items:
          $ref: '#/schemas/ComponentParameters'

  CreateInsightResponse:
    type: object
    required:
      - insight_id
    properties:
      insight_id:
        type: string
        description: The ID of the created insight.

  RetrieveInsightResponse:
    type: object
    required:
      - id
      - name
      - description
      - components
    properties:
      id:
        type: string
        description: The ID of the insight.
      name:
        type: string
        description: The name assigned to this segment of users.
      description:
        type: string
        description: An optional human-readable description of the insight.
      components:
        type: array
        items:
          $ref: '#/schemas/CreatedComponentParameters'

  CompareInsightResponse:
    type: object
    required:
      - name
      - description
      - components
      - match
    properties:
      name:
        type: string
        description: The name assigned to this segment of users.
      description:
        type: string
        description: An optional human-readable description of the insight.
      components:
        type: object
        description: The result of comparing the customer against each configured component of this insight, keyed by component configuration IDs.
        additionalProperties:
          $ref: '#/schemas/ComponentResult'
      match:
        type: string
        description: Whether this customer fully, partially, or not at all matched this insight. Full means matching all components, partial means matching at least one.
        enum:
          - full
          - partial
          - 'false'

  CreatedComponentParameters:
    allOf:
      - $ref: '#/schemas/ComponentParameters'
      - type: object
        required:
          - id
        properties:
          id:
            type: string
            description: The ID of this component configuration.

  ComponentParameters:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: The name of the component to incorporate in the insight.
      parameters:
        type: object
        additionalProperties: {}
        description: The parameters you want to specify for the component from its component spec. All are optional and if omitted the default value is used.

  ComponentResult:
    type: object
    required:
      - name
      - match
      - value
    properties:
      name:
        type: string
        description: The name of the component.
      match:
        type: boolean
        description: Whether the customer matched this component.
      value:
        description: A component-specific computed value for this customer, that either matched or failed to match the components's requirements. Meaning varies by component.


  #### Rent Recognition Schemas

  ConsentFlag:
    type: object
    required:
      - consent_flag_bud
    properties:
      consent_flag_bud:
        type: boolean

  VerificationObject:
    type: object
    required:
      - rent_amount
      - recipient
      - kyc
    properties:
      rent_amount:
        type: string
        enum:
          - pending
          - verified
          - failed
      recipient:
        type: string
        enum:
          - pending
          - verified
          - failed
      kyc:
        type: string
        enum:
          - pending
          - verified
          - failed

  ProvidersObjectArray:
    type: object
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        type: string
        description: ""
      data:
        $ref: "#/schemas/ProvidersObjectArrayResponse"
      metadata:
        $ref: "#/schemas/ResultsMetadata"

  ProvidersObjectArrayResponse:
    type: array
    title: Provider Object Array
    description: "An array of providers the Customer has chosen to share their rental data with"
    items:
      $ref: "#/schemas/ProvidersObject"

  ProvidersObject:
    type: object
    description: "Details surrounding a third party provider a Customer can choose to share their rental data with"
    required:
      - provider_name
      - icon_url
    properties:
      provider_name:
        type: string
        example: Experian
      icon_url:
        type: string
        example: http://www.experian.com/icon.png

  UpdateTenancyEndDatePayloadObject:
    type: object
    required:
      - tenancy_end_date
    properties:
      tenancy_end_date:
        type: string
        description: "The end date of the tenancy (can be left blank if tenancy is rolling)"

  UpdateTenancyEndDateResponseObject:
    type: object
    properties:
      tenancy_end_date:
        type: string
        description: "The end date of the tenancy (can be left blank if tenancy is rolling)"

  TenancyPayloadObject:
    type: object
    required:
      - customer_details
      - rent_payments
      - tenancy_details
      - property_details
      - providers
    properties:
      customer_details:
        $ref: "#/schemas/CustomerDetailObject"
      rent_payments:
        items:
          $ref: "#/schemas/RRIngestTransaction"
      tenancy_details:
        $ref: "#/schemas/TenancyDetailsPayloadObject"
      property_details:
        $ref: "#/schemas/AddressObject"
      providers:
        $ref: "#/schemas/ProvidersObjectArrayResponse"

  TenancyResponseObject:
    type: object
    required:
      - operation_id
      - data
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: array
        items:
          $ref: "#/schemas/TenancyResponseObjectArray"
      metadata:
        $ref: "#/schemas/ResultsMetadata"

  TenancyResponseObjectArray:
    type: object
    title: Tenancy Response
    required:
      - tenancy_id
      - tenancy_details
      - property_details
      - providers
    properties:
      tenancy_id:
        type: string
        description: "A unique identifier associated with that tenancy"
      customer_details:
        $ref: "#/schemas/CustomerDetailObject"
      rent_payments:
        items:
          $ref: "#/schemas/RRIngestTransaction"
      tenancy_details:
        $ref: "#/schemas/TenancyDetailsObject"
      property_details:
        $ref: "#/schemas/AddressObject"
      providers:
        items:
          $ref: "#/schemas/ProvidersObject"

  RentProfileResponse:
    type: object
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        $ref: "#/schemas/RentProfileObject"
      metadata:
        $ref: "#/schemas/ResultsMetadata"

  RentProfileObject:
    type: object
    title: Rent Profile
    required:
      - customer_details
      - tenancies
    properties:
      customer_details:
        $ref: "#/schemas/CustomerDetailObject"
      tenancies:
        type: array
        items:
          $ref: "#/schemas/TenancyObject"

  TenancyObjectResponse:
    type: object
    required:
      - operation_id
      - data
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        $ref: "#/schemas/TenancyObject"
      metadata:
        $ref: "#/schemas/ResultsMetadata"

  TenancyObject:
    type: object
    required:
      - tenancy_id
      - rent_payments
      - tenancy_details
      - property_details
      - status
      - verification
    properties:
      tenancy_id:
        type: string
        description: "A unique identifier for that tenancy"
      rent_payments:
        items:
          $ref: "#/schemas/RRIngestTransaction"
      tenancy_details:
        $ref: "#/schemas/TenancyDetailsObject"
      property_details:
        $ref: "#/schemas/AddressObject"
      providers:
        items:
          $ref: "#/schemas/ProvidersObject"
      verification:
        $ref: "#/schemas/VerificationObject"
      status:
        $ref: "#/schemas/TenancyStatusObject"

  TenancyStatusObject:
    type: object
    description: "Details on the current status of the tenancy"
    properties:
      state:
        type: string
        description: "To describe the current state of the tenancy"
        enum:
          - active
          - inactive
      closure_details:
        $ref: "#/schemas/ClosureDetailsObject"

  ClosureDetailsObject:
    type: object
    description: "To describe any details about why the tenancy may have ended (if it has ended)"
    properties:
      date:
        type: string
        description: "Date (ISO 8601) that the tenancy was ended"
      reason:
        type: string
        description: "The reason why the tenancy was ended"
        enum:
          - missed_payment
          - tenancy_end_date_met
          - manually_closed

  TenancyDetailsPayloadObject:
    type: object
    description: "Specific details surrounding the Customer's tenancy"
    required:
      - monthly_due_day
      - monthly_rent_amount
      - recipient
      - tenancy_start_date
      - kyc_flag
    properties:
      monthly_due_day:
        type: string
        description: "The date each month when the rent payment is due"
        example:
      monthly_rent_amount:
        type: string
        description: "The expected monthly rent amount"
        example:
      standing_order:
        description: "Flag to describe if the Customer pays rent by standing order"
        type: boolean
        example: true
      direct_debit:
        description: "Flag to describe if the Customer pays rent by direct debit"
        type: boolean
        example: false
      recipient:
        $ref: "#/schemas/RecipientObject"
      tenancy_start_date:
        type: string
        description: "The start date of the tenancy"
        example: 2018-09-02
      tenancy_end_date:
        type: string
        description: "The end date of the tenancy (can be left blank if tenancy is rolling)"
        example: 2019-09-02
      kyc_flag:
        type: boolean
        description: ""
        example: true

  TenancyDetailsObject:
    type: object
    description: "Specific details surrounding the Customer's tenancy"
    required:
      - monthly_due_day
      - monthly_rent_amount
      - recipient
      - tenancy_start_date
      - kyc_flag
    properties:
      monthly_due_day:
        type: string
        description: "The date each month when the rent payment is due"
        example:
      monthly_rent_amount:
        type: string
        description: "The expected monthly rent amount"
        example:
      standing_order:
        description: "Flag to describe if the Customer pays rent by standing order"
        type: boolean
        example: true
      direct_debit:
        description: "Flag to describe if the Customer pays rent by direct debit"
        type: boolean
        example: false
      recipient:
        $ref: "#/schemas/RecipientObject"
      tenancy_start_date:
        type: string
        description: "The start date of the tenancy"
        example: 2018-09-02
      tenancy_end_date:
        type: string
        description: "The end date of the tenancy (can be left blank if tenancy is rolling)"
        example: 2019-09-02
      kyc_flag:
        type: boolean
        description: ""
        example: true
      next_payment_date:
        nullable: true
        type: string
        description: "The expected date of the Customer's next rent payment"
        example: 2019-07-02
      missed_payment_date:
        nullable: true
        type: string
        description: "Null by default. This field is populated if the Customer has missed a rent payment with the date of the missed payment"
        example: 2019-08-02

  RecipientObject:
    type: object
    description: "Details surrounding the recipient of the rent payment, i.e. the landlord or estate agent"
    required:
      - recipient_type
      - recipient_name
      - recipient_first_name
      - recipient_last_name
    properties:
      recipient_type:
        type: string
        description: "To describe the type of recipient"
        enum:
          - private_landlord
          - estate_agent
      recipient_name:
        type: string
        description: "__REQUIRED__ if the Landlord is an estate agent. The name of the estate agent is required"
      recipient_first_name:
        type: string
        description: "__REQUIRED__ if Landlord is a private landlord, the first name of the landlord is required"
      recipient_last_name:
        type: string
        description: "__REQUIRED__ if the Landlord is a private landlord, the last name of the landlord is required"

  AddressObject:
    type: object
    description: "The property address in Postcode Address File (PAF) format"
    required:
      - postcode
    properties:
      sub_building:
        type: string
        example: "null"
      building_name:
        type: string
        example: "The Bower"
      building_number:
        type: string
        example: "1007"
      dependent_thoroughfare:
        type: string
        example: "null"
      thoroughfare:
        type: string
        example: "The Bower"
      dependent_locality:
        type: string
        example: "null"
      double_dependent_locality:
        type: string
        example: "null"
      post_town:
        type: string
        example: "London"
      postcode:
        type: string
        example: "EC1V 9NR"

  CustomerDetailObject:
    type: object
    description: "Personal details associated with the Customer"
    required:
      - title
      - first_name
      - last_name
      - dob
    properties:
      title:
        type: string
        description: "Title of the Rent Payee"
      first_name:
        description: "First name of the Rent Payee"
        type: string
      middle_name:
        type: string
        description: "Middle name of the Rent Payee"
      last_name:
        type: string
        description: "Last name of the Rent Payee"
      dob:
        type: string
        description: "Date of birth of the Rent Payee"

  RentPaymentsFindRequest:
    type: array
    description: "Expected request payload structure"
    items:
      $ref: "#/schemas/RRIngestTransaction"

  RRIngestTransaction:
    type: object
    description: "Bud standard transaction schema"
    required:
      - account_id
      - transaction_id
      - date
      - amount
      - credit_debit_indicator
    properties:
      account_id:
        type: string
        description: "A unique identifier for the Customer bank account"
      transaction_id:
        type: string
        description: "A unique identifier for the transaction"
      transaction_type:
        type: string
        description: |
          | enum  | Transaction Type                                                   |
          |:------|:-------------------------------------------------------------------|
          | DEB   | [Debit / Credit] Card                                              |
          | CSQ   | Cash / Cheque(s)                                                   |
          | CHG   | Charge                                                             |
          | COR   | Correction                                                         |
          | CPT   | Cashpoint / ATM                                                    |
          | INT   | Interest                                                           |
          | OTH   | Other                                                              |
          | BAT   | Bank Transfer (e.g. FP/MP/IB/BACS/CHAPS/SWIFT)                     |
          | DD    | Direct Debit                                                       |
          | SO    | Standing Order                                                     |
        enum:
          - "DEB"
          - "CSQ"
          - "CHG"
          - "COR"
          - "CPT"
          - "INT"
          - "OTH"
          - "BAT"
          - "DD"
          - "SO"
      date:
        type: string
        description: "The date (YYYY-MM-DD) that the transaction took place"
      time:
        type: string
        description: "The time (HH:MM:SS) that the transaction took place"
      transaction_description:
        type: string
        description: "Any Customer defined input, e.g. a bank transfer reference"
      creditor:
        $ref: "#/schemas/Creditor"
      debtor:
        $ref: "#/schemas/Debtor"
      credit_debit_indicator:
        type: string
        description: "Indication as to whether the transaction was a credit or debit"
        enum:
          - Credit
          - Debit
      amount:
        $ref: "#/schemas/InpAmount"

  GetRentPaymentsResponse:
    type: object
    description: "Expected response structure from GET rent payments endpoint"
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: array
        items:
          $ref: "#/schemas/GetRentPaymentsResponseObject"
      metadata:
        $ref: "#/schemas/ResultsMetadata"

  GetRentPaymentsResponseObject:
    title: Rent Payments Response
    type: object
    description: "Expected response structure from GET rent payments endpoint"
    properties:
      account_id:
        type: string
        description: "A unique identifier for the Customer bank account"
      transaction_id:
        type: string
        description: "A unique identifier for the transaction"
      transaction_type:
        type: string
        description: |
          | enum  | Transaction Type                                                   |
          |:------|:-------------------------------------------------------------------|
          | DEB   | [Debit / Credit] Card                                              |
          | CSQ   | Cash / Cheque(s)                                                   |
          | CHG   | Charge                                                             |
          | COR   | Correction                                                         |
          | CPT   | Cashpoint / ATM                                                    |
          | INT   | Interest                                                           |
          | OTH   | Other                                                              |
          | BAT   | Bank Transfer (e.g. FP/MP/IB/BACS/CHAPS/SWIFT)                     |
          | DD    | Direct Debit                                                       |
          | SO    | Standing Order                                                     |
        enum:
          - "DEB"
          - "CSQ"
          - "CHG"
          - "COR"
          - "CPT"
          - "INT"
          - "OTH"
          - "BAT"
          - "DD"
          - "SO"
      date:
        type: string
        description: "The date (YYYY-MM-DD) that the transaction took place"
      time:
        type: string
        description: "The time (HH:MM:SS) that the transaction took place"
      transaction_description:
        type: string
        description: "Any Customer defined input, e.g. a bank transfer reference"
      creditor:
        $ref: "#/schemas/Creditor"
      debtor:
        $ref: "#/schemas/Debtor"
      credit_debit_indicator:
        type: string
        description: "Indication as to whether the transaction was a credit or debit"
        enum:
          - Credit
          - Debit
      amount:
        $ref: "#/schemas/InpAmount"
      enrichment:
        $ref: "#/schemas/RentalScore"

  RentalScore:
    type: object
    properties:
      rental_score:
        type: string
        description: "The probability that this transaction is the Customers rent payment"

  ManualTransaction:
    type: object
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        type: string
        description: "The unique identifier for the endpoint called"
      data:
        type: array
        items:
          $ref: "#/schemas/ManualTransactionResponse"

  ManualTransactionResponse:
    type: object
    title: Manual Transaction Response
    required:
      - payment
    properties:
      account_id:
        type: string
        description: "The account id corresponding to the account the payment was made from"
        example: 5f44d9d6-8de0-4bc7-8db2-c26aea40ed62
      payment:
        type: object
        required:
          - amount
          - date
        properties:
          amount:
            type: string
            description: "The value of the rent payment"
            example: "1300.50"
          date:
            type: string
            description: "The date the rent payment occurred"
            example: "2019-09-06"

  RecipientUpdateObject:
    type: object
    description: "Details surrounding the recipient of the rent payment, i.e. the landlord or estate agent."
    properties:
      action:
        type: string
        description: "The operation to perform. Use 'confirm' once the Customer has confirmed their Estate Agent name from the list provided by the potential recipients endpoint. Use 'search_again' when an update needs to be made to the recipient name."
        enum:
          - confirm
          - search_again
      recipient:
        $ref: "#/schemas/RecipientObject"

  PotentialRecipientsResponse:
    type: object
    title: Potential Recipients Response
    required: ["operation_id", "data"]
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: array
        items:
          $ref: "#/schemas/PotentialRecipient"

  PotentialRecipient:
    title: Potential Recipient
    type: object
    required:
      - recipient_type
      - recipient_name
    properties:
      recipient_type:
        type: string
        description: "To describe the type of recipient"
        enum:
          - estate_agent
      recipient_name:
        type: string
        description: "The name of the Estate Agent recipient"
      recipient_id:
        type: string
        description: "Unique identifier associated with the Estate Agent recipient"

  #### Mortgage Affordability Schemas

  AffordabilityRequest:
    type: object
    description: "Expected request payload structure"
    required:
      - mortgage_type
      - property_price
      - deposit
      - annual_salary
      - term
    properties:
      mortgage_type:
        type: string
        description: "Type of mortgage required"
        enum: ["purchase_property"]
      property_price:
        $ref: "#/schemas/InpAmount"
      deposit:
        $ref: "#/schemas/InpAmount"
      annual_salary:
        $ref: "#/schemas/InpAmount"
      term:
        type: object
        description: "Required mortgage duration term."
        required:
          - duration
          - unit
        properties:
          duration:
            type: integer
            description: "Value of term required."
          unit:
            type: string
            description: "Multiplier for duration value."

  AffordabilityTaskCreatedResponse:
    type: object
    description: "Expected response structure"
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        $ref: "#/schemas/TaskId"
      metadata:
        $ref: "#/schemas/AffordabilityMetaData"

  AffordabilityResponse:
    type: object
    description: "Expected response structure from GET affordability result endpoint."
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: object
        description: "Main response payload."
        properties:
          mortgage_affordability:
            type: object
            description: "Result of response from mortgage partner."
            required:
              - provider
              - affordable
            properties:
              provider:
                type: string
                description: "Partner service result retrieved from."
              affordable:
                type: boolean
                description: "Is the requested property value affordable for the provided salary?"
              mortgage_details:
                type: object
                description: "Mortgage quote specific details."
                properties:
                  quote:
                    type: object
                    description: "References to the quote, can be used for further operations."
                    properties:
                      id:
                        type: string
                        description: "Operation ID returned from the provider."
                      reference:
                        type: string
                        description: "Quote reference returned from the provider."
                  max_mortgage_value:
                    $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
                  max_property_value:
                    $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
                  indicative_monthly_cost:
                    $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
                  indicative_rate_percentage:
                    type: string
                    description: "Example mortgage interest rate."
      metadata:
        $ref: "#/schemas/AffordabilityMetaData"


  AffordabilityMetaData:
    title: Task Status Metadata
    type: object
    description: "Info relating to the async request"
    required:
      - status
      - next_url
      - next_url_delay
    properties:
      status:
        type: string
        description: "The status of the job associated with the specified task id"
      next_url:
        type: string
        description: "The URL to call to obtain the results of the task"
      next_url_delay:
        type: number
        description: "Recommended delay in milliseconds before next call"


  #### Home Insurance Schemas

  HomeInsuranceRequest:
    title: Home Insurance Request
    type: object
    description: "Expected request to determine home insurance quotes"
    required:
      - first_name
      - last_name
      - email
      - address
      - ownership_type
      - date_of_birth
    properties:
      first_name:
        type: string
        description: "Customer's first name"
      last_name:
        type: string
        description: "Customer's last name"
      email:
        type: string
        description: "Customer's email address"
      address:
        $ref: "#/schemas/AddressObject"
      ownership_type:
        type: string
        description: "Property ownership type"
        enum:
          - Owner
          - Tenant
      date_of_birth:
        type: string
        description: "The customers date of birth in a format: `YYYY-MM-DD`"

  HITaskCreatedResponse:
    type: object
    description: "Expected response structure"
    required:
      - operation_id
      - data
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        $ref: "#/schemas/TaskId"

  HomeInsuranceResponse:
    title: Home Insurance Response
    type: object
    description: "Expected response structure"
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: array
        items:
          $ref: "#/schemas/HomeInsuranceResponseData"
      metadata:
        $ref: "#/schemas/HIResultsMetadata"

  HIResultsMetadata:
    title: Metadata Object
    type: object
    properties:
      status:
        type: string
        description: "Task status"
        enum:
          - Pending
          - Completed
          - Failed
      results:
        type: number
        description: "Number of results returned"

  HomeInsuranceResponseData:
    title: Home Insurance Results Object
    type: object
    description: "Set of elements used to define the Home Insurance Quote"
    required:
      - quote_id
      - provider
      - quote_detail
    properties:
      quote_id:
        type: string
        description: "The home insurance provider quote id"
      provider:
        $ref: "#/schemas/HomeInsuranceProvider"
      quote_detail:
        anyOf:
          - $ref: "#/schemas/HIQuoteDetail"
          - title: "Null"
            type: object
            nullable: true
      errors:
        description: "Possible errors from the home insurance provider."
        type: object
        nullable: true

  HomeInsuranceProvider:
    title: Home Insurance Provider Object
    type: object
    description: "Set of elements used to define a home insurance provider"
    required:
      - id
      - name
      - logo
      - tagline
      - terms
      - privacy_policy
    properties:
      id:
        type: string
        description: "The home insurance provider id"
      name:
        type: string
        description: "The home insurance provider name"
      logo:
        type: string
        description: "A URI to the home insurance provider's logo"
      tagline:
        type: string
        description: "The home insurance provider's tagline description"
      terms:
        type: string
        description: "A URI to the home insurance provider's terms and conditions"
      privacy_policy:
        type: string
        description: "A URI to the home insurance provider's privacy policy"

  HIQuoteDetail:
    title: Home Insurance Quote Detail Object
    type: object
    nullable: true
    description: "Set of elements used to define the details of a home insurance quote"
    required:
      - insurance_type
      - excess
      - contents_cover
      - monthly_price
      - features
      - redirect_url
    properties:
      insurance_type:
        type: string
        description: "The type of Home Insurance Quote as standardised by Bud"
        enum:
          - "Contents Insurance"
          - "Buildings Insurance"
          - "Contents & Buildings Insurance"
      excess:
        $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
      contents_cover:
        $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
      out_of_home_cover:
        $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
      monthly_price:
        $ref: "#/schemas/HomeInsurancePrice"
      annual_price:
        $ref: "#/schemas/HomeInsurancePrice"
      features:
        items:
          $ref: "#/schemas/HomeInsuranceQuoteFeatures"
      redirect_url:
        type: string
        description: "The home insurance partner redirect url"

  HomeInsurancePrice:
    type: object
    required:
      - amount
      - notes
    properties:
      amount:
        $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
      notes:
        type: array
        items:
          type: string

  HomeInsuranceQuoteFeatures:
    title: Home Insurance Quote Features
    type: object
    description: "Set of features for a given home insurance quote"
    required:
      - body
    properties:
      title:
        type: string
        description: "The quote feature title"
      body:
        type: string
        description: "The quote feature description"

  #### Broadband Schemas

  BroadBandQuotesStartSearch:
    title: Broadband Quotes Start Search
    type: object
    required:
      - postcode
    properties:
      postcode:
        type: string
        description: "Postcode"

  BroadBandQuotesStartSearchResponse:
    title: Broadband Quotes Start Search
    type: object
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        $ref: "#/schemas/TaskId"
      metadata:
        $ref: "#/schemas/BroadbandMetadata"

  BroadbandQuotes:
    title: Broadband Quotes Search Results
    type: object
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        description: "An array of broadband providers"
        type: array
        items:
          $ref: "#/schemas/BroadbandQuotesResults"
      metadata:
        $ref: "#/schemas/BroadbandMetadata"

  BroadbandQuotesResults:
    title: Broadband Quotes Results
    type: object
    properties:
      provider:
        $ref: "#/schemas/BroadbandProvider"

  BroadbandProvider:
    title: Broadband Provider
    type: object
    required:
      - name
      - image_url
      - redirect_url
      - packages
    properties:
      name:
        type: string
        description: "The name of the broadband provider"
      image_url:
        type: string
        description: "Link to the icon for the broadband provider"
      redirect_url:
        type: string
        description: "Link to the broadband provider"
      packages:
        description: "An array of broadband packages available from provider"
        type: array
        items:
          $ref: "#/schemas/BroadbandPackage"

  BroadbandPackage:
    title: Broadband Package
    type: object
    required:
      - name
      - redirect_url
      - broadband
      - phone
      - tv
      - contract
    properties:
      name:
        type: string
        description: "The name of the package"
      redirect_url:
        type: string
        description: "Link to the broadband package"
      broadband:
        $ref: "#/schemas/BroadbandComponent"
      phone:
        $ref: "#/schemas/PhoneComponent"
      tv:
        $ref: "#/schemas/TvComponent"
      contract:
        $ref: "#/schemas/ContractComponent"

  BroadbandComponent:
    title: Broadband
    type: object
    required:
      - name
      - download_speed
      - upload_speed
      - bandwidth
      - type
    properties:
      name:
        type: string
        description: "The name of the broadband component of the package"
      download_speed:
        type: integer
        description: "The download speed in mbps"
      upload_speed:
        type: integer
        description: "The upload speed in mbps"
      bandwidth:
        type: integer
        description: "The bandwidth in mbps"
      type:
        type: string
        description: "Broadband type (e.g., ADSL)"

  TvComponent:
    title: TV
    type: object
    required:
      - name
      - channels
      - hd_channels
    properties:
      name:
        type: string
        description: "The name of the tv component of the package"
      channels:
        type: integer
        description: "The number of TV channels"
      hd_channels:
        type: integer
        description: "The number of HD TV channels"
  PhoneComponent:
    title: Phone
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: "The name of the phone component of the package"

  ContractComponent:
    title: Contract
    type: object
    required:
      - length
      - setup_cost
      - monthly_cost
      - line_rental_cost
      - first_year_cost
      - total_contract_cost
    properties:
      length:
        type: integer
      setup_cost:
        $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
      monthly_cost:
        $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
      line_rental_cost:
        $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
      first_year_cost:
        $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
      total_contract_cost:
        $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"

  BroadbandMetadata:
    title: Metadata
    type: object
    properties:
      status:
        type: string
        description: "Task status"
        enum:
          - Started
          - Pending
          - Completed
      next_url:
        type: string
        description: "URL to call next"
      next_url_delay:
        type: number
        description: "Scheduled delay to be used when triggering next_url call"


  #### Utility Switching B2B Schemas

  EnergyPaymentSearch:
    title: Energy Payments Start Search
    type: object
    required:
      - operation_id
      - data
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: object
        properties:
          task_id:
            $ref: "#/schemas/TaskId"

  EnergyPaymentSearchResponse:
    title: Energy Payments Search Response
    type: object
    description: "Representation of a customer energy payment"
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: array
        items:
          allOf:
            - $ref: "#/schemas/EnergyPayment"
      metadata:
        title: Metadata
        type: object
        required:
          - status
        properties:
          status:
            $ref: "#/schemas/TaskStatus"

  RetrieveEnergySuppliers:
    title: Energy Supplier Details
    type: object
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        items:
          $ref: "#/schemas/Supplier"
      metadata:
        title: Metadata
        type: object
        required:
          - results
        properties:
          results:
            type: integer

  RetrieveEnergySupplierTariffs:
    title: Energy Supplier Tariffs
    type: object
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        items:
          allOf:
            - $ref: "#/schemas/Tariff"
            - title: Supplier Tariff
              properties:
                fuel_type:
                  $ref: "#/schemas/FuelType"
                standard:
                  type: boolean
                  description: Indicates whether the tariff is a Standard Variable Tariff or not.
      metadata:
        title: Metadata
        type: object
        required:
          - results
          - query
        properties:
          results:
            type: integer
            description: "Number of tariffs returned"
          query:
            description: "Query parameters used for the results."
            required:
              - supplier_id
              - fuel_type
              - standard
            properties:
              supplier_id:
                type: string
                description: "Unique identifier of the supplier"
              fuel_type:
                anyOf:
                  - $ref: "#/schemas/FuelType"
                  - title: "Null"
                    type: object
                    nullable: true
              standard:
                anyOf:
                  - type: boolean
                  - title: "Null"
                    type: object
                    nullable: true

  InitiateEnergyMeterDetails:
    title: Search Energy Meter Details
    type: object
    required:
      - operation_id
      - data
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        $ref: "#/schemas/TaskId"

  RetrieveEnergyMeterDetails:
    title: Energy Meter Details Search Response
    type: object
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: array
        items:
          anyOf:
            - $ref: "#/schemas/GasMeter"
            - $ref: "#/schemas/ElectricityMeter"
      metadata:
        title: Metadata
        type: object
        required:
          - status
        properties:
          status:
            $ref: "#/schemas/TaskStatus"
          reason:
            type: string
            description: "Reason for a `failed` status."

  InitiateEnergyEstimate:
    title: Initiate Energy Usage Estimation
    type: object
    required:
      - supplier_id
      - tariff_id
      - fuel_type
      - meter_type
      - annual_spend
    properties:
      supplier_id:
        type: string
        description: "Unique identifier of the supplier"
      tariff_id:
        type: string
        description: "ID of the supplier's tariff"
      fuel_type:
        $ref: "#/schemas/FuelType"
      meter_type:
        $ref: "#/schemas/MeterType"
      annual_spend:
        $ref: "#/schemas/EnergyPaymentAmount"

  EnergyEstimateResponse:
    title: Energy Usage Estimation Response
    type: object
    required:
      - operation_id
      - data
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: array
        items:
          $ref: "#/schemas/EnergyReading"

  PostEnergyQuotesRequestResponse:
    title: Initiate Energy Quotes Response
    type: object
    required:
      - operation_id
      - data
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        $ref: "#/schemas/TaskId"

  RetrieveEnergyQuotes:
    title: Retrieve Energy Quotes
    type: object
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        nullable: true
        type: array
        items:
          $ref: "#/schemas/EnergyQuoteObject"
      metadata:
        title: Metadata
        type: object
        required:
          - status
        properties:
          status:
            $ref: "#/schemas/TaskStatus"
          results:
            type: integer
            description: "The number of quotes received"

  EnergyQuoteObject:
    title: "Energy Quote Object"
    type: object
    properties:
      id:
        type: string
        description: "Energy Quote Id"
      supplier:
        $ref: "#/schemas/Supplier"
      tariff:
        $ref: "#/schemas/Tariff"
      strapline:
        type: string
        description: "The strapline associated with the quote"
        nullable: true
      synopsis:
        type: string
        description: "Further information regarding the quote"
      features:
        type: array
        description: "A list of the key features associated with the quote"
        items:
          type: string
      billing_type:
        $ref: "#/schemas/BillingType"
      pay_type:
        $ref: "#/schemas/PayType"
      regulatory_start_date:
        type: string
        description: "Datetime string (ISO8601) of the start date associated with the energy quote"
      regulatory_end_date:
        type: string
        description: "Datetime string (ISO8601) of the end date associated with the energy quote"
        nullable: true
      fixed_term_end:
        type: string
        description: "Datetime string (ISO8601) of the Fixed Term End date associated with the energy quote"
        nullable: true
      tags:
        type: array
        description: "Any relevant tags associated with the energy quote"
        items:
          $ref: "#/schemas/Tag"
      annual_new_spend:
        type: number
        description: "The annual cost of this quote in GBP"
      annual_difference:
        type: number
        description: "The annual difference of this quote compared to the Customer's existing supply in GBP"
      annual_existing_spend:
        type: number
        description: "The annual cost of the Customer's existing supply"

  PostFulfilmentRequestResponse:
    title: Energy Switch Fulfilment Response
    type: object
    required:
      - operation_id
      - data
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        $ref: "#/schemas/TaskId"

  EnergySwitchingStatus:
    title: Energy Switching Status
    type: object
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        required:
          - switch_date
          - supplier_id
          - support_reference_number
        properties:
          switch_date:
            type: string
          supplier_id:
            type: string
            description: "Unique identifier of the supplier"
          support_reference_number:
            type: string
          fulfilment_status:
            type: object
            properties:
              gas:
                $ref: "#/schemas/FulfilmentStatus"
              electricity:
                $ref: "#/schemas/FulfilmentStatus"
      metadata:
        title: Metadata
        type: object
        required:
          - status
        properties:
          status:
            $ref: "#/schemas/TaskStatus"

  Address:
    type: object
    description: "Address structure"
    required:
      - post_town
      - postcode
    properties:
      postcode:
        type: string
        description: "Address characteristic"
      post_town:
        type: string
        description: "Address characteristic"
      sub_building:
        type: string
        description: "Address characteristic"
      building_name:
        type: string
        description: "Address characteristic"
      building_number:
        type: string
        description: "Address characteristic"
      dependent_thoroughfare:
        type: string
        description: "Address characteristic"
      thoroughfare:
        type: string
        description: "Address characteristic"
      double_dependant_locality:
        type: string
        description: "Address characteristic"
      dependent_locality:
        type: string
        description: "Address characteristic"

  AddressHistory:
    type: object
    description: "An address that the customer has previous lived at."
    required:
      - post_town
      - postcode
      - months_at_address
    properties:
      postcode:
        type: string
        description: "Address characteristic"
      post_town:
        type: string
        description: "Address characteristic"
      months_at_address:
        type: integer
      sub_building:
        type: string
        description: "Address characteristic"
      building_name:
        type: string
        description: "Address characteristic"
      building_number:
        type: string
        description: "Address characteristic"
      dependent_thoroughfare:
        type: string
        description: "Address characteristic"
      thoroughfare:
        type: string
        description: "Address characteristic"
      double_dependant_locality:
        type: string
        description: "Address characteristic"
      dependent_locality:
        type: string
        description: "Address characteristic"

  AddressDetails:
    type: object
    description: "Details of a customer's address history (including the address at which the utilities are to be switched. This history may be used by a supplier if they require a credit check."
    required:
      - address_history
      - residential_status
      - landlord_permission
    properties:
      address_history:
        type: array
        items:
          $ref: "#/schemas/AddressHistory"
        minItems: 1
        maxItems: 3
      residential_status:
        $ref: "#/schemas/ResidentialStatus"
      landlord_permission:
        description: "True if the customer has permission from their landlord to switch their energy provider."
        type: boolean

  BillingType:
    type: string
    description: "The billing type associated with an energy quote"
    enum:
      - paper
      - paperless
      - both

  Consents:
    description: "Terms (and actions) that the customer has consented to having done on their behalf."
    required:
      - consent_smart_meter
      - consent_supplier_terms
      - consent_price_alerts
      - consent_credit_check
    properties:
      consent_smart_meter:
        type: boolean
        description: "Does the customer consent to having an existing smart meter replaced by the new supplier(s)?"
      consent_supplier_terms:
        type: boolean
        description: "Does the customer consent to the terms of the new supplier?"
      consent_price_alerts:
        type: boolean
        description: "Does the customer consent to being alerted on new pricing changes?"
      consent_credit_check:
        type: boolean
        description: "Does the customer consent to having a credit check done against them?"
      consent_supplier_servicing_email:
        type: "boolean"
        description: "Does the customer consent to being emailed for account servicing?"
      consent_supplier_servicing_sms:
        type: "boolean"
        description: "Does the customer consent to being texted for account servicing?"
      consent_supplier_servicing_phone:
        type: "boolean"
        description: "Does the customer consent to being phoned for account servicing?"
      consent_supplier_servicing_face_to_face:
        type: "boolean"
        description: "Does the customer consent to being visited for account servicing?"
      consent_supplier_servicing_post:
        type: "boolean"
        description: "Does the customer consent to being send letters for account servicing?"

  Discount:
    type: object
    description: "Expected discount structure"
    properties:
      description:
        type: string
        description: "The name of the discount"
      amount:
        type: string
        description: "The amount of discount for display purposes"

  EmploymentStatus:
    description: "Employment types"
    enum:
      - Employed Full Time
      - Employed Part Time
      - Self Employed
      - Unemployed
      - Retired
      - Homemaker
      - Student

  EnergyReading:
    required:
      - kwh
      - fuel_type
    properties:
      kwh:
        type: integer
      fuel_type:
        type: string
        enum:
          - gas
          - electricity

  ExistingSupply:
    type: object
    description: "A supply that has been selected by the customer, and is now being populated with extra relevant information."
    required:
      - supplier_id
      - tariff_id
      - annual_spend
    properties:
      supplier_id:
        type: string
        description: "The unique identifier of the supplier"
      tariff_id:
        type: string
        description: "The unique identifier associated with the supplier's tariff"
      annual_spend:
        $ref: "#/schemas/EnergyPaymentAmount"

  FuelType:
    title: Fuel Type
    description: "Type of fuel: Gas, Electricity or Dual-fuel"
    enum:
      - gas
      - electricity
      - dual-fuel

  FulfilmentStatus:
    type: string
    enum:
      - pending
      - in-progress
      - complete
      - failed
      - unknown

  EnergyFulfilmentRequirementsResponse:
    title: Energy Fulfillment Requirements Response
    type: object
    required:
      - operation_id
      - data
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        $ref: "#/schemas/EnergyFulfilmentRequirements"

  EnergyFulfilmentRequirements:
    title: Energy Fulfillment Requirements
    type: object
    description: The various requirements associated with a given supplier in order for the Customer to fulfill (switch) with that Supplier
    required:
      - security
      - personal
      - payment
      - consents
    properties:
      security:
        $ref: "#/schemas/SecurityRequirements"
      personal:
        $ref: "#/schemas/PersonalRequirements"
      payment:
        $ref: "#/schemas/PaymentRequirements"
      consents:
        $ref: "#/schemas/ConsentsRequirements"

  SecurityRequirements:
    title: Security Requirements
    type: object
    description: "The requirements of the supplier regarding security"
    required:
      - security_password_required
    properties:
      security_password_required:
        type: boolean
        description: "True if the supplier requires a plain-text security password"
      security_questions:
        items:
          $ref: "#/schemas/SecurityQuestion"

  SecurityQuestion:
    title: Security Question
    type: object
    description: "The requirements of the supplier regarding different security questions"
    required:
      - value
      - description
    properties:
      value:
        type: string
        description: "Value of the `question` to be sent in the `fulfilment_post` request"
      description:
        type: string
        description: "Description of the question to show to the customer"

  PersonalRequirements:
    title: Personal Requirements
    type: object
    description: "The requirements of the supplier regarding the Customer's personal details"
    required:
      - title
      - employment_status
    properties:
      title:
        description: "Supplier-specific list of accepted personal titles."
        items:
          type: string
      employment_status:
        oneOf:
          - type: 'null'
          - type: 'array'
            items:
              type: string
              description: "Employment types"
              enum:
                - Employed Full Time
                - Employed Part Time
                - Self Employed
                - Unemployed
                - Retired
                - Homemaker
                - Student

  PaymentRequirements:
    title: Payment Requirements
    type: object
    description: "The requirements of the supplier regarding Customer payment"
    required:
      - payment_day
    properties:
      payment_day:
        oneOf:
          - type: 'null'
          - type: 'array'
            items:
              type: number
              description: "Supplier-specific array of available payment days if they accept direct debit."

  ConsentsRequirements:
    title: Consents Requirements
    type: "object"
    description: |
      The requirements of the supplier regarding Customer consent.
      These consents correspond to the `Consents` payload for `energy_switching_fulfilment_post`.
      * `null` means this field does *not* apply to the supplier (e.g. it shouldn't be shown on a form)
      * `mandatory` means that the field's value must be `true` (e.g. it must be shown, and the customer can only proceed with a 'yes')
      * `required` means that either `true` or `false` must be sent (e.g. it must be shown, and the customer can proceed with an explicit 'yes' or a 'no')
      * `optional` means that either `true`, `false` or `null` can be sent (e.g. you can choose to show/not show the field)"
    required:
      - credit_check
      - price_alerts
      - supplier_servicing_email
      - supplier_servicing_sms
      - supplier_servicing_phone
      - supplier_servicing_face_to_face
      - supplier_servicing_post
    properties:
      credit_check:
        type: string
        enum:
          - required
          - optional
          - mandatory
        description: "Does the supplier require the customer be asked to consent to a credit check? Null if this field is not applicable."
      price_alerts:
        type: string
        enum:
          - required
          - optional
          - mandatory
        description: "Does the supplier require the customer be asked to consent to receive price alerts? Null if this field is not applicable."
      supplier_servicing_email:
        oneOf:
          - type: 'null'
          - type: string
            enum:
              - required
              - optional
              - mandatory
        description: "Does the supplier require the customer be asked to consent to receive emails for account servicing? Null if this field is not applicable."
      supplier_servicing_sms:
        oneOf:
          - type: 'null'
          - type: string
            enum:
              - required
              - optional
              - mandatory
        description: "Does the supplier require the customer be asked to consent to receive SMSs for account servicing? Null if this field is not applicable."
      supplier_servicing_phone:
        oneOf:
          - type: 'null'
          - type: string
            enum:
              - required
              - optional
              - mandatory
        description: "Does the supplier require the customer be asked to consent to receive phone calls for account servicing? Null if this field is not applicable."
      supplier_servicing_face_to_face:
        oneOf:
          - type: 'null'
          - type: string
            enum:
              - required
              - optional
              - mandatory
        description: "Does the supplier require the customer be asked to consent to be visited for account servicing? Null if this field is not applicable."
      supplier_servicing_post:
        oneOf:
          - type: 'null'
          - type: string
            enum:
              - required
              - optional
              - mandatory
        description: "Does the supplier require the customer be asked to consent to receive letters for account servicing? Null if this field is not applicable."

  MarketingPreferences:
    title: Marketing Preferences
    type: object
    description: "Marketing methods that the customer agrees to."
    required:
      - email
      - phone
      - text_message
      - post
      - face_to_face
    properties:
      email:
        type: boolean
        description: "Does the customer consent to being marketed to via email?"
      phone:
        type: boolean
        description: "Does the customer consent to being marketed to over the phone?"
      text_message:
        type: boolean
        description: "Does the customer consent to being marketed to via text message?"
      post:
        type: boolean
        description: "Does the customer consent to being marketed to via post?"
      face_to_face:
        type: boolean
        description: "Does the customer consent to being marketed to face-to-face?"

  Meter:
    type: object
    description: "Information about a specific meter within the property"
    required:
      - fuel_type
      - meter_type
      - distribution_network_id
      - msn
      - smart
    properties:
      fuel_type:
        type: string
        enum:
          - gas
          - electricity
      meter_type:
        $ref: "#/schemas/MeterType"
      distribution_network_id:
        type: integer
      msn:
        type: string
        description: "Meter Serial Number"
      smart:
        description: "`true` if the meter is smart. `false` if it is not smart. `null` otherwise."
        type: boolean
        nullable: true

  MeterType:
    type: string
    description: "Standard or Economy 7"
    enum:
      - E7
      - STD

  Personal:
    type: object
    description: "Personal details supplied by the customer that is required for fulfilment of their switch."
    required:
      - title
      - first_name
      - last_name
      - date_of_birth
      - email_address
      - employment_status
      - phone_number_mobile
    properties:
      title:
        type: string
        description: "Title of the Customer"
      first_name:
        type: string
        description: "First name of the Customer"
      last_name:
        type: string
        description: "Last name of the Customer"
      date_of_birth:
        type: string
        description: "Date of birth of the Customer (in Y-m-d format)"
      email_address:
        type: string
        description: "Email address of the Customer"
      employment_status:
        type: string
        description: "Employment status of the Customer"
        enum:
          - Employed Full Time
          - Employed Part Time
          - Self Employed
          - Unemployed
          - Retired
          - Homemaker
          - Student
      phone_number_mobile:
        type: string
        description: "Mobile Telephone Number of the Customer"

  Payment:
    title: Energy Supplier Payment Details
    type: object
    description: "Information on how to pay the new supplier (e.g. account, payment day)"
    required:
      - account_holder
      - account_number
      - sort_code
      - payment_day
    properties:
      account_holder:
        type: string
        description: "Name of the account holder"
      account_number:
        type: string
        description: "The account number associated with the Customer's payment details"
      sort_code:
        type: string
        description: "The sort code associated with the Customer's payment details"
      payment_day:
        type: integer
        description: "Day of the month that the direct debit should be made."
        nullable: true

  PayType:
    type: integer
    description: |
      | Value | Description                                                        |
      |:------|:-------------------------------------------------------------------|
      | 1     | Monthly Fixed Direct Debit                                         |
      | 2     | Quarterly Variable Direct Debit                                    |
      | 3     | Standing Order                                                     |
      | 4     | Quarterly Cash/Cheque                                              |
      | 5     | Prepayment Meter                                                   |
      | 6     | Advance Payment                                                    |
      | 7     | Monthly Card                                                       |
      | 8     | Monthly Debit/Credit Card                                          |
      | 9     | Monthly Variable Direct Debit                                      |
      | 10    | Quarterly Equal Payments                                           |
      | 11    | Monthly Cash/Cheque                                                |
      | 12    | Regular Cash Payments                                              |
      | 13    | Quarterly Debit Card                                               |
      | 14    | Annual Advance Direct Debit Payment followed by MFDD (1) in year 2 |
      | 15    | Pay as You Go (PAYG)                                               |
    enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
      - 14
      - 15

  ResidentialStatus:
    type: string
    description: "Resident types"
    enum:
      - Home Owner
      - Private Tenant
      - Local Authority Tenant
      - Landlord

  Security:
    type: object
    description: "Supplier-specific security information"
    required:
      - password
      - question
      - answer
    properties:
      password:
        type: string
        nullable: true
        description: "Customer-provided plain-text security password if the chosen supplier requires it (`security_password_required` from `fulfilment_requirements_get`)"
      question:
        type: string
        nullable: true
        description: "Customer's choice of security question if supplier requires it (`security_questions[x].value` from `fulfilment_requirements_get`)"
      answer:
        type: string
        nullable: true
        description: "Customer's answer to the above security question if supplier requires it."

  Supplier:
    title: Energy Supplier
    type: object
    description: "Expected supplier structure"
    required:
      - id
      - name
      - logo
    properties:
      id:
        type: string
        description: "ID of the given supplier"
      name:
        type: string
        description: "Name of the given supplier"
      logo:
        type: string
        description: "URL to logo of given supplier"

  Tag:
    type: object
    properties:
      slug:
        type: string
        description: "Unique identifier for this tag"
      label:
        type: string
        description: "The tag label"
      description:
        type: string
        description: "A description of the tag"

  TaskStatusCaps:
    title: The Task Status
    type: string
    description: "The general status of a task"
    enum:
      - Pending
      - Complete
      - Failed

  TaskStatus:
    title: The Task Status
    type: string
    description: "The general status of a task"
    enum:
      - pending
      - complete
      - failed

  Tariff:
    type: object
    description: "Expected tariff structure"
    properties:
      id:
        type: string
        description: "Id of the given tariff"
      name:
        type: string
        description: "Name of the given tariff"
      type:
        type: array
        items:
          $ref: "#/schemas/TariffType"
      terms_pdf:
        type: string
        description: "URL to PDF file of the tariff terms"
        nullable: true
      condition:
        type: string
        description: "Determines whether or not a customer can switch to the tariff. Tariffs tend to be `unavailable-for-signup` if they are old/historical tariffs."
        enum:
          - "available-for-signup"
          - "unavailable-for-signup"
      key_facts:
        type: string
      max_electricity_kwhs:
        type: string
      max_gas_kwhs:
        type: string
      til:
        description: "Tariff Information Label(s), which gives generic tariff data that is useful for doing comparisons with other tariffs."
        items:
          $ref: "#/schemas/TariffInformationLabel"

  TariffType:
    type: string
    description: "Enum of tariff given"
    enum:
      - fixed
      - variable
      - capped-fixed
      - green
      - online
      - smart
      - bundled
      - collective
      - exclusive
      - indexed
      - capped
      - tracker
      - renewable
      - face-to-face

  TariffInformationLabel:
    type: object
    description: "Expected structure for the Tariff Information Label or til"
    properties:
      supplier_name:
        type: string
        description: "Supplier name"
      tariff_name:
        type: string
        description: "Tariff name"
      tariff_type:
        type: string
        enum:
          - fixed
          - variable
          - capped-fixed
          - green
          - online
          - smart
          - bundled
          - collective
          - exclusive
          - indexed
          - capped
          - tracker
          - renewable
          - face-to-face
        description: "Enum of Tariff type"
      pay_type:
        type: string
        description: "Pay type"
      unit_rate:
        type: string
        description: "Unit rate"
      unit_rate_economy7:
        type: string
        description: "Economy 7 is a type of electricity tariff that has a different price per kWh based on your time of use and is used with an Economy 7 meter. It's usually based around day and nighttime usage, with the price/kWh being cheaper at night."
      standing_charge:
        type: string
      tariff_end_date:
        type: string
        description: "E.g. 30 April 2020"
      price_guaranteed_date:
        type: string
        description: "E.g. 30 April 2020"
      exit_fee:
        type: string
      discounts:
        $ref: "#/schemas/Discount"
      additional_products:
        type: string
      new_spend:
        type: string

  GasMeter:
    title: Gas Meter
    allOf:
      - $ref: "#/schemas/Meter"
      - type: object
        required:
          - mprn
        properties:
          mprn:
            type: string
            description: "Meter Point Registration Number"

  ElectricityMeter:
    title: Electricity Meter
    allOf:
      - $ref: "#/schemas/Meter"
      - type: object
        required:
          - mpan
        properties:
          mpan:
            type: string
            description: "Meter Point Administration Number"

  ExistingSupplyFulfilment:
    title: Existing Supply Fulfillment
    type: "object"
    description: "A supply that has been selected by the customer, and is now being populated with extra relevant information."
    required:
      - supplier_id
      - annual_spend
      - meters
      - fuel_type
    properties:
      supplier_id:
        type: string
        description: "Unique identifier of the supplier"
      annual_spend:
        $ref: "#/schemas/EnergyPaymentAmount"
      meters:
        items:
          anyOf:
            - $ref: "#/schemas/GasMeter"
            - $ref: "#/schemas/ElectricityMeter"
        minItems: 1
        maxItems: 2
      fuel_type:
        $ref: "#/schemas/FuelType"

  EnergyPayment:
    type: object
    required:
      - transaction_id
      - supplier
      - payment_type
      - amount
      - provider
    properties:
      transaction_id:
        type: string
        description: "Transaction ID for the payment (found in `GET /v1/transactions`)"
      supplier:
        $ref: "#/schemas/Supplier"
      payment_type:
        $ref: "#/schemas/PayType"
      amount:
        $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
      provider:
        type: string
        description: "Bank or provider name"

  PostEnergyQuotesRequest:
    required:
      - address
      - supplies
    properties:
      address:
        $ref: "#/schemas/Address"
      supplies:
        type: array
        description: "Details on customer's current energy supply"
        items:
          $ref: "#/schemas/ExistingSupplyExtended"

  ExistingSupplyExtended:
    allOf:
      - $ref: "#/schemas/ExistingSupply"
      - type: object
        required:
          - fuel_type
          - meters
        properties:
          fuel_type:
            type: string
            enum:
              - dual-fuel
              - gas
              - electricity
          meters:
            type: array
            description: "Details of the meter(s) associated with the customer's supply"
            items:
              $ref: "#/schemas/ExistingSupplyElecricityGasMeter"

  ExistingSupplyElecricityGasMeter:
    allOf:
      - $ref: "#/schemas/ExistingSupplyMeter"
      - properties:
          fuel_type:
            type: string
            enum:
              - gas
              - electricity

  ExistingSupplyMeter:
    type: object
    description: "Details of the meter for the customer's existing supply"
    required:
      - kwh
      - smart
      - fuel_type
      - meter_type
    properties:
      kwh:
        type: integer
        description: "The annual energy usage (in kWh) of the existing supply"
      smart:
        type: boolean
        description: "To flag whether or not the meter is a smart meter or not"
        nullable: true
      meter_type:
        $ref: "#/schemas/MeterType"

  PostFulfilmentRequest:
    required:
      - quote_id
      - quote_task_id
      - personal
      - address_details
      - payment
      - consents
      - marketing_preferences
      - security
      - supplies
    properties:
      quote_task_id:
        type: string
        description: "Task ID for desired quote"
      quote_id:
        type: string
        description: "Quote ID for desired quote"
      personal:
        $ref: "#/schemas/Personal"
      address_details:
        $ref: "#/schemas/AddressDetails"
      payment:
        $ref: "#/schemas/Payment"
      consents:
        $ref: "#/schemas/Consents"
      marketing_preferences:
        $ref: "#/schemas/MarketingPreferences"
      security:
        $ref: "#/schemas/Security"
      supplies:
        type: array
        description: "List of the suppliers that the Customer wants to switch to"
        items:
          $ref: "#/schemas/ExistingSupplyFulfilment"

  #### Payments Schemas

  PaymentProvidersResponse:
    title: Payment Providers Response
    type: object
    required:
      - "operation_id"
      - "data"
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        title: Retrieve Providers
        description: "A list of the supported payment providers"
        type: array
        items:
          $ref: '#/schemas/PaymentProvider'

  PaymentProvider:
    title: "Payment Provider"
    description: "Information surrounding a supported payment provider"
    type: object
    required:
      - provider
      - display_name
      - icon
      - services
      - maintenance_status
      - maintenance_window
      - country_code
      - implementation_type
      - supported_currencies
      - required_actions
    properties:
      provider:
        type: string
        description: "The name (identifier) of the payment provider"
      display_name:
        type: string
        description: "The name of the payment provider to be used for display purposes (e.g. within a frontend application)"
      icon:
        type: string
        description: "A URL for the icon of the corresponding provider"
      services:
        items:
          $ref: '#/schemas/PaymentServices'
      maintenance_status:
        type: string
        description: "The status of the maintenance window associated with the provider"
        enum:
          - active
          - inactive
      maintenance_window:
        $ref: "#/schemas/MaintenanceWindowObject"
      country_code:
        type: string
        description: "Provider country code following the ISO 3166 alpha-3 code format"
      implementation_type:
        type: string
        enum:
          - "OpenbankingUK"
          - "BerlinGroup"
          - "CBIGlobe"
        description: "The implementation standard adopted by the provider"
      supported_currencies:
        items:
          $ref: '#/schemas/PaymentSupportedCurrencies'
      required_actions:
        description: |
          An array of enum fields to indicate if any additional actions are required in order to complete a given payment flow for the given provider.

          | Value  |  Description |
          |:-------|:-------------|
          | confirm_single_payment | If present, this value indicates that clients must complete an additional step in the single payments flow whereby they must confirm the payment once the customer has successfully authorised the payment with the provider. This confirmation can be accomplished using the Confirm Single Payment API Endpoint. Please note this step is only relevant for clients using Bud as a Technical Service Provider (TSP) |
          | confirm_standing_order | If present, this value indicates that clients must complete an additional step in the standing order payments flow whereby they must confirm the payment once the customer has successfully authorised the standing order with the provider. This confirmation can be accomplished using the Confirm Standing Order API Endpoint. Please note this step is only relevant for clients using Bud as a Technical Service Provider (TSP) |
          | confirm_scheduled_payment | If present, this value indicates that clients must complete an additional step in the scheduled payments flow whereby they must confirm the payment once the customer has successfully authorised the scheduled order with the provider. This confirmation can be accomplished using the Confirm Scheduled Payment API Endpoint. Please note this step is only relevant for clients using Bud as a Technical Service Provider (TSP) |

        items:
          type: string
          enum:
            - confirm_single_payment
            - confirm_standing_order
            - confirm_scheduled_payment

  PaymentServices:
    title: Payment Services
    description: "A payment service supported by a payment provider"
    type: string
    minLength: 1
    enum:
      - "domestic-single-payment"
      - "domestic-standing-order"
      - "domestic-scheduled-payment"

  PaymentSupportedCurrencies:
    title: Payment provider supported currencies
    description: "The currencies supported by the payment provider"
    type: string
    minLength: 1
    enum:
      - "GBP"
      - "EUR"

  SinglePaymentRequest:
    title: Single Payment Request Payload
    type: object
    description: "Expected request payload structure"
    required:
      - provider
      - payment_details
    properties:
      redirect_url:
        type: string
        description: "This is the url that your Customer will be redirected to when using the Bud user interface. If you wish to use your own license and callback infrastructure this parameter will have no effect and the provider_redirect_url parameter should be used instead."
      provider_redirect_url:
        type: string
        description: "This is the url that your Customer will be redirected to once they have authorised with the relevant provider. This should only be used when using your own license and wish to use the Submit Authorisation Codes endpoint. If you wish to use Bud's call back then the redirect_url must be provided."
      provider:
        type: string
        description: "The name (identifier) of the payment provider"
      payment_details:
        $ref: '#/schemas/SinglePaymentDetails'

  SinglePaymentDetails:
    title: Single Payment Details
    type: object
    description: "Payment details required to make a Single Payment"
    required:
      - "reference"
      - "recipient"
      - "sender"
      - "amount"
    properties:
      reference:
        type: string
        description: "The payment reference"
      recipient:
        $ref: '#/schemas/PaymentRecipient'
      sender:
        $ref: '#/schemas/PaymentSender'
      amount:
        $ref: 'components-common-schemas.yaml#/schemas/BudAmount'

  ProviderTypes:
    title: Provider Types
    type: array
    description: "One or more provider types that can be used to filter the list of providers that are shown to the customer during the connection flow. If no filter is applied, all types of provider are returned. Note that on Bud's sandbox environment, only sandbox providers will be returned."
    items:
      type: string
      enum:
        - "business"
        - "retail"
        - "sandbox"

  PaymentRecipient:
    title: Payment Recipient
    type: object
    description: "Details of the recipient of the payment"
    required:
      - "type"
      - "name"
      - "account_number"
    properties:
      type:
        $ref: '#/schemas/PaymentAccountType'
      name:
        type: string
        description: "Account holder name of the recipient"
        minLength: 1
        maxLength: 70
      account_number:
        type: string
        description: "Account identifier of the recipient"
        minLength: 14
        maxLength: 32

  PaymentSender:
    title: Payment Sender
    type: object
    description: "Details of the payment sender"
    required:
      - "user_id"
      - "name"
    properties:
      user_id:
        type: string
        description: "A string that can be used to uniquely identify a user within the Client's application"
        minLength: 1
        maxLength: 120
      type:
        $ref: '#/schemas/PaymentAccountType'
      name:
        type: string
        description: "Account holder name of the sender"
        minLength: 1
        maxLength: 70
      account_number:
        type: string
        description: "Account identifier of the sender"
        minLength: 14
        maxLength: 32
      provider:
        type: string
        description: "The name (identifier) of the payment provider"

  KnownCharges:
    title: Known Charges
    type: object
    description: "A list detailing information surrounding any known charges that may be associated with the payment"
    required:
      - "recipient_charge"
      - "sender_charge"
    properties:
      recipient_charge:
        type: object
        description: "The charge details applied to the recipient"
        required:
          - "charge"
          - "currency"
          - "recipient_receives"
        properties:
          charge:
            type: string
            description: "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217."
          currency:
            type: string
            description: "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\""
          recipient_receives:
            type: string
            description: "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217."
      sender_charge:
        type: object
        description: "The charge details applied by the sender"
        required:
          - "charge"
          - "currency"
          - "bank_sends"
          - "total_cost"
        properties:
          charge:
            type: string
            description: "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217."
          currency:
            type: string
            description: "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\""
          bank_sends:
            type: string
            description: "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217."
          total_cost:
            type: string
            description: "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217."

  PaymentAccountType:
    title: Account Type
    type: string
    description: "The account type structure for the payment sender or receiver"
    enum:
      - "SortCodeAccountNumber"
      - "IBAN"

  RecipientCharge:
    title: Recipient Detail Amount Object
    type: object
    description: "Value and Currency of the Charge Amount"
    properties:
      charge:
        type: string
        description: "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217."
      currency:
        type: string
        description: "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\""
      recipient_receives:
        type: string
        description: "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217."

  SenderCharge:
    title: Recipient Detail Amount Object
    type: object
    description: "Value and Currency of the Charge Amount"
    properties:
      charge:
        type: string
        description: "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217."
      currency:
        type: string
        description: "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\""
      bank_sends:
        type: string
        description: "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217."
      total_cost:
        type: string
        description: "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217."

  SinglePaymentResponse:
    title: Single Payment Response
    type: object
    required:
      - "operation_id"
      - "data"
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: object
        description: "Single Payment Response"
        required:
          - "authorisation_url"
          - "payment_id"
        properties:
          authorisation_url:
            type: string
            description: "The authorisation URL for a relevant payment provider. Redirect your Customer to this url to allow them to authorise their payment"
          payment_id:
            type: string
            description: "Unique identifier for the single payment resource"
          required_action:
            type: string
            description: |
              If present, this fild will indicate the next required action (if any) to be taken by the client in order to complete the payment flow

              | Value  |  Description |
              |:-------|:-------------|
              | confirm_single_payment | Indicates that the client must confirm the single payment using the Confirm Single Payment endpoint in order to complete the payment flow. |

            enum:
              - confirm_single_payment

  PaymentsSingleBudPayURLRequest:
    title: Payments Single Bud Pay URL Payload
    type: object
    required:
      - redirect_url
      - provider
      - payment_details
    properties:
      redirect_url:
        type: string
        description: "URL where the user will be redirected to once they have completed the TPP Connection flow. This can be a web based URL or a mobile application internal URL."
        nullable: false
        maxLength: 2083
      provider:
        type: "string"
        description: "The name (identifier) of the payment provider"
        items:
          type: "string"
      provider_types:
        $ref: '#/schemas/ProviderTypes'
      payment_details:
        type: "object"
        $ref: '#/schemas/SinglePaymentDetails'


  PaymentsAuthorisationCodesResponse:
    title: "Authorisation Codes Response Payload"
    type: "object"
    required:
      - "operation_id"
      - "data"
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: "object"
        description: "Details regarding the response object for the authorisation codes response."
        properties:
          result:
            type: "string"
            enum: ["success", "auth_invalid", "auth_expired", "provider_failure", "internal_error"]
          payment_id:
            type: string
            description: "Payment Identifier"
          payment_type:
            type: string
            description: "The type of payment iniated through Bud's Payments Service"
            enum:
              - "single"
              - "scheduled"
              - "standing-order"

  SinglePaymentStatus:
    title: Single Payment Status
    description: "Detailed information for a given payment and it's status"
    type: object
    required:
      - payment_id
      - organisation_id
      - client_id
      - method
      - reference
      - recipient
      - amount
      - sender
      - known_charges
      - state
      - supplementary_status
      - errors
      - created_at
      - required_action
    properties:
      payment_id:
        type: string
        description: "Payment Identifier"
      organisation_id:
        type: string
        description: "Bud's Organisation Identifier"
      client_id:
        type: string
        description: "Bud's Client/App Identifier"
      method:
        type: string
        description: "The payment method"
        enum:
          - 'BACS'
          - 'FPS'
          - 'SEPA'
      reference:
        type: string
        description: "Reference to use for this payment"
        maxLength: 18
      recipient:
        $ref: '#/schemas/PaymentRecipient'
      amount:
        $ref: 'components-common-schemas.yaml#/schemas/BudAmount'
      sender:
        $ref: '#/schemas/PaymentSender'
      known_charges:
        $ref: '#/schemas/KnownCharges'
      state:
        type: object
        description: "Details of the payment state and history"
        required:
          - "status_code"
          - "status_message"
          - "history"
        properties:
          status_code:
            $ref: '#/schemas/StatusCodeEnum'
          status_message:
            $ref: '#/schemas/StatusMessageEnum'
          history:
            type: array
            items:
              type: object
              required:
                - "datetime"
                - "code"
                - "message"
              properties:
                datetime:
                  type: string
                  description: "A datetime string ISO 8601 defining the date and time at which the state change occurred"
                code:
                  $ref: '#/schemas/StatusCodeEnum'
                message:
                  $ref: '#/schemas/StatusMessageEnum'
      supplementary_status:
        type: object
        description: "A list of supplementary states associated with the payment as described by the specific provider"
        required:
          - payment_order
          - consent
          - confirmation_of_funds
        properties:
          payment_order:
            $ref: '#/schemas/SupplementaryStatusDetail'
          consent:
            $ref: '#/schemas/SupplementaryStatusDetail'
          confirmation_of_funds:
            $ref: '#/schemas/SupplementaryStatusDetail'
      errors:
        title: Payment Errors
        type: array
        description: "A list of any errors that may be associated with the payment"
        items:
          title: Payment Error
          type: object
          description: "Details surrounding any error that may be associated with the payment"
          required:
            - code
            - description
          properties:
            code:
              type: string
              description: "Error Code"
            description:
              type: string
              description: "Text string used to give a description of the payment error"
      created_at:
        title: Created at timestamp
        type: string
        description: "The created at timestamp for the payment"
      required_action:
        type: string
        nullable: true
        description: |
          This field will indicate that there is an action required to be taken by the client in order to complete the payment.

          | Value  |  Description |
          |:-------|:-------------|
          | confirm_single_payment | If present, this value indicates that client has yet to confirm the single payment once the customer has successfully authorised the payment with the provider. This confirmation can be accomplished using the Confirm Single Payment API Endpoint. Please note this step will only be relevant for clients using Bud as a Technical Service Provider (TSP) |

        items:
          type: string
          enum:
            - confirm_single_payment

  StatusSinglePaymentResponse:
    title: Payment Status Response
    type: object
    required:
      - "operation_id"
      - "data"
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        $ref: "#/schemas/SinglePaymentStatus"

  BudPayResponse:
    title: Bud Pay URL Response
    type: object
    description: "Bud Pay Response Object"
    required:
      - "operation_id"
      - "data"
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        title: "Bud Pay URL"
        description: "Bud Pay URL Object"
        required:
          - "bud_pay_url"
          - "payment_id"
        properties:
          bud_pay_url:
            type: string
            description: "A Bud Pay URL, allowing Customers to complete (authenticate) a relevant payment resource with the relevant payment service provider."
          payment_id:
            type: string
            description: "Unique identifier for the payment"

  StatusCodeEnum:
    type: string
    description: "The payment status code"
    enum:
      - "CREATED"
      - "AWAITING_AUTH"
      - "AUTHENTICATED"
      - "AUTH_REJECTED"
      - "AUTH_COMPLETED"
      - "FUNDS_CONFIRMED"
      - "INSUFFICIENT_FUNDS"
      - "INITIATING"
      - "ACCEPTED"
      - "SETTLED"
      - "PAYMENT_REJECTED"
      - "FAILED"

  StatusMessageEnum:
    type: string
    description: "The payment status message"
    enum:
      - "Payment created"
      - "Awaiting Authentication"
      - "Authenticated; Confirming Funds"
      - "Funds Confirmed; Awaiting Payment Initiation"
      - "Insufficient Funds In Account; Payment Aborted"
      - "Initiating Payment"
      - "Payment Order Accepted"
      - "Payment Settlement Complete"
      - "Payment Settlement Rejected"
      - "Failed"

  SupplementaryStatusDetail:
    type: object
    description: "The payment supplementary as described by the provider"
    required:
      - status
      - history
    properties:
      status:
        type: string
        description: "The status description as returned by the provide"
      history:
        type: array
        description: "A list of any historical changes in the state"
        items:
          type: object
          required:
            - "datetime"
            - "status"
          properties:
            datetime:
              type: string
              description: "A datetime string (ISO 8601) defining the date and time at which the state change occurred"
            status:
              type: string
              description: "The status message"

  ListSinglePaymentResponse:
    title: List Payment Status Response
    type: object
    required:
      - "operation_id"
      - "data"
      - "metadata"
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        description: "Array of Single Payment Status Objects"
        type: array
        items:
          $ref: "#/schemas/SinglePaymentStatus"
      metadata:
        type: object
        description: "Metadata for the response including pagination details"
        required:
          - "total_results"
          - "results"
          - "page"
          - "total_pages"
        properties:
          total_results:
            type: integer
            description: "The total number of payment results for the request"
          results:
            type: integer
            description: "The number of payment results currently displayed on the page"
          page:
            type: integer
            description: "The current page number"
          total_pages:
            type: integer
            description: "The total number of pages for the request"

  CreateStandingOrderRequest:
    title: Create Standing Order Request
    type: object
    required:
      - "provider"
      - "standing_order_details"
    properties:
      redirect_url:
        type: string
        description: "This is the url that your Customer will be redirected to when using the Bud user interface. If you wish to use your own license and callback infrastructure this parameter will have no effect and the provider_redirect_url parameter should be used instead."
      provider_redirect_url:
        type: string
        description: "This is the url that your Customer will be redirected to once they have authorised with the relevant provider. This should only be used when using your own license and wish to use the Submit Authorisation Codes endpoint. If you wish to use Bud's call back then the redirect_url must be provided."
      provider:
        type: string
        description: "The name (identifier) of the payment provider"
      provider_types:
        $ref: '#/schemas/ProviderTypes'
      standing_order_details:
        $ref: '#/schemas/StandingOrderDetails'

  PaymentsStandingOrderBudPayURLRequest:
    title: Payments Standing Order Bud Pay URL Payload
    type: object
    required:
      - redirect_url
      - provider
      - standing_order_details
    properties:
      redirect_url:
        type: string
        description: "URL where the user will be redirected to once they have completed the TPP Connection flow. This can be a web based URL or a mobile application internal URL."
      provider:
        type: string
        description: "The name (identifier) of the payment provider"
      provider_types:
        $ref: '#/schemas/ProviderTypes'
      standing_order_details:
        $ref: '#/schemas/StandingOrderDetails'

  StandingOrderDetails:
    title: Standing Order Details
    type: object
    additionalProperties: false
    description: "Details of the standing order"
    required:
      - "reference"
      - "recipient"
      - "sender"
      - "recurring_amount"
      - "first_payment_date"
      - "frequency"
    properties:
      reference:
        type: string
        description: "Reference to use for payments made through this Standing Order"
        maxLength: 18
      recipient:
        $ref: '#/schemas/PaymentRecipient'
      sender:
        $ref: '#/schemas/PaymentSender'
      recurring_amount:
        $ref: 'components-common-schemas.yaml#/schemas/BudAmount'
      first_payment_date:
        type: string
        format: date-time
        description: "Date-time (ISO 8601) the first payment should be made. Must be future date."
        example: "2020-06-01T15:00:00Z"
      last_payment_date:
        type: string
        format: date-time
        description: "Date-time (ISO 8601) after which payments should stop. Must be after `first_payment_date`."
        example: "2020-06-01T15:00:00Z"
      frequency:
        $ref: '#/schemas/StandingOrderFrequencyEnum'

  CreateStandingOrderResponse:
    title: Create Standing Order Response
    type: object
    description: "Response structure when creating a Standing Order payment"
    required:
      - "operation_id"
      - "data"
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: object
        description: "Standing Order Response Object"
        required:
          - "payment_id"
          - "authorisation_url"
        properties:
          payment_id:
            type: string
            description: "Payment Identifier"
          authorisation_url:
            type: string
            description: "The authorisation URL for a relevant payment provider. Redirect your Customer to this url to allow them to authorise the Standing Order"
          required_action:
            type: string
            description: |
              If present, this fild will indicate the next required action (if any) to be taken by the client in order to complete the payment flow

              | Value  |  Description |
              |:-------|:-------------|
              | confirm_standing_order | Indicates that the client must confirm the standing order using the Confirm Standing Order endpoint in order to complete the payment flow. |

            enum:
              - confirm_standing_order

  ListStandingOrderResponse:
    title: List Standing Order Response
    type: object
    description: "Response structure when retrieving a filtered list of Standing Order status'"
    required:
      - "operation_id"
      - "data"
      - "metadata"
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        description: "Array of Standing Order Payment Status Objects"
        type: array
        items:
          $ref: "#/schemas/StandingOrderData"
      metadata:
        description: "Metadata associated with response"
        type: object
        required:
          - "total_results"
          - "results"
          - "page"
          - "total_pages"
        properties:
          total_results:
            type: integer
            description: "The total number of payment results for the request"
          results:
            type: integer
            description: "The number of payment results currently displayed on the page"
          page:
            type: integer
            description: "The current page number"
          total_pages:
            type: integer
            description: "The total number of pages for the request"

  GetStandingOrderResponse:
    title: Get Standing Order Response
    type: object
    description: "Response structure when retrieving a specific Standing Order status"
    required:
      - "operation_id"
      - "data"
      - "metadata"
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        $ref: "#/schemas/StandingOrderData"
      metadata:
        type: object

  StatusStandingOrderResponse:
    title: Standing Order Status Response
    type: object
    required:
      - "operation_id"
      - "data"
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        $ref: "#/schemas/StandingOrderData"

  StandingOrderData:
    title: Standing Order Data
    type: object
    description: "Data structure for the Standing Order object"
    required:
      - payment_id
      - organisation_id
      - client_id
      - reference
      - recipient
      - recurring_amount
      - sender
      - known_charges
      - state
      - errors
      - created_at
      - frequency
      - first_payment_date
      - required_action
    properties:
      payment_id:
        type: string
        description: "Payment Identifier"
      organisation_id:
        type: string
        description: "Bud's Organisation Identifier"
      client_id:
        type: string
        description: "Bud's Client/App Identifier"
      reference:
        type: string
        description: "Reference to use for this payment"
      recipient:
        $ref: '#/schemas/PaymentRecipient'
      recurring_amount:
        $ref: 'components-common-schemas.yaml#/schemas/BudAmount'
      sender:
        $ref: '#/schemas/PaymentSender'
      known_charges:
        $ref: '#/schemas/KnownCharges'
      state:
        type: object
        required:
          - "status_code"
          - "status_message"
          - "history"
        properties:
          status_code:
            $ref: '#/schemas/StandingOrderStatusCodeEnum'
          status_message:
            $ref: '#/schemas/StandingOrderStatusMessageEnum'
          history:
            type: array
            items:
              type: object
              required:
                - "datetime"
                - "code"
                - "message"
              properties:
                datetime:
                  type: string
                code:
                  $ref: '#/schemas/StandingOrderStatusCodeEnum'
                message:
                  $ref: '#/schemas/StandingOrderStatusMessageEnum'
      errors:
        type: array
        description: "Details surrounding any errors when attempting to initiate a Standing Order"
        items:
          type: object
          required:
            - code
            - description
          properties:
            code:
              type: string
              description: "Error Code"
            description:
              type: string
              description: "Text string used to give a description of the payment error"
      created_at:
        type: string
        format: date-time
        description: "Date-time (ISO 8601) of when the Standing Order was created"
        example: "2020-06-01T15:00:00Z"
      first_payment_date:
        type: string
        format: date-time
        description: "Date-time (ISO 8601) the first payment should be made. Must be future date."
        example: "2020-06-01T15:00:00Z"
      last_payment_date:
        type: string
        format: date-time
        description: "Date-time (ISO 8601) after which payments should stop. Must be after `first_payment_date`."
        example: "2020-06-01T15:00:00Z"
      frequency:
        $ref: '#/schemas/StandingOrderFrequencyEnum'
      required_action:
        type: string
        nullable: true
        description: |
          This field will indicate that there is an action required to be taken by the client in order to complete the payment.

          | Value  |  Description |
          |:-------|:-------------|
          | confirm_standing_order | If present, this value indicates that client has yet to confirm the standing order once the customer has successfully authorised the payment with the provider. This confirmation can be accomplished using the Confirm Standing Order API Endpoint. Please note this step will only be relevant for clients using Bud as a Technical Service Provider (TSP) |

        items:
          type: string
          enum:
            - confirm_standing_order

  StandingOrderStatusCodeEnum:
    title: Standing Order Status Codes
    type: string
    description: "The payment status code for a Standing Order"
    enum:
      - "CREATED"
      - "AWAITING_AUTH"
      - "AUTH_REJECTED"
      - "AUTH_COMPLETED"
      - "PENDING"
      - "FAILED"
      - "COMPLETED"

  StandingOrderStatusMessageEnum:
    title: Standing Order Status Message
    type: string
    description: "The payment status message for a Standing Order"
    enum:
      - "Standing Order Created"
      - "Awaiting Customer Authentication"
      - "Authentication Failed"
      - "Authentication Completed"
      - "Payment Order Pending"
      - "Standing Order Creation Failed"
      - "Standing Order Creation Completed"

  StandingOrderFrequencyEnum:
    title: Standing Order Frequency
    type: string
    description: "The payment frequency for a Standing Order"
    enum:
      - daily
      - weekly
      - fortnightly
      - monthly
      - quarterly
      - semiannually
      - yearly

  CreateScheduledPaymentRequest:
    title: Create Scheduled Payment Request
    type: object
    required:
      - "provider"
      - "scheduled_payment_details"
    properties:
      redirect_url:
        type: string
        description: "This is the url that your Customer will be redirected to when using the Bud user interface. If you wish to use your own license and callback infrastructure this parameter will have no effect and the provider_redirect_url parameter should be used instead."
      provider_redirect_url:
        type: string
        description: "This is the url that your Customer will be redirected to once they have authorised with the relevant provider. This should only be used when using your own license and wish to use the Submit Authorisation Codes endpoint. If you wish to use Bud's call back then the redirect_url must be provided."
      provider:
        type: string
        description: "The name (identifier) of the payment provider"
      provider_types:
        $ref: '#/schemas/ProviderTypes'
      scheduled_payment_details:
        $ref: '#/schemas/ScheduledDetails'

  PaymentsScheduledPaymentBudPayURLRequest:
    title: Scheduled Payment Bud Pay URL Payload
    type: object
    required:
      - "redirect_url"
      - "provider"
      - "scheduled_payment_details"
    properties:
      redirect_url:
        type: string
        description: "URL where the user will be redirected to once they have completed the TPP Connection flow. This can be a web based URL or a mobile application internal URL."
      provider:
        type: string
        description: "The name (identifier) of the payment provider"
      provider_types:
        $ref: '#/schemas/ProviderTypes'
      scheduled_payment_details:
        $ref: '#/schemas/ScheduledDetails'

  ScheduledDetails:
    title: Scheduled Payment Details
    type: object
    additionalProperties: false
    description: "Details of the scheduled payment"
    required:
      - "reference"
      - "recipient"
      - "sender"
      - "amount"
      - "requested_execution_date"
    properties:
      reference:
        type: string
        description: "Reference to use for the payment made through this scheduled instruction"
        maxLength: 18
      recipient:
        $ref: '#/schemas/PaymentRecipient'
      sender:
        $ref: '#/schemas/PaymentSender'
      amount:
        $ref: 'components-common-schemas.yaml#/schemas/BudAmount'
      requested_execution_date:
        type: string
        format: date-time
        description: "Date-time (ISO 8601) the payment should be made. Must be future date."
        example: "2020-06-01T15:00:00Z"

  CreateScheduledPaymentResponse:
    title: Create Scheduled Payment Response
    type: object
    description: "Response structure when creating a Scheduled Payment"
    required:
      - "operation_id"
      - "data"
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: object
        description: "Scheduled Payment Response Object"
        required:
          - "payment_id"
          - "authorisation_url"
        properties:
          payment_id:
            type: string
            description: "Payment Identifier"
          authorisation_url:
            type: string
            description: "The authorisation URL for a relevant payment provider. Redirect your Customer to this url to allow them to authorise the scheduled instruction"
          required_action:
            type: string
            description: |
              If present, this fild will indicate the next required action (if any) to be taken by the client in order to complete the payment flow

              | Value  |  Description |
              |:-------|:-------------|
              | confirm_scheduled_payment | Indicates that the client must confirm the scheduled payment using the Confirm Scheduled Payment endpoint in order to complete the payment flow. |

            enum:
              - confirm_scheduled_payment

  ListScheduledPaymentResponse:
    title: List Scheduled Payment Response
    type: object
    description: "Response structure when retrieving a filtered list of Scheduled Payment status'"
    required:
      - "operation_id"
      - "data"
      - "metadata"
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        description: "Array of Scheduled Payment Status Objects"
        type: array
        items:
          $ref: "#/schemas/ScheduledPaymentData"
      metadata:
        description: "Metadata associated with response"
        type: object
        required:
          - "total_results"
          - "results"
          - "page"
          - "total_pages"
        properties:
          total_results:
            type: integer
            description: "The total number of payment results for the request"
          results:
            type: integer
            description: "The number of payment results currently displayed on the page"
          page:
            type: integer
            description: "The current page number"
          total_pages:
            type: integer
            description: "The total number of pages for the request"

  GetScheduledPaymentResponse:
    title: Get Scheduled Payment Response
    type: object
    description: "Response structure when retrieving a specific Scheduled Payment status"
    required:
      - "operation_id"
      - "data"
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        $ref: "#/schemas/ScheduledPaymentData"
      metadata:
        type: object

  ScheduledPaymentData:
    title: Scheduled Payment Data
    type: object
    description: "Data structure for the Scheduled Payment object"
    required:
      - payment_id
      - organisation_id
      - client_id
      - reference
      - recipient
      - amount
      - sender
      - known_charges
      - state
      - errors
      - created_at
      - requested_execution_date
    properties:
      payment_id:
        type: string
        description: "Payment Identifier"
      organisation_id:
        type: string
        description: "Bud's Organisation Identifier"
      client_id:
        type: string
        description: "Bud's Client/App Identifier"
      reference:
        type: string
        description: "Reference to use for this payment"
      recipient:
        $ref: '#/schemas/PaymentRecipient'
      recurring_amount:
        $ref: 'components-common-schemas.yaml#/schemas/BudAmount'
      sender:
        $ref: '#/schemas/PaymentSender'
      known_charges:
        $ref: '#/schemas/KnownCharges'
      state:
        type: object
        required:
          - "status_code"
          - "status_message"
          - "history"
        properties:
          status_code:
            $ref: '#/schemas/ScheduledPaymentStatusCodeEnum'
          status_message:
            $ref: '#/schemas/ScheduledPaymentStatusMessageEnum'
          history:
            type: array
            items:
              type: object
              required:
                - "datetime"
                - "code"
                - "message"
              properties:
                datetime:
                  type: string
                code:
                  $ref: '#/schemas/ScheduledPaymentStatusCodeEnum'
                message:
                  $ref: '#/schemas/ScheduledPaymentStatusMessageEnum'
      errors:
        type: array
        description: "Details surrounding any errors when attempting to initiate a Scheduled Payment"
        items:
          type: object
          required:
            - code
            - description
          properties:
            code:
              type: string
              description: "Error Code"
            description:
              type: string
              description: "Text string used to give a description of the payment error"
      created_at:
        type: string
        format: date-time
        description: "Date-time (ISO 8601) of when the Scheduled Payment was created"
        example: "2020-06-01T15:00:00Z"
      requested_execution_date:
        type: string
        format: date-time
        description: "Date-time (ISO 8601) the Scheduled Payment should be made. Must be future date."
        example: "2020-06-01T15:00:00Z"
      required_action:
        type: string
        nullable: true
        description: |
          This field will indicate that there is an action required to be taken by the client in order to complete the payment.

          | Value  |  Description |
          |:-------|:-------------|
          | confirm_scheduled_payment | If present, this value indicates that client has yet to confirm the Scheduled Payment once the customer has successfully authorised the payment with the provider. This confirmation can be accomplished using the Confirm Scheduled Payment API Endpoint. Please note this step will only be relevant for clients using Bud as a Technical Service Provider (TSP) |

        items:
          type: string
          enum:
            - confirm_scheduled_payment

  ScheduledPaymentStatusCodeEnum:
    title: Scheduled Payment Status Codes
    type: string
    description: "The payment status code for a Scheduled Payment"
    enum:
      - "CREATED"
      - "AWAITING_AUTH"
      - "AUTH_REJECTED"
      - "AUTH_COMPLETED"
      - "PENDING"
      - "FAILED"
      - "COMPLETED"

  ScheduledPaymentStatusMessageEnum:
    title: Scheduled Payment Status Message
    type: string
    description: "The payment status message for a Scheduled Payment"
    enum:
      - "Scheduled Payment Created"
      - "Awaiting Customer Authentication"
      - "Authentication Failed"
      - "Authentication Completed"
      - "Payment Order Pending"
      - "Scheduled Payment Creation Failed"
      - "Scheduled Payment Creation Completed"

  PaymentsErrorResponse:
    type: object
    description: Payments Error Response
    required:
      - "operation_id"
      - "code_id"
      - "message"
      - "errors"
    properties:
      operation_id:
        type: string
        enum:
          - "v1_payments_providers_get"
          - "v1_payments_single_get"
          - "v1_payments_single_post"
          - "v1_payments_single_payment_id_auth_token_post"
          - "v1_payments_single_payment_id_get"
          - "v1_payments_single_confirm_post"
          - "v1_payments_authorisation_codes_post"
      code_id:
        type: string
        enum:
          - "failed_validation"
          - "internal_error"
          - "not_found"
          - "provider_in_maintenance_mode"
      message:
        type: string
        enum:
          - "Failed validation"
          - "Internal server error has occurred"
          - "Resource not found"
          - "[ProviderName] is currently in a maintenance mode, please try again later."
      errors:
        type: object

  PaymentStatusUpdatedNotificationBody:
    title: Payment Status Update Notification Body
    type: object
    required:
      - data
    properties:
      data:
        description: "Request which is sent to the subscribed URL when the status related to a payment has changed"
        required:
          - event
          - payment_id
          - service
          - user_id
        properties:
          payment_id:
            description: "The payment ID to which this event is associated"
            type: string
            example: "19677d9f-90e7-44a6-a32e-566990623da4"
          service:
            type: string
            enum: [ "domestic-single-payment", "domestic-scheduled-payment", "domestic-standing-order" ]
            description: "The type of payment to which this event is related"
          user_id:
            description: "The sender.user_id provided when the payment was created"
            type: string
            example: "19677d9f-90e7-44a6-a32e-566990623da4"
          event:
            type: string
            enum: [ "payment.success", "payment.failure" ]
            description: "The event related to the payment"

  #### Affordability Schemas

  AffordabilitySpendingGroupsRequest:
    title: Affordability Spending Groups Task Response
    type: object
    description: "Expected response structure"
    required:
      - "operation_id"
      - "data"
      - "metadata"
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        $ref: "#/schemas/TaskId"
      metadata:
        $ref: "#/schemas/AffordabilitySpendMetaData"

  AffordabilitySpendMetaData:
    title: Affordability Spending Groups Meta Data
    type: "object"
    description: "Metadata Response"
    required:
      - "to"
    properties:
      schema:
        $ref: '#/schemas/AffordabilitySpendRequestSchema'
      from:
        description: "Date (`YYYY-MM-DD`) from which the transactions should be returned from"
        type: string
      to:
        description: "Date (`YYYY-MM-DD`) from which the transactions should be returned to"
        type: string

  AffordabilitySpendRequestSchema:
    title: Affordability Spending Groups Request Schema
    type: array
    description: "The requested structure of the spend groups and their underlying categories."
    items:
      type: object
      required:
        - name
        - transaction_categories
      properties:
        name:
          description: "The name of a requested spend group"
          type: string
        transaction_categories:
          description: "The specified categories underlying a given spend group. These categories are dependent on your region. Please contact Bud for more details."
          type: array
          items:
            type: string

  AffordabilitySpendingGroupsResponse:
    title: Affordability Spending Groups Response
    type: object
    description: "Expected response structure"
    required:
      - "operation_id"
      - "data"
      - "metadata"
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        $ref: "#/schemas/AffordabilitySpendingGroupsResponseData"
      metadata:
        $ref: "#/schemas/AffordabilitySpendMetaData"

  AffordabilitySpendingGroupsResponseData:
    title: Affordability Spending Groups Response Data
    type: object
    properties:
      totals:
        type: object
        description: Each spending group will have their overall breakdown here (property names correspond to the group `name` given in the request).
        additionalProperties:
          $ref: "#/schemas/AffordabilitySpendingBreakdown"
      categories:
        type: object
        description: Each spending group will have their breakdown by category here (property names correspond to the group `name` given in the request).
        additionalProperties:
          type: object
          description: Each category within the spend group is broken down here (property names correspond to the `transaction_categories` specified in the group).
          additionalProperties:
            $ref: "#/schemas/AffordabilitySpendingBreakdown"

  AffordabilitySpendingBreakdown:
    title: Affordability Spending Groups Response Detail
    required:
      - total
      - average
      - minimum
      - maximum
      - transaction_count
      - income_percentage
    properties:
      total:
        allOf:
          - description: "The total amount in this spending group during the period."
          - $ref: "#/schemas/SignedAmounts"
      average:
        allOf:
          - description: "The mean amount in this spending group given the months searched."
          - $ref: "#/schemas/SignedAmounts"
      minimum:
        allOf:
          - description: "The minimum amount in this spending group within the months searched."
          - $ref: "#/schemas/SignedAmounts"
      maximum:
        allOf:
          - description: "The maximum amount in this spending group within the months searched."
          - $ref: "#/schemas/SignedAmounts"
      transaction_count:
        type: integer
        description: "Total number of transactions returned in the spending group"
      income_percentage:
        type: string
        description: "Percentage of the spending group in relation to income in this period."

  SignedAmounts:
    title: Income Or Outgoing Value
    required:
      - incoming
      - outgoing
    properties:
      incoming:
        $ref: "components-common-schemas.yaml#/schemas/BudAmount"
      outgoing:
        $ref: "components-common-schemas.yaml#/schemas/BudAmount"


# Retrieve Affordability Report Schema

  AffordabilityReportResponse:
    title: Retrieve Affordability Report Schema
    type: object
    description: "Expected response structure"
    required:
      - operation_id
      - data
    properties:
      operation_id:
        type: string
        enum:
          - v1_affordability_report
      data:
        $ref: "#/schemas/AffordabilityReport"

  AffordabilityReport:
      title: Retrieve Affordability Report Response
      type: object
      description: "Retrieve Affordability Report Response Data"
      required:
        - months_assessed
        - accounts
        - assessment
      properties:
        months_assessed:
          description: Details the start and end dates for which the affordability calculation has been run
          required:
            - start
            - end
          properties:
            start:
              description: Date (YYYY-MM) from which the calculation should be returned from
              type: string
            end:
              description: Date (YYYY-MM) from which the calculation should be returned to
              type: string
        accounts:
          description: Information surrounding a given Customer's Open Banking Account(s)
          required:
            - connected
            - holder_names
            - missing_data
          properties:
            connected:
              description: "Number of accounts connected."
              type: integer
            holder_names:
              description: "Account holder names associated to connected accounts."
              type: array
              items:
                type: string
            missing_data:
              description: "Data from the customer that is deemed (in)sufficient for making assessments."
              required:
                - income
                - expenditure
              properties:
                income:
                  description: "Specifies if there is enough data to determine customer's income."
                  type: boolean
                expenditure:
                  description: "Specifies if there is enough data to determine customer's expenditure."
                  type: boolean
        assessment:
          description: A breakdown of a customers income and expenditure.
          required:
            - income
            - expenditure
          properties:
            income:
              description: Detailing transactions linked to a customers income
              required:
                - net_disposable
                - net_discretionary
              properties:
                net_disposable:
                  allOf:
                    - description: "Income -- excluding benefits -- after taxes"
                    - $ref: "#/schemas/MonthlyPrediction"
                net_discretionary:
                  allOf:
                    - description: "Net disposable income subtract essential expenditure"
                    - $ref: "#/schemas/MonthlyIncomeExpenditurePrediction"
            expenditure:
              description: Detailing transactions linked to a customers expenditure
              required:
                - fixed
                - flexible
                - essential
                - non_essential
              properties:
                fixed:
                  description: An expense that is a fixed amount each month
                  allOf:
                    - $ref: "#/schemas/MonthlyPrediction"
                flexible:
                  description: A regular expense that differs in amount each month
                  allOf:
                    - $ref: "#/schemas/MonthlyRangePrediction"
                essential:
                  description: An expense that is not optional for a customer to pay, but isn’t necessarily the same in £ amount each month.  
                  allOf:
                    - $ref: "#/schemas/MonthlyPrediction"
                non_essential:
                  description: An expense that a customer does not necessarily need to make per month, and isn’t necessarily the same in £ amount each month.  
                  allOf:
                    - $ref: "#/schemas/MonthlyPrediction"

  MonthlyPrediction:
    title: Monthly Prediction
    type: object
    description: "Monthly Prediction Amount"
    required:
      - predicted_monthly
      - _links
    properties:
      predicted_monthly:
        $ref: "components-common-schemas.yaml#/schemas/BudAmount"
      _links:
        $ref: "#/schemas/TransactionsLinks"

  MonthlyIncomeExpenditurePrediction:
    title: Monthly Income & Expenditure Predictions
    type: object
    description:  "Monthly Income & Expenditure Predictions"
    required:
      - predicted_monthly
      - _links
    properties:
      predicted_monthly:
        $ref: "components-common-schemas.yaml#/schemas/BudAmount"
      _links:
        $ref: "#/schemas/IncomeAndExpenditureTransactionsLinks"

  MonthlyRangePrediction:
    title: Monthly Range Prediction
    type: object
    description: "Monthly Range"
    required:
      - predicted_monthly_range
      - _links
    properties:
      predicted_monthly_range:
        required:
          - low
          - high
          - average
        properties:
          low:
            $ref: "components-common-schemas.yaml#/schemas/BudAmount"
          high:
            $ref: "components-common-schemas.yaml#/schemas/BudAmount"
          average:
            $ref: "components-common-schemas.yaml#/schemas/BudAmount"
      _links:
        $ref: "#/schemas/TransactionsLinks"

  TransactionsLinks:
    title: Affordability Transaction Links
    type: object  
    description: "Transaction Links"
    required:
      - transactions
    properties:
      transactions:
        type: string
        format: uri

  IncomeAndExpenditureTransactionsLinks:
    title: Income & Expenditure Transactions Links
    type: object
    description: "Income & Expenditure Transactions Links"
    required:
      - income_transactions
      - expenditure_transactions
    properties:
      income_transactions:
        type: string
        format: uri
      expenditure_transactions:
        type: string
        format: uri

  SpendingGroupsTransactionsResponse:
    title: Spending Groups Transactions Response
    type: object
    description: "Expected response structure"
    required:
      - operation_id
      - data
    properties:
      operation_id:
        type: string
        enum:
          - v1_affordability_transactions_get
      data:
        type: array
        items:
          $ref: "#/schemas/SpendingGroupTransaction"

  SpendingGroupTransaction:
    title: Spending Groups Transaction Response Data
    type: object
    description: "Expected response structure"
    required:
      - transaction_id
      - account_id
      - amount
      - indicator
      - categories
    properties:
      transaction_id:
        description: Unique identifier for the transaction within an servicing institution. This identifier is both unique and immutable.
        type: string
      account_id:
        description: A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner
        type: string
      description:
        description: Further details of the transaction.
        type: string
      date:
        description: Date and time when a transaction entry is posted to an account on the account servicer's books. ISODateTime.
        type: string
        format: date
      indicator:
        type: string
        enum:
          - Credit
          - Debit
      amount:
        $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
      categories:
        $ref: "#/schemas/SpendingGroupCategories"
      criteria_satisfied:
        type: array
        items:
          $ref: "#/schemas/AffordabilityCriteria"

  SpendingGroupCategories:
    title: Spending Group Categories
    type: object
    description: "Spending Group Categories"
    required:
      - l1
      - l2
    properties:
      l1:
        description: The name of the category returned by the model.        
        type: string
      l2:
        description: The name of the sub category returned by the model.
        type: string

  AffordabilityCriteria:
    title: Affordability Criteria
    type: string
    description: "Affordability Criteria"
    enum:
      - "net_disposable_income"
      - "fixed_expenditure"
      - "flexible_expenditure"
      - "essential_expenditure"
      - "non_essential_expenditure"

  DateTimeISO8601:
    title: Date/Time (ISO 8601)
    type: string
    description: "ISO Date Format"
    example: "2022-03-05T13:34:33Z"

  CustomerID:
    type: string
    format: uuid
    description: "Unique identifier for a Customer, as registered on Bud's platform."
    example: "c3339af9-2426-44d4-9c4d-ddb8fd281e23"

  CustomerSecret:
    type: string
    description: "Customer secret."
    example: "6075654df0e057e97535ab31b80561d7d9e8409606738c2633cdd6dab63e089a"

  IngestTransactionsRequest:
    title: Ingest Transactions Request
    description: "Ingest transaction expected request body."
    type: array
    items:
      $ref: "#/schemas/CustomerWithTransactions"

  IngestTransactionsV2Request:
    title: Ingest Transactions Request
    description: "Ingest transaction expected request body."
    type: array
    items:
      type: object
      required:
        - customer_id
        - customer_secret
        - transactions
      properties:
        customer_id:
          $ref: "#/schemas/CustomerID"
        customer_secret:
          $ref: "#/schemas/CustomerSecret"
        transactions:
          type: array
          description: "List of transactions belonging to the customer."
          items:
            $ref: "#/schemas/CustomerTransactionV2"

  IngestTransactionsV3Request:
    title: Ingest Transactions Request
    description: "Ingest transaction expected request body."
    type: array
    items:
      type: object
      required:
        - customer_id
        - customer_secret
        - transactions
      properties:
        customer_id:
          $ref: "#/schemas/CustomerID"
        customer_secret:
          $ref: "#/schemas/CustomerSecret"
        transactions:
          type: array
          description: "List of transactions belonging to the customer."
          minLength: 1
          items:
            $ref: "#/schemas/CustomerTransactionV3"
        transaction_windows:
          type: array
          description: |
            The transaction window is used to describe the entire period for which you have 
            provided full coverage for the transactions within the request. It is used by Bud to 
            ascertain periods of inactivity on the account(s) in question to ensure accurate data 
            can be provided across downstream endpoints (e.g. Retrieve Balances Over Time).
          items:
            $ref: "#/schemas/TransactionV3Window"

  CustomerWithTransactions:
    title: Customer With Transactions
    description: "A customer with a list of transactions."
    type: object
    required:
      - customer_id
      - customer_secret
      - transactions
    properties:
      customer_id:
        type: string
        format: uuid
        description: "Unique identifier for a Customer, as registered on Bud's platform."
        example: "c3339af9-2426-44d4-9c4d-ddb8fd281e23"
      customer_secret:
        type: string
        description: "Customer secret."
        example: "6075654df0e057e97535ab31b80561d7d9e8409606738c2633cdd6dab63e089a"
      transactions:
        type: array
        description: "List of transactions belonging to the customer."
        items:
          $ref: "#/schemas/CustomerTransactionV2"

  CustomerTransactionV2:
    title: Customer Transaction
    description: "A transaction item."
    type: object
    required:
      - provider
      - account_id
      - transaction_id
      - transaction_type
      - date
      - transaction_description
      - credit_debit_indicator
      - status
      - counterparty
      - amount
    properties:
      provider:
        type: string
        description: "The name of the provider."
        example: "Lloyds"
      account_id:
        type: string
        description: "Unique identifier for the Customer bank account."
        example: "44568cce263a"
      transaction_id:
        type: string
        description: "Unique identifier for the transaction."
        example: "8a5a3408bb9e"
      transaction_type:
        type: string
        enum:
          - DEB
          - CSQ
          - CHG
          - COR
          - CPT
          - INT
          - OTH
          - BAT
          - DD
          - SO
        description: |
          enum | Description
          ---- | -----------
          DEB  | Debit Card / Credit Card
          CSQ  | Cash / Cheque(s)
          CHG  | Charge
          COR  | Correction
          CPT  | Cashpoint / ATM
          INT  | Interest
          OTH  | Other
          BAT  | Bank Transfer<br />e.g. FP/MP/IB/BACS/CHAPS/SWIFT
          DD   | Direct Debit
          SO   | Standing Order
        example: "DEB"
      date:
        type: string
        format: date
        description: "The date of the transaction. ISO 8601/RFC 3339 format `yyyy-mm-dd`."
        example: "2020-01-31"
      time:
        type: string
        description: "The time of the transaction. ISO 8601/RFC 3339 format `hh:mm:ss`. Default `00:00:00`."
        example: "23:59:00"
        default: "00:00:00"
      transaction_description:
        type: string
        description: "Further details of the transaction."
        example: "The RSPCA, Southwater"
      credit_debit_indicator:
        type: string
        enum:
          - incoming_credit
          - outgoing_debit
        description: "Indication as to whether the transaction was a credit or debit."
        example: "incoming_credit"
      status:
        type: string
        enum:
          - pending
          - booked
        description: "The status of the transaction."
        example: "pending"
      counterparty:
        $ref: "#/schemas/Counterparty"
      amount:
        $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
      local_amount:
        allOf:
          - description: "The original/local monetary amount"
          - $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"

  CustomerTransactionV3:
    title: Customer Transaction V3
    description: "A schema for Bud V3 transaction format"
    allOf:
      - $ref: "components-common-schemas.yaml#/schemas/LegacyBudAmount"
      - type: object
        required:
          - transaction_id
          - account_id
          - description
          - date_time
        properties:
          transaction_id:
            type: string
            format: uuid
            description: "Unique, immutable transaction identifier"
            example: "4cef424c-1d7f-4cab-8be2-aee7e1774a00"
          description:
            type: string
            description: "Free text string providing details on the transaction itself"
          account_id:
            type: string
            format: uuid
            description: "Unique, immutable transaction identifier to show that a transaction belongs to a given account"
            example: "2f5b2055-6253-4cd0-b646-06788342a609"
          date_time:
            type: string
            format: datetime
            description: "The date detailing when the transaction occurred, compliant with RFC3339"
            example: "2022-11-10T23:00:00Z"

  TransactionV3Window:
    type: object
    title: Transaction Window
    required:
      - account_id
      - start
      - end
    properties:
      account_id:
        type: string
        format: uuid
        description: "Unique, immutable transaction identifier to show that a transaction window belongs to a given account"
        example: "2f5b2055-6253-4cd0-b646-06788342a609"
      start:
        type: string
        format: datetime
        description: "The date detailing the start of the transaction window, compliant with RFC3339"
        example: "2022-05-10T23:00:00Z"
      end:
        type: string
        format: datetime
        description: "The date detailing the end of the transaction window, compliant with RFC3339"
        example: "2022-10-10T23:00:00Z"

  IngestV2Response:
    type: object
    required:
      - operation_id
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
        example: v2_ingest_transactions_post


  IngestV2SyncResponseData:
    type: object
    title: Enriched Customer Transactions
    required:
      - customer_id
      - enriched_transactions
    properties:
      customer_id:
        $ref: "#/schemas/CustomerID"
      enriched_transactions:
        type: array
        items:
          $ref: "financial-data.yaml#/components/schemas/Transaction"

  IngestV2SyncResponse:
    title: Ingest Transactions V2 Sync Response
    type: object
    allOf:
      - $ref: "#/schemas/IngestV2Response"
      - type: object
        required:
          - operation_id
          - metadata
        properties:
          data:
            type: array
            items:
              $ref: "#/schemas/IngestV2SyncResponseData"
          metadata:
            $ref: "#/schemas/IngestV2Metadata"

  IngestV2AsyncResponse:
    title: Ingest Transactions V2 Async Response
    type: object
    allOf:
      - $ref: "#/schemas/IngestV2Response"
      - type: object
        required:
          - operation_id
          - metadata
        properties:
          metadata:
            $ref: "#/schemas/IngestV2Metadata"

  IngestV2Metadata:
    title: "Created Task Details"
    description: "Metadata on the created task, including the task_id"
    type: object
    required:
      - task_id
    properties:
      task_id:
        type: string
        format: uuid
        description: "Can be used with the transaction status endpoint to retrieve the status of the full enriched process"
      next_url:
        type: string
        format: uri
        description: The URL to call to obtain the current status of the task.
        example: /v1/enrich-transactions/4cef424c-1d7f-4cab-8be2-aee7e1774a00
      next_url_delay:
        type: number
        description: The time in milliseconds that the client should wait before trying to retrieve
          the current status of the task.
        example: 50

  Counterparty:
    title: Counterparty
    type: object
    description: "Describes the party the money was deposited to or taken from."
    required:
      - name
      - address
      - schema
      - identifier
    properties:
      name:
        type: string
        description: "The name of the party."
        example: "The RSPCA"
      address:
        type: string
        description: "The address of the party."
        example: "1824, Strand, London"
      schema:
        type: string
        enum:
          - SortCodeAccountNumber
        description: "The schema used by the party."
        example: "SortCodeAccountNumber"
      identifier:
        type: string
        description: "The identifier assigned by the party."
        example: "20200811151300"

  IngestTransactionsResponse:
    title: Ingest First Party Transaction Data Response
    description: "Ingest transactions response body."
    type: object
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: object
        properties:
          task_id:
            $ref: "#/schemas/TaskId"
      metadata:
        $ref: "#/schemas/AsyncTaskMetadata"

  IngestStatusResponse:
    title: Ingest Response
    type: object
    description: "Expected response structure."
    required:
      - operation_id
      - data
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        $ref: "#/schemas/IngestResponseTask"

  IngestResponseTask:
    title: Ingest Response Task
    description: "Expected response structure."
    type: object
    required:
      - id
      - status
      - sub_tasks
    properties:
      id:
        type: string
        format: "uuid"
        description: "Unique task identifier."
      status:
        $ref: "#/schemas/IngestResponseStatus"
      sub_tasks:
        type: array
        items:
          $ref: "#/schemas/IngestResponseSubTask"

  IngestResponseSubTask:
    title: Ingest Response Sub Task
    description: "Expected response for each sub task structure."
    type: object
    required:
      - id
      - customer_id
      - status
      - errors
    properties:
      id:
        type: string
        format: "uuid"
        description: "Unique sub task identifier."
      customer_id:
        type: string
        format: "uuid"
        description: "Unique identifier for a Customer, as registered on Bud's platform."
      status:
        $ref: "#/schemas/IngestResponseStatus"
      errors:
        nullable: true
        description: "Any error messages describing why a sub task has failed."
        type: object
        additionalProperties:
          type: string
          description: "Details surrounding a relevant error message"

  IngestResponseStatus:
    title: Ingest Response Status
    description: "Ingest response status."
    type: string
    enum:
      - "Completed"
      - "Pending"
      - "Failed"

  ##### KYC
  KYCAddress:
    type: "object"
    description: "Address."
    properties:
      country:
        type: string
        description: "2-character ISO country code of this address. Required for some profiles. For example: GB is the country code for United Kingdom"
      county:
        type: string
        description: "Address county"
      line_five:
        nullable: true
        type: string
        description: "Address line 5"
      line_four:
        nullable: true
        type: string
        description: "Address line 4"
      line_six:
        nullable: true
        type: string
        description: "Address line 6"
      line_three:
        nullable: true
        type: string
        description: "Address line 3"
      name_number:
        type: string
        description: "Flat/building name (or) number"
      postcode:
        type: string
        description: "Address postcode (or) ZIP"
      state:
        type: string
        description: "Address state"
      street:
        type: string
        description: "Address street"
      town:
        type: string
        description: "Address town"

  Person:
    description: "Person."
    type: object
    properties:
      bank_account:
        type: object
        properties:
          account_number:
            type: string
          sort_code:
            type: string
      current_address:
        $ref: '#/schemas/KYCAddress'
      date_of_birth:
        type: string
        format: "yyyy-mm-dd"
      email_address:
        type: array
        items:
          type: string
      first_name:
        type: string
      gender:
        type: string
        enum: [ "male", "female" ]
      identification_details:
        type: array
        items:
          type: object
          properties:
            issuing_country:
              type: string
            number:
              type: string
            type:
              type: string
              enum: [ "passport", "driving_licence", "residence_permit", "visa", "id_card" ]
      last_name:
        type: string
      middle_name:
        type: string
      mpan:
        type: string
      phone:
        type: array
        items:
          type: object
          properties:
            number:
              type: string
            type:
              type: string
              enum: [ "mobile", "landline" ]
      previous_address:
        type: array
        items:
          $ref: '#/schemas/KYCAddress'
      title:
        type: string
        enum: [ "mr", "mrs" ]

  CustomData:
    description: "A key value pairs array of custom data."
    type: array
    items:
      type: object
      properties:
        key:
          type: string
          description: "Key for the custom section."
        value:
          type: string
          description: "Value for the custom section."

  KYCHeader:
    description: "Meta data used to identify you request reference."
    type: object
    properties:
      profile_uuid:
        type: string
        description: "ProfileUuid of the profile that will be used to perform the check."
      transaction_reference:
        type: string
        description: "Transaction reference that the user can provide for the check. This is mandatory on Sandbox environment."

  CheckCompanyRequest:
    description: "Expected request body."
    type: object
    properties:
      company:
        type: object
        properties:
          description:
            type: string
          name:
            type: string
          phone:
            type: object
            properties:
              number:
                type: string
              type:
                type: string
                enum: [ "mobile", "landline" ]
          registered:
            $ref: "#/schemas/KYCAddress"
          registration_number:
            type: string
          tax_number:
            type: string
          trading:
            $ref: '#/schemas/KYCAddress'
          type:
            type: string
          vat_number:
            type: string
          website:
            type: string
      contacts:
        type: array
        items:
          $ref: '#/schemas/Person'
      custom_data:
        $ref: "#/schemas/CustomData"
      header:
        $ref: "#/schemas/KYCHeader"

  CheckPersonRequest:
    type: object
    properties:
      person:
        $ref: '#/schemas/Person'
      custom_data:
        $ref: "#/schemas/CustomData"
      header:
        $ref: "#/schemas/KYCHeader"

  CheckResponseCheckId:
    type: "object"
    description: "Expected response structure for company check initiation."
    required:
      - "operation_id"
      - "data"
    properties:
      operation_id:
        type: "string"
      data:
        type: "object"
        properties:
          check_uuid:
            type: "string"

  BadKycRequestResponse:
    type: "object"
    description: "Expected response structure."
    required:
      - "operation_id"
      - "error"
    properties:
      operation_id:
        type: "string"
      error:
        type: "object"
        properties:
          code:
            type: string
            description: "This will contain the Northrow error code. Reserved for future releases."
          error:
            type: string
            description: "This will contain the Northrow error code. Reserved for future releases."
          errorDetail:
            type: array
            description: "Detail for the error."
            items:
              type: object
              properties:
                field:
                  type: string
                  description: "Field that has gone wrong"
                message:
                  type: string
                  description: "Detail message for the error"
          path:
            type: string
            description: "The endpoint that has failed."
          status:
            type: integer
            description: "HTTP Status code"
          timestamp:
            type: string
            description: "Timestamp for the error"

  CheckStatusResponse:
    type: object
    properties:
      alerts:
        description: "List of alerts for the check."
        type: array
        items:
          type: object
          properties:
            category:
              description: "Category of the alert. Valid values are: Person,Company,ID,Other,Risk."
              type: string
              enum: [Person,Company,ID,Other,Risk]
            crid:
              type: string
              description: "Unique NorthRow rule ID of the alert."
            message:
              type: string
              description: "Description of the alert."
            score:
              type: integer
              description: "Score of the alert."
            type:
              type: string
              description: "Type of the alert. Valid values are: alert, info, verification."
              enum: [alert, info, verification]
      category:
        type: string
        description: "Category of the check. Valid values are: person, company."
        enum: [person, company]
      center_location:
        type: string
        description: "Center location for the check if it was supplied in the initial request."
      client_name:
        type: string
        description: "Client name used in the check."
      company_name:
        type: string
        description: "Company name used in the check."
      date:
        type: string
        description: "Date when the check was submitted in yyyy-MM-dd HH:mm:ss format."
        format: "yyyy-MM-dd HH:mm:ss"
      document_count:
        type: integer
        description: "Number of documents included in the check."
      error_messages:
        type: array
        description: "Error messages if the check was not executed as expected."
        items:
          type: string
      org_uid:
        type: string
        description: "Organisation uuid for the check."
      profile:
        type: object
        properties:
          name:
            type: string
            description: "Profilename of the profile used in the check."
          uuid:
            type: string
            description: "ProfileUUID of the profile used in the check."
      rag:
        type: string
        description: "RAG for the check , if the check is incomplete a RAG of 'waiting' will be returned. Valid values are: red, amber, green, waiting."
        enum: [red, amber, green, waiting]
      score:
        type: integer
        description: "Total score generated for the check."
      status:
        type: string
        description: "Status of the check. Valid values are: live: for active checks, archived: for archived checks."
        enum: [live, archived]
      suspicious:
        type: boolean
        description: "Check marked as suspicious."
      transaction_reference:
        type: string
        description: "Reference used by the customer for the check."
      user:
        type: string
        description: "Username of the user who performed the check."
      uuid:
        type: string
        description: "Unique CheckUuid of the check."

  ReconfirmConsentRequest:
    title: "Reconfirm Consent Request"
    type: object
    description: "Expected request payload structure"
    required:
      - "provider"
    properties:
      provider:
        type: string
        description: "The name of the provider the task is trying to reconfirm consent for"

  ReconfirmConsentResponse:
    title: "Reconfirm Consent Response"
    type: object
    description: "Expected response payload structure"
    required:
      - "operation_id"
      - "data"
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        $ref: "#/schemas/ConsentReconfirmation"

  ConsentReconfirmation:
    title: "Consent Reconfirmation Outcome"
    type: object
    description: "Result of performing a reconfirmation of consent task"
    required:
      - "provider_id"
      - "reconnect_required"
    properties:
      provider_id:
        type: string
        description: "The provider that the reconfirmation of consent was performed against"
      reconnect_required:
        $ref: "#/schemas/ReconnectRequired"

  ConnectResultCodes:
    type: string
    description: "The result of the operation. Either success or various error codes."
    enum:
      - success
      - task_not_found
      - account_not_found
      - internal_error
      - internal_timeout
      - internal_transient_error
      - failed_validation
      - request_validation
      - auth_denied
      - auth_expired
      - connection_not_found
      - connection_expired
      - connection_revoked
      - connection_status
      - connection_permission
      - provider_not_found
      - provider_failure
      - provider_timeout
      - provider_maintenance
      - provider_request_limit
      - provider_endpoint_unimplemented
      - provider_endpoint_deprecated
      - provider_reauthenticate
      - failed_body_decode

  ReconnectRequired:
    type: boolean
    description: "Indicator as to whether the account needs to be connected again, through SCA authentication."
  AccountType:
    title: Account Type Field
    type: string
    enum:
      - personal
      - business
  AccountSubType:
    title: Account Sub-Type Field
    type: string
    enum:
      - charge_card
      - credit_card
      - current_account
      - e_money
      - loan
      - mortgage
      - pre_paid_card
      - savings
  BalanceOverTimeDataPoint:
    title: Balance Over Time Data-Point
    description: A single record of the balance at the end of the given date.
    type: object
    required:
      - date
      - booked
    properties:
      date:
        type: string
        description: |
          The date of the given balance in the format [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339).

          Examples:
            - `2023-03-17T23:59:59Z`
            - `2023-03-17T23:59:59-08:00`
      booked:
        description: The current balance of the account
        $ref: "#/schemas/BalanceAmount"
      pending:
        description: The balance of the account if all pending transactions have settled. This field is only present if the pending balance is different than the booked balance.
        $ref: "#/schemas/BalanceAmount"
  BalanceAmount:
    title: Balance amount
    description: A representation of both the amount and the credit/debit indicator
    required:
      - amount
      - type
      - credit_debit_indicator
    properties:
      amount:
        $ref: "components-common-schemas.yaml#/schemas/BudAmount"
      type:
        type: string
        description: |
          The type for the given balance

          Currently supported values include (but are not necessarily limited to):
            - `closing_available`
            - `closing_booked`
            - `closing_cleared`
            - `expected`
            - `forward_available`
            - `information`
            - `interim_available`
            - `interim_booked`
            - `interim_cleared`
            - `opening_available`
            - `opening_booked`
            - `opening_cleared`
            - `previously_closed_booked`
      credit_debit_indicator:
        type: string
        description: Indication as to whether the balance is in credit or debit
        enum:
          - credit
          - debit
  GetBalancesForAccountIDResponse:
    title: Get Balances For Account ID Response
    type: object
    required:
      - operation_id
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: array
        items:
          $ref: "#/schemas/BalanceOverTimeDataPoint"
      metadata:
        type: object
        properties:
          account:
            description: Metadata about the response for the given account_id
            allOf:
              - $ref: "components-common-schemas.yaml#/schemas/BudDateRangeMetadata"
              - type: object
                properties:
                  balance_count:
                    type: number
                    description: The number of balances returned for the account
          parameters:
            allOf:
              - $ref: "components-common-schemas.yaml#/schemas/BudDateRangeMetadata"
              - type: object
                properties:
                  granularity:
                    type: string
                    description: "The granularity that the balances have been retrieved for."
                  account_id:
                    type: string
                    description: "The account ID the balances have been retrieved for."
  GetBalancesResponse:
    title: Get Balances Response
    type: object
    required:
      - operation_id
    properties:
      operation_id:
        $ref: "components.yaml#/schemas/OperationId"
      data:
        type: array
        items:
          type: object
          required:
            - balances
          properties:
            account_id:
              type: string
              description: "Identifier of the accounts from which the balances have been calculated"
            balances:
              type: array
              items:
                $ref: "#/schemas/BalanceOverTimeDataPoint"
      metadata:
        type: object
        properties:
          accounts:
            description: This is a hashmap representing account_ids and metadata about the results returned from the balances endpoint
            allOf:
            - $ref: "components-common-schemas.yaml#/schemas/BudDateRangeMetadata"
            - type: object
              additionalProperties:
                description: Metadata about the response for the given account_id
                type: object
                properties:
                  balance_count:
                    type: number
                    description: The number of balances returned for the account
          parameters:
            title: The parameters used to calculated balances
            allOf:
              - $ref: "components-common-schemas.yaml#/schemas/BudDateRangeMetadata"
              - type: object
                properties:
                  granularity:
                    type: string
                    description: "The granularity that the balances have been retrieved for."
                granularity:
                  type: string
                  description: "The granularity that the balances have been retrieved for."
  BodyDecodeError:
    type: object
    title: "JSON Decoding Error"
    required:
      - operation_id
      - code_id
      - message
      - errors
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      code_id:
        type: string
        enum:
          - failed_body_decode
      message:
        type: string
        description: "High level description on what has failed "
      errors:
        type: object
        description: "Contains more details on the decoding error"
        required:
          - decode_error
        properties:
          decode_error:
            type: string

  ValidationError:
    type: object
    title: "Validation Errors"
    required:
      - operation_id
      - code_id
      - message
      - errors
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      code_id:
        type: string
        enum:
          - failed_validation
      message:
        type: string
        description: "High level description on what has failed "
      errors:
        type: object
        title: Map of customer IDs
        description: "a map of customer IDs to transaction validation errors"
        properties:
          missing_fields:
            type: object
            title: Map of transaction IDs
            description: |
              A map of transaction IDs to missing fields array. 
              If the transaction ID was missing use the request transaction array index to identify it. 
              See example
            additionalProperties:
              $ref: "#/schemas/ValidationMissing"
          invalid_fields:
            type: object
            title: Map of transaction IDs
            description: |
              A map of transaction IDs to invalid fields array. 
              If the transaction ID was missing use the request transaction array index to identify it. 
              See example
            additionalProperties:
              $ref: "#/schemas/ValidationInvalid"
    example:
      operation_id: enrich_transactions_post
      code_id: failed_validation
      message: validation failure(s) in request payload
      errors:
        1db8c4b5-e5ae-429e-947b-6a4616ffc717:
          missing_fields:
            8b13ac45-9fe6-4c17-8c6d-b60ab2b4edad:
              - "description"
              - "customer_id"
            ba466961-d623-4173-9001-2f6487a9a41e:
              - "customer_id"
            tx-1:
              - "transaction_id"
            578f24f2-5046-463a-bca6-239e0dfac7fa:
              - "amount"
          invalid_fields:
            8b13ac45-9fe6-4c17-8c6d-b60ab2b4edad:
              - "date"
            ba466961-d623-4173-9001-2f6487a9a41e:
              - "date"

  ValidationMissing:
    type: array
    title: "Missing Fields"
    description: "list of required missing fields for a transaction"
    items:
      type: string

  ValidationInvalid:
    type: array
    title: "Invalid Fields"
    description: "list of invalid fields for a transaction"
    items:
      type: string

  FailedValidationError:
    type: object
    title: "Failed Validation"
    required:
      - operation_id
      - code_id
      - message
      - errors
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      code_id:
        type: string
        enum:
          - failed_validation
      message:
        type: string
        description: "High level description on what has failed"
      errors:
        type: object
        description: "Contains a field specific error messages"
    example:
      operation_id: "ingest_transactions_get"
      code_id: "failed_validation"
      message: "Failed validation"
      errors:
        task_id: "A valid task ID URI parameter is required"

  TaskNotFoundError:
    type: object
    title: "Task Not Found"
    required:
      - operation_id
      - code_id
      - message
      - errors
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      code_id:
        type: string
        enum:
          - not_found
      message:
        type: string
        description: "High level description on what has failed"
    example:
      operation_id: "ingest_transactions_get"
      code_id: "not_found"
      message: "Task not found"

  ListAccountsV2Response:
    title: "Retrieve Accounts Response"
    type: object
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        type: string
        enum:
          - "financial_v2_accounts"
      data:
        type: array
        items:
          $ref: "#/schemas/AccountV2"
      metatdata:
        type: object
        required:
          - parameters
          - result_count
        properties:
          parameters:
            type: object
            properties:
              currencies:
                description: "The Currency values supplied in the request to generate the given result set."
                type: array
                items:
                  - $ref: "components-common-schemas.yaml#/schemas/BudCurrency"
              account_types:
                description: |
                  The Account Type values supplied in the request to generate the given result set.
                  
                  Currently supported values include (but are not necessarily limited to):
                    - `charge_card`
                    - `credit_card`
                    - `current_account`
                    - `e_money`
                    - `loan`
                    - `mortgage`
                    - `pre_paid_card`
                    - `savings`
                type: array
                items:
                  type: string
              usage_types:
                description: |
                  The Usage Type values supplied in the request to generate the given result set.

                  Currently supported values include (but are not necessarily limited to):
                    - `personal`
                    - `business`
                type: array
                items:
                  type: string
              holder_types:
                description: |
                  The Holder Type values supplied in the request to generate the given result set.

                  Currently supported values include (but are not necessarily limited to):
                    - `sole`
                    - `joint`
                    - `delegate`
                    - `unknown`
                type: array
                items:
                  type: string
              providers:
                description: "The Provider values supplied in the request to generate the given result set." 
                type: array
                items:
                  type: string
          result_count:
            type: number
            description: "The number of accounts returned in the results"

  RetrieveAccountByIDV2Response:
    title: "Retrieve Account By ID Response"
    type: object
    required:
      - operation_id
      - data
      - metadata
    properties:
      operation_id:
        type: string
        enum:
          - "financial_v2_accounts_account_id"
      data:
        $ref: "#/schemas/AccountV2"
      metatdata:
        type: object

  AccountV2:
    title: "Account"
    type: object
    required:
      - account_id
      - currency
    properties:
      account_id:
        type: string
        description: |
          A unique id associated with the account.

          Example: `sdb4eRMaad8XVEvdIoISOQ`
      currency: 
        $ref: "components-common-schemas.yaml#/schemas/BudCurrency"
      holder:
        title: "Account Holder"
        description: | 
          The account holder. This field is only present if parties data **is not** available.

          Parties data will only be present if you are a Check customer, and the provider is support by Check. 
          Providers that support Check can be found in the Connect coverage table in Guides, under Connect.
        type: object
        properties:
          name:
            type: string
            description: |
              The name of the given account holder.

              Example: `John Smith`
          relationship:
            type: string
            description: |
              The relationship that the individual holder has with the account. If parties data is not present, this will always be `unknown`.

              Currently supported values include (but are not necessarily limited to):
                - `sole`
                - `joint`
                - `delegate`
                - `unknown`
      holders:
        type: array
        description: | 
          The account holders. This field is only present if parties data **is** available.

          Parties data will only be present if you are a Check customer, and the provider is supported by Check. 
          Providers that support Check can be found in the Connect coverage table in Guides, under Connect.
        items: 
          title: "Account Holder"
          type: object
          properties:
            name:
              type: string
              description: |
                The name of the given account holder.

                Example: `John Smith`
            relationship:
              type: string
              description: |
                The relationship that the individual holder has with the account. If parties data is not present, this will always be `unknown`

                Currently supported values include (but are not necessarily limited to):
                  - `sole`
                  - `joint`
                  - `delegate`
                  - `unknown`
      account_name:
        type: string
        description: |
          The name associated with the account, this is often a friendly name assigned to the account to make it easier to refer to.

          Example: `Household Savings Account`
      account_type:
        type: string
        description: | 
          The type of account.

          Currently supported values include (but are not necessarily limited to):
            - `charge_card`
            - `credit_card`
            - `current_account`
            - `e_money`
            - `loan`
            - `mortgage`
            - `pre_paid_card`
            - `savings`
      usage_type:
        type: string
        description: |
          The intended usage of the account.

          Currently supported values include (but are not necessarily limited to):
            - `personal`
            - `business`
      provider:
        type: string
        description: |
          The account's provider, this is usually the bank or building society the account is held with.

          Example: `Nationwide`
      identifiers: 
        type: object
        description: "These are wellknown fields which uniquely identify the account."
        properties:
          uk_sort_code:
            type: string
            description: |
              A six digit number identifying the UK bank or building society the account is held with. This is usually supplied alongside a `uk_account_number` to uniquely identify the account.
              
              Example: `601613`
          uk_account_number:
            type: string
            description: |
              An eight digit number uniquely identifying the account for the UK bank or building society the account is held with. This is usually supplied alongside a `uk_sort_code` to uniquely identify the account from accounts with other UK banks or building societies.

              Example: `31926819`
          nz_account_number:
            type: string
            description: | 
              A sixteen digit number uniquely identifying the account and New Zealand bank the account is held with.

              Example: `1212341234567123`
          iban:
            type: string
            description: |
              A thirty-four character alphanumerical code (ISO 13616), internationally and uniquely identifying the account.

              Example: `GB29NWBK60161331926819`
          pan:
            type: string
            description: |
              A number between 14 and 19 digits that uniquely identifies the account, this is usually the number printed on the card assigned to the account.

              Example: `4444333322221111`
      balances:
        type: array
        title: Balances
        description: "The latest balances for the account."
        items:
          type: object
          title: "Balance"
          required:
            - date
            - type
            - amount
            - credit_debit_indicator
          properties:
            date:
              type: string
              description: |
                The date when the balance was last updated in the format [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339).

                Examples:
                  - `2023-01-17T17:29:51Z`
                  - `2023-01-17T17:29:51-08:00`
            type:
              type: string
              description: |
                The type for the given balance

                Currently supported values include (but are not necessarily limited to):
                  - `closing_available`
                  - `closing_booked`
                  - `closing_cleared`
                  - `expected`
                  - `forward_available`
                  - `information`
                  - `interim_available`
                  - `interim_booked`
                  - `interim_cleared`
                  - `opening_available`
                  - `opening_booked`
                  - `opening_cleared`
                  - `previously_closed_booked`
            amount:
              $ref: "components-common-schemas.yaml#/schemas/BudAmount"
            credit_debit_indicator:
              type: string
              description: "The credit or debit state of the given balance"
              enum:
                - credit
                - debit
      credit_lines:
        type: array
        Title: "Credit Lines"
        description: "The latest lines of credit available to the account. This is typically a representation of the overdraft or credit limits."
        items:
          type: object
          title: "Credit Line"
          required:
            - date
            - type
            - amount
          properties:
            date:
              type: string
              description: |
                The date when the credit line was last updated in the format [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339).

                Examples:
                  - `2023-01-17T17:29:51Z`
                  - `2023-01-17T17:29:51-08:00`
            type:
              type: string
              description: |
                The type of the given credit line.

                Currently supported values include (but are not necessarily limited to):
                  - `available`
                  - `credit`
                  - `emergency`
                  - `pre_agreed`
                  - `temporary`
            amount:
              $ref: "components-common-schemas.yaml#/schemas/BudAmount"

  GetProductsResponseV2:
    title: Retrieve Financial Products V2 Response Strucutre
    type: object
    required:
      - operation_id
      - metadata
    properties:
      operation_id:
        $ref: "#/schemas/OperationId"
      data:
        type: array
        items:
          title: Financial Product
          description: A Financial Product that a customer uses.
          type: object
          required:
            - type
            - merchant
            - amount
            - period
          properties:
            type:
              title: Financial Product Type
              description: |
                A list of the types products and services identified for the given Financial Product. Potential values could be (but not limited to):
                  - `loan`
                  - `bnpl`
                  - `mortgage`
                  - `insurance`
                  - `store_card`
                  - `credit_card`
                  - `private_pension`
                  - `savings_and_investment`
              type: array
              items:
                type: string
            merchant:
              title: Financial Product Merchant
              description: Details of the merchant providing the Financial Product.
              type: object
              required:
                - id
                - name
                - logo
              properties:
                id:
                  type: string
                  description: A unique ID for the merchant.
                name:
                  type: string
                  description: The merchant's name in a displayable format.
                logo:
                  type: string
                  description: The merchant's logo image URL location.
            amount:
              $ref: "components-common-schemas.yaml#/schemas/BudAmount"
            period:
              title: Transaction Period
              description: |
                The period between each transaction for the given product. Possible values are:
                - `daily` -  This product is charged once a day.
                - `weekly` - This product is charged once a week.
                - `biweekly` - This product is charged once every two weeks.
                - `monthly` - This product is charged once a monthy.
                - `quarterly` - This product is charged once a quater (every 3 months).
                - `six_monthly` - product is charged every six months.
                - `annually` - This product is charged once a year.
                - `unknown` - It is unknown how frequently this product is charged.
              type: string
              enum:
                - daily
                - weekly
                - biweekly
                - monthly
                - quarterly
                - six_monthly
                - annually
                - unknown
      metadata:
        title: Metadata
        allOf:
          - $ref: "components-common-schemas.yaml#/schemas/BudDateRangeMetadata"
          - type: object
            required:
              - results
            properties:
              results:
                type: number
                title: Results count
                description: Number of products returned.
